"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),require("../constants/index.js"),require("./index.js");const e=require("element-plus"),r=require("lodash-unified"),t=require("../constants/mime.js"),o=require("./console.js"),s=require("./axios.js"),a={};for(const[n,c]of Object.entries(t.FaMimeType))c.split(",").forEach((e=>{a[e.trim()]=n}));const i={detectFileType(e){const r=new Set;return e.split(",").forEach((e=>{r.add(a[e]??e)})),Array.from(r).join(",")},getPropsData(e,t){let o;o=r.isFunction(t)?t(e):t;const s={};return r.isArray(t)?t.forEach((e=>{Object.assign(s,e)})):Object.assign(s,o),s},async uploadFile(r,t,a,i){if(!r)return o.consoleError("uploadUtil","文件上传地址为空！"),e.ElMessage.error("文件上传地址为空！"),Promise.reject();const n=new FormData;n.append("file",t),n.append("fileName",a),i&&Object.keys(i).forEach((e=>{n.append(e,i[e])}));try{const e=await s.axiosUtil.request({headers:{"Content-Type":"multipart/form-data"},url:r,method:"post",data:n,cancelDuplicateRequest:!1});return Promise.resolve(e.data)}catch(c){return o.consoleError("uploadUtil","文件上传失败！",c),e.ElMessage.error("文件上传失败！"),Promise.reject()}}};exports.uploadUtil=i;
//# sourceMappingURL=upload.js.map
