{"version":3,"file":"deviceId.js","sources":["../../../packages/utils/deviceId.ts"],"sourcesContent":["import { RegExps } from \"@fast-element-plus/constants\";\nimport { Local, stringUtil } from \"@fast-element-plus/utils\";\n\n/**\n * 设备Id Key\n */\nexport const DEVICE_ID_KEY = \"__DEVICE_ID\";\n\n/**\n * 生成设备唯一标识（不安全）\n * @description 如果存在，则返回已经生成的唯一标识\n */\nexport const makeIdentity = (deviceId?: string): string => {\n\tif (deviceId && RegExps.UUID.test(deviceId)) {\n\t\tLocal.set(DEVICE_ID_KEY, deviceId);\n\t\twindow.deviceId = deviceId;\n\t\treturn deviceId;\n\t}\n\t// 生成浏览器唯一 UUID\n\tdeviceId = Local.get(DEVICE_ID_KEY);\n\tif (deviceId && RegExps.UUID.test(deviceId)) {\n\t\twindow.deviceId = deviceId;\n\t\treturn deviceId;\n\t}\n\tdeviceId = stringUtil.generateUUID();\n\tLocal.set(DEVICE_ID_KEY, deviceId);\n\twindow.deviceId = deviceId;\n\treturn deviceId;\n};\n"],"names":["DEVICE_ID_KEY","deviceId","RegExps","UUID","test","Local","set","window","get","stringUtil","generateUUID"],"mappings":"mOAMaA,EAAgB,2DAMAC,GACxBA,GAAYC,EAAAA,QAAQC,KAAKC,KAAKH,IAC3BI,EAAAA,MAAAC,IAAIN,EAAeC,GACzBM,OAAON,SAAWA,EACXA,IAGGI,EAAAA,EAAAA,MAAMG,IAAIR,KACLE,EAAAA,QAAQC,KAAKC,KAAKH,IACjCM,OAAON,SAAWA,EACXA,IAEGQ,EAAAA,EAAAA,WAAWC,eAChBL,EAAAA,MAAAC,IAAIN,EAAeC,GACzBM,OAAON,SAAWA,EACXA"}