{"version":3,"file":"useTable.js","sources":["../../../../../packages/components/table/src/useTable.ts"],"sourcesContent":["import { computed, nextTick, provide, reactive, ref, watch } from \"vue\";\nimport { dayjs, useGlobalSize } from \"element-plus\";\nimport { clickUtil, consoleError, execFunction, type makeSlots } from \"@fast-china/utils\";\nimport { isArray, isFunction } from \"lodash-unified\";\nimport { tableUtil } from \"../utils/table\";\nimport { getTableDefaultSlots } from \"./table.type\";\nimport type { PagedInput, PagedResult } from \"./page.type\";\nimport type { FaTableSlots, faTableEmits, faTableProps } from \"./table\";\nimport type { FaTableState } from \"./table.state\";\nimport type { FaTableColumnCtx, FaTableEnumColumnCtx } from \"./table.type\";\nimport type { TableInstance } from \"element-plus\";\nimport type { ExtractPropTypes, InjectionKey, SetupContext } from \"vue\";\n\nexport const tableStateKey: InjectionKey<FaTableState> = Symbol(\"tableState\");\nexport const enumMapKey: InjectionKey<Map<string, FaTableEnumColumnCtx[]>> = Symbol(\"enumMap\");\n\ntype TableSetupContext = SetupContext<typeof faTableEmits, ReturnType<typeof makeSlots<FaTableSlots>>>;\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type, @typescript-eslint/explicit-module-boundary-types\nexport const useTable = (props: ExtractPropTypes<typeof faTableProps>, slots: TableSetupContext[\"slots\"], emit: TableSetupContext[\"emit\"]) => {\n\tconst _globalSize = useGlobalSize();\n\n\tconst elementRef = ref<HTMLElement>();\n\tconst tableRef = ref<TableInstance>();\n\n\t/**\n\t * 定义 enumMap 存储 enum 值（避免异步请求无法格式化单元格内容 || 无法填充搜索下拉选择）\n\t */\n\tconst enumMap = reactive(new Map<string, FaTableEnumColumnCtx[]>());\n\tprovide(enumMapKey, enumMap);\n\n\tconst state: FaTableState = reactive({\n\t\tloading: false,\n\t\tloadingText: \"加载中...\",\n\t\torgColumns: [],\n\t\ttableColumns: computed(() => state.orgColumns.filter((f) => f.prop && !f.pureSearch)),\n\t\tsearchColumns: computed(() =>\n\t\t\tstate.orgColumns\n\t\t\t\t.filter((f) => f.pureSearch || f.search)\n\t\t\t\t.sort((a, b) => {\n\t\t\t\t\treturn a.search?.order - b.search?.order;\n\t\t\t\t})\n\t\t),\n\t\tspanColumns: computed(() => [\n\t\t\t...state.orgColumns\n\t\t\t\t.filter((f) => f.spanProp)\n\t\t\t\t.map((col) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprop: col?.prop,\n\t\t\t\t\t\tspanProp: col?.spanProp,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t...(props.props.span\n\t\t\t\t? [\n\t\t\t\t\t\t{ prop: \"__table-index\", spanProp: props.props.span },\n\t\t\t\t\t\t{ prop: \"__table-selection\", spanProp: props.props.span },\n\t\t\t\t\t\t{ prop: \"__table-operation\", spanProp: props.props.span },\n\t\t\t\t\t]\n\t\t\t\t: []),\n\t\t]),\n\t\ttableData: [],\n\t\ttableSpanData: computed(() => {\n\t\t\tif (state.spanColumns?.length > 0 && state.tableData?.length > 0) {\n\t\t\t\tconst result = [];\n\t\t\t\tstate.spanColumns.forEach((item) => {\n\t\t\t\t\tresult[item.prop] = new Array(state.tableData.length).fill(1, 0, 1).fill(0, 1);\n\t\t\t\t\tresult[`${item.prop}-index`] = 0;\n\t\t\t\t});\n\t\t\t\tfor (let i = 1; i < state.tableData.length; i++) {\n\t\t\t\t\tstate.spanColumns.forEach((item) => {\n\t\t\t\t\t\tif (state.tableData[i][item.spanProp] === state.tableData[i - 1][item.spanProp]) {\n\t\t\t\t\t\t\tresult[item.prop][result[`${item.prop}-index`]]++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult[`${item.prop}-index`] = i;\n\t\t\t\t\t\t\tresult[item.prop][i] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn [];\n\t\t}),\n\t\ttablePagination: {\n\t\t\tpageIndex: 1,\n\t\t\tpageSize: 20,\n\t\t\ttotalRows: 0,\n\t\t},\n\t\tinitParam: {},\n\t\tsearchParam: {},\n\t\tsearchValueUpdate: \"\",\n\t\tshowSearch: props.showSearch,\n\t\thideImage: computed(() => props.hideImage),\n\t\tselected: false,\n\t\tselectedList: [],\n\t\tselectedListIds: computed(() => state.selectedList.map((item) => (isFunction(props.rowKey) ? props.rowKey(item) : item[props.rowKey]))),\n\t\tindeterminateSelectedListIds: [],\n\t\tresponseConfig: undefined,\n\t\toperationColumnWidth: computed(() => {\n\t\t\tconst findAutoCol = state.autoColumnWidth.find((f) => f.prop === \"__table-operation\");\n\t\t\tif (findAutoCol) {\n\t\t\t\treturn `${findAutoCol.width}px`;\n\t\t\t}\n\t\t\tswitch (_globalSize.value) {\n\t\t\t\tcase \"large\":\n\t\t\t\tcase \"default\":\n\t\t\t\t\treturn \"54px\";\n\t\t\t\tcase \"small\":\n\t\t\t\t\treturn \"42px\";\n\t\t\t\tdefault:\n\t\t\t\t\treturn \"auto\";\n\t\t\t}\n\t\t}),\n\t\timagePreview: false,\n\t\tpreviewList: [],\n\t\ttableWidth: undefined,\n\t\ttableHeight: undefined,\n\t\tautoColumnWidth: [],\n\t});\n\n\tprovide(tableStateKey, state);\n\n\tconst handleTableColumnAutoWidth = (): void => {\n\t\tstate.loading = true;\n\t\tstate.loadingText = \"加载中...\";\n\t\tstate.autoColumnWidth = [];\n\t\tconst autoWidthColumns = state.tableColumns.filter((f) => f.autoWidth);\n\t\tif (slots?.operation) {\n\t\t\t// 操作列自动宽度\n\t\t\tautoWidthColumns.push({\n\t\t\t\tprop: \"__table-operation\",\n\t\t\t});\n\t\t}\n\t\tif (autoWidthColumns?.length > 0) {\n\t\t\t// padding24/16 + border1\n\t\t\tconst otherWidth = _globalSize.value === \"default\" ? 25 : 17;\n\t\t\tnextTick(() => {\n\t\t\t\tconst tableDom = document.querySelector(`.fa-table__${props.tableKey}`);\n\t\t\t\tif (tableDom) {\n\t\t\t\t\tautoWidthColumns.forEach((item) => {\n\t\t\t\t\t\tconst headerColumnDom = tableDom.querySelector(`.__fa-table__auto-width-column__cell-header__${item?.prop}`);\n\t\t\t\t\t\tconst cellColumnDoms = tableDom.querySelectorAll(`.__fa-table__auto-width-column__cell__${item?.prop}`);\n\t\t\t\t\t\tlet maxWidth = 0;\n\t\t\t\t\t\tif (headerColumnDom) {\n\t\t\t\t\t\t\tmaxWidth = Math.ceil(headerColumnDom.scrollWidth) + otherWidth;\n\t\t\t\t\t\t\tif (item?.sortable) {\n\t\t\t\t\t\t\t\tmaxWidth += 24;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcellColumnDoms.forEach((cellDom) => {\n\t\t\t\t\t\t\tconst curWidth = Math.ceil(cellDom.scrollWidth) + otherWidth;\n\t\t\t\t\t\t\tif (curWidth > maxWidth) {\n\t\t\t\t\t\t\t\tmaxWidth = curWidth;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst findInfo = state.autoColumnWidth.find((f) => f.prop === item?.prop);\n\t\t\t\t\t\tif (findInfo) {\n\t\t\t\t\t\t\tfindInfo.width = Math.max(findInfo.width, maxWidth);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.autoColumnWidth.push({\n\t\t\t\t\t\t\t\tprop: item?.prop,\n\t\t\t\t\t\t\t\twidth: maxWidth,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tstate.loading = false;\n\t};\n\n\tconst handleTableData = (data: any[]): any[] => {\n\t\tif (props.treeData) {\n\t\t\tconst result: any[] = [];\n\t\t\tdata.forEach((row) => {\n\t\t\t\tconst rowList = row[props.props.children];\n\t\t\t\tif (isArray(rowList)) {\n\t\t\t\t\t// 如果 rowList 是数组，遍历并合并每个子项\n\t\t\t\t\trowList.forEach((cRow) => result.push({ ...row, ...cRow }));\n\t\t\t\t} else {\n\t\t\t\t\tresult.push({ ...row, ...(rowList || {}) });\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn data;\n\t\t}\n\t};\n\n\tconst getRequestParam = (): PagedInput => {\n\t\tconst params = { ...state.searchParam, ...(props.pagination ? state.tablePagination : {}) };\n\t\t// 删除总条数\n\t\tdelete params.totalRows;\n\t\treturn params;\n\t};\n\n\tconst loadData = async (): Promise<void> => {\n\t\tstate.loading = true;\n\t\tstate.loadingText = \"加载中...\";\n\t\tif (props.requestApi) {\n\t\t\tconst params = getRequestParam();\n\t\t\temit(\"refresh\", params);\n\t\t\tlet pageData = [];\n\t\t\ttry {\n\t\t\t\tconst resData = await props.requestApi(params);\n\t\t\t\t// 数据回调\n\t\t\t\tprops.dataCallback && props.dataCallback(resData);\n\t\t\t\t// 解析 API 接口返回的分页数据（如果有分页更新分页信息）\n\t\t\t\tif (props.pagination) {\n\t\t\t\t\tconst pageRes = resData as PagedResult;\n\t\t\t\t\tpageData = pageRes.rows;\n\t\t\t\t\t// 更新分页信息\n\t\t\t\t\tObject.assign(state.tablePagination, {\n\t\t\t\t\t\tpageIndex: pageRes.pageIndex,\n\t\t\t\t\t\tpageSize: pageRes.pageSize,\n\t\t\t\t\t\ttotalRows: pageRes.totalRows,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tpageData = resData as any[];\n\t\t\t\t\t// 更新分页信息\n\t\t\t\t\tObject.assign(state.tablePagination, {\n\t\t\t\t\t\tpageIndex: 1,\n\t\t\t\t\t\tpageSize: 0,\n\t\t\t\t\t\ttotalRows: pageData.length,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tstate.tableData = handleTableData(pageData);\n\t\t\t} catch (error) {\n\t\t\t\tconsoleError(\"FaTable\", error);\n\t\t\t\tstate.tableData = [];\n\t\t\t} finally {\n\t\t\t\tstate.loading = false;\n\t\t\t}\n\t\t} else {\n\t\t\temit(\"refresh\", { searchValue: state.searchParam.searchValue });\n\t\t\tlet _value = handleTableData(props.data);\n\t\t\t_value = _value.filter((f) => {\n\t\t\t\tif (!state.searchParam.searchValue) return true;\n\t\t\t\treturn state.tableColumns.some((col) => {\n\t\t\t\t\treturn f[col.prop]?.toString()?.toLowerCase().includes(state.searchParam.searchValue?.toLowerCase());\n\t\t\t\t});\n\t\t\t});\n\t\t\tif (state.searchParam.sortList?.length > 0) {\n\t\t\t\t_value = _value.sort(tableUtil.arrayDynamicSort(state.searchParam.sortList));\n\t\t\t}\n\t\t\tif (props.pagination) {\n\t\t\t\t// 更新分页信息\n\t\t\t\tObject.assign(state.tablePagination, {\n\t\t\t\t\ttotalRows: _value.length,\n\t\t\t\t});\n\t\t\t\tconst pageStart = (state.tablePagination.pageIndex - 1) * state.tablePagination.pageSize;\n\t\t\t\tconst pageEnd = pageStart + state.tablePagination.pageSize;\n\t\t\t\tstate.tableData = _value.slice(pageStart, pageEnd);\n\t\t\t} else {\n\t\t\t\tstate.tableData = _value;\n\t\t\t\t// 更新分页信息\n\t\t\t\tObject.assign(state.tablePagination, {\n\t\t\t\t\tpageIndex: 1,\n\t\t\t\t\tpageSize: 0,\n\t\t\t\t\ttotalRows: _value.length,\n\t\t\t\t});\n\t\t\t}\n\t\t\tstate.loading = false;\n\t\t}\n\t\thandleTableColumnAutoWidth();\n\t};\n\n\tconst loadTableColumns = (): void => {\n\t\tlet columns: FaTableColumnCtx[] = props.columns;\n\t\t// 默认值处理\n\t\tcolumns.forEach((col) => {\n\t\t\t// 处理搜索项的 key 和 label\n\t\t\tif (col.pureSearch || col.search) {\n\t\t\t\tcol.search.key ??= col.prop;\n\t\t\t\tcol.search.label ??= col.label;\n\t\t\t\t// 处理默认值\n\t\t\t\tif (col.search.defaultValue) {\n\t\t\t\t\tstate.searchParam[col.search.key] = col.search.defaultValue;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// 排序\n\t\tcolumns = columns.sort((a, b) => {\n\t\t\treturn a?.order - b?.order;\n\t\t});\n\n\t\t// TODO:这里的扁平化暂时没用到\n\t\tstate.orgColumns = tableUtil.flatColumns(columns, enumMap);\n\t};\n\n\tconst handleSizeChange = (pageSize: number): void => {\n\t\tstate.tablePagination.pageIndex = 1;\n\t\tstate.tablePagination.pageSize = pageSize;\n\t\temit(\"sizeChange\", pageSize);\n\t\temit(\"paginationChange\", 1, pageSize);\n\t\tloadData();\n\t};\n\tconst handlePaginationChange = (val: number): void => {\n\t\tstate.tablePagination.pageIndex = val;\n\t\temit(\"sizeChange\", state.tablePagination.pageSize);\n\t\temit(\"paginationChange\", val, state.tablePagination.pageSize);\n\t\tloadData();\n\t};\n\n\tconst updatedTotalParam = (): void => {\n\t\t// 处理查询参数，可以给查询参数加自定义前缀操作\n\t\tconst newSearchParam = {};\n\t\t// 防止手动清空输入框携带参数（这里可以自定义查询参数前缀）\n\t\tfor (const key in state.searchParam) {\n\t\t\t// * 某些情况下参数为 false/0 也应该携带参数\n\t\t\tif (state.searchParam[key] || state.searchParam[key] === false || state.searchParam[key] === 0) {\n\t\t\t\tnewSearchParam[key] = state.searchParam[key];\n\t\t\t}\n\t\t\t// 处理某些情况下如果为空字符串，其实是不需要传到后端的\n\t\t\telse if (!state.searchParam[key]) {\n\t\t\t\tdelete state.searchParam[key];\n\t\t\t}\n\t\t}\n\t\tObject.assign(state.searchParam, newSearchParam);\n\t};\n\n\tconst defaultSearchTime = (): void => {\n\t\tif (props.hideSearchTime) {\n\t\t\tstate.searchParam.searchTimeList = undefined;\n\t\t} else {\n\t\t\tconst end = new Date();\n\t\t\tconst start = new Date();\n\t\t\tswitch (props.dataSearchRange) {\n\t\t\t\tcase \"Past1D\":\n\t\t\t\t\tstart.setDate(start.getDate() - 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past3D\":\n\t\t\t\t\tstart.setDate(start.getDate() - 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past1W\":\n\t\t\t\t\tstart.setDate(start.getDate() - 7);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past1M\":\n\t\t\t\t\tstart.setMonth(start.getMonth() - 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past3M\":\n\t\t\t\t\tstart.setMonth(start.getMonth() - 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past6M\":\n\t\t\t\t\tstart.setMonth(start.getMonth() - 6);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past1Y\":\n\t\t\t\t\tstart.setFullYear(start.getFullYear() - 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past3Y\":\n\t\t\t\t\tstart.setFullYear(start.getFullYear() - 3);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tstate.searchParam.searchTimeList = [dayjs(start).format(\"YYYY-MM-DD 00:00:00\"), dayjs(end).format(\"YYYY-MM-DD 23:59:59\")];\n\t\t}\n\t};\n\n\tconst tableSearch = async (): Promise<void> => {\n\t\t// 重置到第一页\n\t\tstate.tablePagination.pageIndex = 1;\n\t\tupdatedTotalParam();\n\t\tawait loadData();\n\t};\n\n\tconst tableReset = async (): Promise<void> => {\n\t\t// 重置到第一页\n\t\tstate.tablePagination.pageIndex = 1;\n\t\t// 清除搜索条件\n\t\tstate.searchParam = {};\n\t\tdefaultSearchTime();\n\t\t// 重置搜索表单的时候，如果有默认搜索参数，则重置默认的搜索参数\n\t\tObject.keys(state.initParam ?? {}).forEach((key) => {\n\t\t\tstate.searchParam[key] = state.initParam[key];\n\t\t});\n\t\temit(\"reset\", state.searchParam);\n\t\tawait loadData();\n\t};\n\n\tconst doRender = async (): Promise<void> => {\n\t\tstate.orgColumns = [];\n\t\tstate.autoColumnWidth = [];\n\t\tstate.tableData = [];\n\t\tawait clickUtil.debounceAsync(async () => {\n\t\t\tloadTableColumns();\n\t\t\tawait tableSearch();\n\t\t}, 300);\n\t};\n\n\tconst doLoading = (loadingFunction: () => void | Promise<void>, loadingText = \"加载中...\"): void => {\n\t\tstate.loading = true;\n\t\tstate.loadingText = loadingText;\n\t\texecFunction(loadingFunction)\n\t\t\t.then()\n\t\t\t.catch((error) => {\n\t\t\t\tconsoleError(\"FaTable\", error);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tstate.loading = false;\n\t\t\t});\n\t};\n\n\tconst handleCustomCellClick = (emitName: string, { row, column, $index }: { row: any; column: FaTableColumnCtx; $index: number }): void => {\n\t\temit(\"customCellClick\", emitName, { row, column, $index, ...getTableDefaultSlots(state) });\n\t};\n\n\twatch(\n\t\t() => props.tableKey,\n\t\tasync () => {\n\t\t\tawait doRender();\n\t\t}\n\t);\n\n\twatch(\n\t\t() => props.showSearch,\n\t\t(newValue) => {\n\t\t\tstate.showSearch = newValue;\n\t\t}\n\t);\n\n\treturn {\n\t\t_globalSize,\n\t\tstate,\n\t\telementRef,\n\t\ttableRef,\n\t\thandleTableColumnAutoWidth,\n\t\tgetRequestParam,\n\t\tloadTableColumns,\n\t\thandleSizeChange,\n\t\thandlePaginationChange,\n\t\tdefaultSearchTime,\n\t\ttableSearch,\n\t\ttableReset,\n\t\tdoRender,\n\t\tdoLoading,\n\t\thandleCustomCellClick,\n\t};\n};\n"],"names":["tableStateKey","Symbol","enumMapKey","props","slots","emit","_globalSize","useGlobalSize","elementRef","ref","tableRef","enumMap","reactive","Map","provide","state","loading","loadingText","orgColumns","tableColumns","computed","filter","f","prop","pureSearch","searchColumns","search","sort","a","b","_a","order","_b","spanColumns","spanProp","map","col","span","tableData","tableSpanData","length","result","forEach","item","Array","fill","i","tablePagination","pageIndex","pageSize","totalRows","initParam","searchParam","searchValueUpdate","showSearch","hideImage","selected","selectedList","selectedListIds","isFunction","rowKey","indeterminateSelectedListIds","responseConfig","operationColumnWidth","findAutoCol","autoColumnWidth","find","width","value","imagePreview","previewList","tableWidth","tableHeight","handleTableColumnAutoWidth","autoWidthColumns","autoWidth","operation","push","otherWidth","nextTick","tableDom","document","querySelector","tableKey","headerColumnDom","cellColumnDoms","querySelectorAll","maxWidth","Math","ceil","scrollWidth","sortable","cellDom","curWidth","findInfo","max","handleTableData","data","treeData","row","rowList","children","isArray","cRow","getRequestParam","params","pagination","loadData","async","requestApi","pageData","resData","dataCallback","pageRes","rows","Object","assign","error","consoleError","searchValue","_value","some","_c","toString","toLowerCase","includes","sortList","tableUtil","arrayDynamicSort","pageStart","pageEnd","slice","loadTableColumns","columns","key","label","defaultValue","flatColumns","defaultSearchTime","hideSearchTime","searchTimeList","end","Date","start","dataSearchRange","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","dayjs","format","tableSearch","newSearchParam","updatedTotalParam","doRender","clickUtil","debounceAsync","watch","newValue","handleSizeChange","handlePaginationChange","val","tableReset","keys","doLoading","loadingFunction","execFunction","then","catch","finally","handleCustomCellClick","emitName","column","$index","getTableDefaultSlots"],"mappings":"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"}