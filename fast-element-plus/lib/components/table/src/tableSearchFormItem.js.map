{"version":3,"file":"tableSearchFormItem.js","sources":["../../../../../packages/components/table/src/tableSearchFormItem.tsx"],"sourcesContent":["import { Fragment, defineComponent, h, inject, reactive, resolveComponent } from \"vue\";\nimport { ElOption } from \"element-plus\";\nimport { dateUtil, definePropType, makeSlots, useRender, withDefineType } from \"@fast-china/utils\";\nimport { isString } from \"lodash-unified\";\nimport { getTableDefaultSlots } from \"./table.type\";\nimport { enumMapKey, tableStateKey } from \"./useTable\";\nimport type { FaTableColumnCtx, FaTableDefaultSlotsResult, FaTableEnumColumnCtx } from \"./table.type\";\n\n/**\n * 已知默认支持的el组件：\n * \tel-input\n * \tel-input-number\n * \tel-select\n * \tel-select-v2\n * \tel-tree-select\n * \tel-cascader\n * \tel-date-picker\n * \tel-time-picker\n * \tel-time-select,\n * \tel-switch\n * 已知组件的默认props\n * clearable：el-input，el-input-number，el-select，el-select-v2，el-tree-select，el-cascader，el-date-picker，el-time-picker，el-time-select\n * filterable：el-select，el-select-v2，el-tree-select\n * placeholder-请输入：el-input，el-input-number\n * placeholder-请选择：el-select，el-select-v2，el-tree-select，el-cascader\n * defaultTime：el-date-picker\n * shortcuts：el-date-picker\n * options：el-select-v2，el-cascader\n * data：el-tree-select\n * startPlaceholder：\n * \t\tel-date-picker type in [\"datetimerange\", \"daterange\", \"monthrange\", \"yearrange\"]\n * \t\tel-time-picker isRange is true\n * endPlaceholder：\n * \t\tel-date-picker type in [\"datetimerange\", \"daterange\", \"monthrange\", \"yearrange\"]\n * \t\tel-time-picker isRange is true\n * rangeSeparator：\n * \t\tel-date-picker type in [\"datetimerange\", \"daterange\", \"monthrange\", \"yearrange\"]\n * \t\tel-time-picker isRange is true\n * unlinkPanels：el-date-picker type in [\"datetimerange\", \"daterange\", \"monthrange\", \"yearrange\"]\n * 后缀 -select Select -page Page -cascader Cascader 结尾的\n * \tplaceholder：请选择\n * 后缀 -input Input 结尾的\n * \tplaceholder：请输入\n */\n\nconst clearableEls = [\n\t\"el-input\",\n\t\"ELInput\",\n\t\"el-input-number\",\n\t\"ELInputNumber\",\n\t\"el-select\",\n\t\"ElSelect\",\n\t\"el-select-v2\",\n\t\"ElSelectV2\",\n\t\"el-tree-select\",\n\t\"ElTreeSelect\",\n\t\"el-cascader\",\n\t\"ElCascader\",\n\t\"el-date-picker\",\n\t\"ElDatePicker\",\n\t\"el-time-picker\",\n\t\"ElTimePicker\",\n\t\"el-time-select\",\n\t\"ElTimeSelect\",\n];\n\ntype FaTableSearchFormItemSlots = {\n\t[key: string]: FaTableDefaultSlotsResult & {\n\t\tcolumn?: FaTableColumnCtx;\n\t\tsearch?: () => void;\n\t};\n};\n\nconst filterableEls = [\"el-select\", \"ElSelect\", \"el-select-v2\", \"ElSelectV2\", \"el-tree-select\", \"ElTreeSelect\"];\n\nconst inputPlaceholderEls = [\"el-input\", \"ELInput\", \"el-input-number\", \"ELInputNumber\"];\n\nconst selectPlaceholderEls = [\"el-select\", \"ElSelect\", \"el-select-v2\", \"ElSelectV2\", \"el-tree-select\", \"ElTreeSelect\", \"el-cascader\", \"ElCascader\"];\n\nexport default defineComponent({\n\tname: \"FaTableSearchFormItem\",\n\tprops: {\n\t\t/** @description 列配置 */\n\t\tcolumn: {\n\t\t\ttype: definePropType<FaTableColumnCtx>(Object),\n\t\t\trequired: true,\n\t\t\t/** 这里的 default 不知道为什么，不写识别不出来类型 */\n\t\t\tdefault: {} as FaTableColumnCtx,\n\t\t},\n\t\t/** @description 搜索 */\n\t\tsearch: {\n\t\t\ttype: definePropType<() => void>(Function),\n\t\t\trequired: true,\n\t\t},\n\t},\n\tslots: makeSlots<FaTableSearchFormItemSlots>(),\n\tsetup(props, { slots }) {\n\t\tconst tableState = inject(tableStateKey);\n\t\tconst enumMap = inject(enumMapKey);\n\n\t\tconst state = reactive({\n\t\t\tenumDict: withDefineType<FaTableEnumColumnCtx[]>([]),\n\t\t\toldValue: undefined,\n\t\t});\n\n\t\tconst handleUpdateModelValue = (value: any): void => {\n\t\t\tif (isString(value)) {\n\t\t\t\t// 如果是字符串，则去除前后空格\n\t\t\t\tvalue = value.trim();\n\t\t\t}\n\t\t\tstate.oldValue = tableState.searchParam[props.column?.search?.key ?? props.column.prop];\n\t\t\ttableState.searchParam[props.column?.search?.key ?? props.column.prop] = value;\n\t\t};\n\n\t\tconst handleChange = (value: any): void => {\n\t\t\t// 改变触发的时候只有不等于的时候才会去刷新\n\t\t\t// if (!isEqual(value, state.oldValue)) {\n\t\t\tprops.search();\n\t\t\t// }\n\t\t};\n\n\t\tconst handleDefaultProps = (): any => {\n\t\t\tconst search = props.column.search;\n\t\t\tconst defaultProps: any = {};\n\t\t\tif (clearableEls.includes(search?.el)) {\n\t\t\t\tdefaultProps.clearable = true;\n\t\t\t}\n\t\t\tif (filterableEls.includes(search?.el)) {\n\t\t\t\tdefaultProps.filterable = true;\n\t\t\t}\n\t\t\tif (inputPlaceholderEls.includes(search?.el)) {\n\t\t\t\tdefaultProps.placeholder = \"请输入\";\n\t\t\t}\n\t\t\tif (selectPlaceholderEls.includes(search?.el)) {\n\t\t\t\tdefaultProps.placeholder = \"请选择\";\n\t\t\t}\n\t\t\tif ([\"el-date-picker\", \"ElDatePicker\"].includes(search?.el)) {\n\t\t\t\tdefaultProps.unlinkPanels = true;\n\t\t\t\tif ([\"datetimerange\", \"daterange\", \"monthrange\", \"yearrange\"].includes(search?.props?.type)) {\n\t\t\t\t\tdefaultProps.defaultTime = dateUtil.getDefaultTime();\n\t\t\t\t\tdefaultProps.shortcuts = dateUtil.getShortcuts();\n\t\t\t\t\tdefaultProps.rangeSeparator = \"至\";\n\t\t\t\t\tdefaultProps.startPlaceholder = \"开始时间\";\n\t\t\t\t\tdefaultProps.endPlaceholder = \"结束时间\";\n\t\t\t\t} else {\n\t\t\t\t\tdefaultProps.defaultTime = dateUtil.getSimpleTime();\n\t\t\t\t\tdefaultProps.shortcuts = dateUtil.getSimpleShortcuts();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ([\"el-time-picker\", \"ElTimePicker\"].includes(search?.el) && search?.props?.isRange) {\n\t\t\t\tdefaultProps.rangeSeparator = \"至\";\n\t\t\t\tdefaultProps.startPlaceholder = \"开始时间\";\n\t\t\t\tdefaultProps.endPlaceholder = \"结束时间\";\n\t\t\t}\n\t\t\tif (\n\t\t\t\t[\"el-select\", \"ElSelect\", \"el-select-v2\", \"ElSelectV2\", \"el-cascader\", \"ElCascader\", \"el-tree-select\", \"ElTreeSelect\"].includes(\n\t\t\t\t\tsearch?.el\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tlet enumData;\n\t\t\t\tif (props.column.enum && isString(props.column.enum)) {\n\t\t\t\t\tenumData = enumMap.get(props.column.enum);\n\t\t\t\t} else {\n\t\t\t\t\tenumData = enumMap.get(props.column.prop ?? props.column.search?.key);\n\t\t\t\t}\n\t\t\t\tenumData = enumData.filter((f: any) => f?.show !== false);\n\t\t\t\tstate.enumDict = enumData ?? [];\n\t\t\t}\n\t\t\tif ([\"el-select-v2\", \"ElSelectV2\", \"el-cascader\", \"ElCascader\"].includes(search?.el)) {\n\t\t\t\tdefaultProps.options = state.enumDict;\n\t\t\t}\n\t\t\tif ([\"el-tree-select\", \"ElTreeSelect\"].includes(search?.el)) {\n\t\t\t\tdefaultProps.data = state.enumDict;\n\t\t\t}\n\n\t\t\treturn defaultProps;\n\t\t};\n\n\t\tuseRender(() => (\n\t\t\t<Fragment>\n\t\t\t\t{props.column.search?.el &&\n\t\t\t\t\th(\n\t\t\t\t\t\tresolveComponent(props.column.search.el),\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...handleDefaultProps(),\n\t\t\t\t\t\t\t...props.column.search.props,\n\t\t\t\t\t\t\tmodelValue: tableState.searchParam[props.column?.search?.key ?? props.column.prop],\n\t\t\t\t\t\t\t\"onUpdate:modelValue\": handleUpdateModelValue,\n\t\t\t\t\t\t\tonChange: handleChange,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdefault: () =>\n\t\t\t\t\t\t\t\t[\"el-select\", \"ElSelect\"].includes(props.column.search.el)\n\t\t\t\t\t\t\t\t\t? state.enumDict.map((selData: any, index: number) =>\n\t\t\t\t\t\t\t\t\t\t\th(ElOption, {\n\t\t\t\t\t\t\t\t\t\t\t\tkey: index,\n\t\t\t\t\t\t\t\t\t\t\t\tlabel: selData[props.column.search.props?.label ?? \"label\"],\n\t\t\t\t\t\t\t\t\t\t\t\tvalue: selData[props.column.search.props?.value ?? \"value\"],\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled: selData[props.column.search.props?.disabled ?? \"disabled\"],\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: slots.default &&\n\t\t\t\t\t\t\t\t\t\tslots.default({\n\t\t\t\t\t\t\t\t\t\t\tcolumn: props.column,\n\t\t\t\t\t\t\t\t\t\t\tsearch: props.search,\n\t\t\t\t\t\t\t\t\t\t\t...getTableDefaultSlots(tableState),\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t));\n\t},\n});\n"],"names":["clearableEls","filterableEls","inputPlaceholderEls","selectPlaceholderEls","TableSearchFormItem","name","props","column","type","definePropType","Object","required","default","search","Function","slots","makeSlots","setup","tableState","inject","tableStateKey","enumMap","enumMapKey","state","reactive","enumDict","withDefineType","oldValue","undefined","handleUpdateModelValue","value","isString","trim","searchParam","key","prop","handleChange","handleDefaultProps","defaultProps","includes","el","clearable","filterable","placeholder","unlinkPanels","defaultTime","dateUtil","getDefaultTime","shortcuts","getShortcuts","rangeSeparator","startPlaceholder","endPlaceholder","getSimpleTime","getSimpleShortcuts","isRange","enumData","enum","get","filter","f","show","options","data","useRender","_createVNode","_Fragment","h","resolveComponent","modelValue","onChange","map","selData","index","ElOption","label","disabled","getTableDefaultSlots"],"mappings":"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"}