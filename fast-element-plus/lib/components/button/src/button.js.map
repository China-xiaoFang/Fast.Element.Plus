{"version":3,"file":"button.js","sources":["../../../../../packages/components/button/src/button.tsx"],"sourcesContent":["import type { Component, VNode } from \"vue\";\nimport { computed, defineComponent, reactive, ref, watch, withModifiers } from \"vue\";\nimport { Eleme } from \"@element-plus/icons-vue\";\nimport { useOverlay } from \"@fast-element-plus/hooks\";\nimport { definePropType, makeSlots, useExpose, useProps, useRender } from \"@fast-china/utils\";\nimport type { ButtonInstance } from \"element-plus\";\nimport { ElButton, buttonEmits, buttonProps } from \"element-plus\";\nimport { isFunction } from \"lodash-unified\";\n\nexport const faButtonProps = {\n\t...buttonProps,\n\t/**\n\t * @description customize loading icon component\n\t * @default Eleme\n\t */\n\tloadingIcon: {\n\t\ttype: definePropType<string | Component>([String, Object, Function]),\n\t\tdefault: (): string | Component => Eleme,\n\t},\n\t/** @description 禁用加载 */\n\tdisabledLoading: Boolean,\n};\n\nexport const faButtonEmits = {\n\t...buttonEmits,\n\t/**\n\t * @description 点击事件\n\t * @param done 需要手动隐藏Loading\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/explicit-function-return-type\n\tclick: (event: MouseEvent, done: () => void = () => {}) => event instanceof MouseEvent && isFunction(done),\n};\n\ntype FaButtonSlots = {\n\t/** @description 默认内容插槽 */\n\tdefault: never;\n\t/** @description 自定义加载中组件 */\n\tloading: never;\n\t/** @description 自定义图标组件 */\n\ticon: never;\n};\n\nexport default defineComponent({\n\tname: \"FaButton\",\n\tprops: faButtonProps,\n\temits: faButtonEmits,\n\tslots: makeSlots<FaButtonSlots>(),\n\tsetup(props, { attrs, slots, emit, expose }) {\n\t\tconst state = reactive({\n\t\t\tloading: false,\n\t\t});\n\n\t\tconst buttonRef = ref<ButtonInstance>();\n\n\t\tconst showLoading = (): void => {\n\t\t\tstate.loading = true;\n\t\t\t// 这里默认透明\n\t\t\tuseOverlay.show(0);\n\t\t};\n\n\t\tconst hideLoading = (): void => {\n\t\t\tstate.loading = false;\n\t\t\tuseOverlay.hide();\n\t\t};\n\n\t\tconst handleClick = (event: MouseEvent): void => {\n\t\t\tif (props.disabledLoading) {\n\t\t\t\t// 回调点击事件\n\t\t\t\temit(\"click\", event);\n\t\t\t} else {\n\t\t\t\tshowLoading();\n\t\t\t\t// 回调点击事件\n\t\t\t\temit(\"click\", event, hideLoading);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * 监听外部 loading 的值\n\t\t */\n\t\twatch(\n\t\t\t() => props.loading,\n\t\t\t(newValue) => {\n\t\t\t\tif (props.disabledLoading) return;\n\t\t\t\tif (newValue) {\n\t\t\t\t\tshowLoading();\n\t\t\t\t} else {\n\t\t\t\t\thideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\timmediate: true,\n\t\t\t}\n\t\t);\n\n\t\tconst elButtonProps = useProps(props, buttonProps, [\"loading\"]);\n\n\t\tuseRender(() => (\n\t\t\t<ElButton\n\t\t\t\t{...elButtonProps.value}\n\t\t\t\tref={buttonRef}\n\t\t\t\tclass=\"fa-button\"\n\t\t\t\tloading={state.loading}\n\t\t\t\tonClick={withModifiers((event: Event) => handleClick(event as MouseEvent), [\"prevent\"])}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tdefault: () => slots.default && slots.default(),\n\t\t\t\t\t...(slots.loading && { loading: (): VNode[] => slots.loading() }),\n\t\t\t\t\t...(slots.icon && { icon: (): VNode[] => slots.icon() }),\n\t\t\t\t}}\n\t\t\t</ElButton>\n\t\t));\n\n\t\treturn useExpose(expose, {\n\t\t\t/** @description 按钮 html 元素 */\n\t\t\tref: computed(() => buttonRef.value?.ref),\n\t\t\t/** @description 按钮尺寸 */\n\t\t\tsize: computed(() => buttonRef.value?.size),\n\t\t\t/** @description 按钮类型 */\n\t\t\ttype: computed(() => buttonRef.value?.type),\n\t\t\t/** @description 按钮已禁用 */\n\t\t\tdisabled: computed(() => buttonRef.value?.disabled),\n\t\t\t/** @description 是否在两个字符之间插入空格 */\n\t\t\tshouldAddSpace: computed(() => buttonRef.value?.shouldAddSpace),\n\t\t\t/** @description 加载状态 */\n\t\t\tloading: computed(() => state.loading),\n\t\t});\n\t},\n});\n"],"names":["faButtonProps","buttonProps","loadingIcon","type","definePropType","String","Object","Function","default","Eleme","disabledLoading","Boolean","faButtonEmits","buttonEmits","click","event","done","MouseEvent","isFunction","Button","name","props","emits","slots","makeSlots","setup","attrs","emit","expose","state","reactive","loading","buttonRef","ref","showLoading","useOverlay","show","hideLoading","hide","watch","newValue","immediate","elButtonProps","useProps","useRender","_createVNode","ElButton","_mergeProps","value","class","onClick","withModifiers","handleClick","icon","useExpose","computed","size","disabled","shouldAddSpace"],"mappings":"uVASaA,EAAgB,IACzBC,EAAAA,YAKHC,YAAa,CACZC,KAAMC,EAAAA,eAAmC,CAACC,OAAQC,OAAQC,WAC1DC,QAASA,IAA0BC,EAAAA,OAGpCC,gBAAiBC,SAGLC,EAAgB,IACzBC,EAAAA,YAMHC,MAAOA,CAACC,EAAmBC,EAAmBA,SAAaD,aAAiBE,YAAcC,EAAAA,WAAWF,IAYtGG,oBAA+B,CAC9BC,KAAM,WACNC,MAAOrB,EACPsB,MAAOV,EACPW,MAAOC,EAAAA,YACPC,KAAAA,CAAMJ,GAAOK,MAAEA,EAAAA,MAAOH,EAAAA,KAAOI,EAAAA,OAAMC,IAClC,MAAMC,EAAQC,EAAAA,SAAS,CACtBC,SAAS,IAGJC,EAAYC,EAAAA,MAEZC,EAAcA,KACnBL,EAAME,SAAU,EAEhBI,EAAAA,WAAWC,KAAK,IAGXC,EAAcA,KACnBR,EAAME,SAAU,EAChBI,EAAAA,WAAWG,QAiBZC,EAAAA,MACC,IAAMlB,EAAMU,QACXS,IACInB,EAAMX,kBACN8B,EACHN,IAEAG,MAGF,CACCI,WAAW,IAIb,MAAMC,EAAgBC,EAAAA,SAAStB,EAAOpB,EAAAA,YAAa,CAAC,YAkBpD,OAhBA2C,EAAAA,UAAU,IAAAC,EAAAA,YAAAC,EAAAA,SAAAC,EAAAA,WAEJL,EAAcM,MAAK,CAAAf,IAClBD,EAASiB,MAAA,YAAAlB,QAELF,EAAME,QAAOmB,QACbC,EAAAA,cAAepC,GArCLA,CAAAA,IAChBM,EAAMX,gBAETiB,EAAK,QAASZ,IAEdmB,IAEAP,EAAK,QAASZ,EAAOsB,KA8BoBe,CAAYrC,GAAsB,CAAC,cAAW,CAGtFP,QAASA,IAAMe,EAAMf,SAAWe,EAAMf,aAClCe,EAAMQ,SAAW,CAAEA,QAASA,IAAeR,EAAMQ,cACjDR,EAAM8B,MAAQ,CAAEA,KAAMA,IAAe9B,EAAM8B,WAK3CC,EAAAA,UAAU1B,EAAQ,CAExBK,IAAKsB,EAAAA,SAAS,IAAMvB,EAAUgB,OAAOf,KAErCuB,KAAMD,EAAAA,SAAS,IAAMvB,EAAUgB,OAAOQ,MAEtCrD,KAAMoD,EAAAA,SAAS,IAAMvB,EAAUgB,OAAO7C,MAEtCsD,SAAUF,EAAAA,SAAS,IAAMvB,EAAUgB,OAAOS,UAE1CC,eAAgBH,EAAAA,SAAS,IAAMvB,EAAUgB,OAAOU,gBAEhD3B,QAASwB,EAAAA,SAAS,IAAM1B,EAAME,UAEhC"}