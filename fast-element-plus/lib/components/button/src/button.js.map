{"version":3,"file":"button.js","sources":["../../../../../packages/components/button/src/button.tsx"],"sourcesContent":["import type { Component, VNode } from \"vue\";\nimport { computed, defineComponent, reactive, ref, watch, withModifiers } from \"vue\";\nimport { Eleme } from \"@element-plus/icons-vue\";\nimport { useOverlay } from \"@fast-element-plus/hooks\";\nimport { definePropType, makeSlots, useExpose, useProps, useRender } from \"@fast-element-plus/utils\";\nimport type { ButtonInstance } from \"element-plus\";\nimport { ElButton, buttonEmits, buttonProps } from \"element-plus\";\nimport { isFunction } from \"lodash-unified\";\n\nexport const faButtonProps = {\n\t...buttonProps,\n\t/**\n\t * @description customize loading icon component\n\t * @default Eleme\n\t */\n\tloadingIcon: {\n\t\ttype: definePropType<string | Component>([String, Object, Function]),\n\t\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\t\tdefault: () => Eleme,\n\t},\n\t/** @description 禁用加载 */\n\tdisabledLoading: Boolean,\n};\n\nexport const faButtonEmits = {\n\t...buttonEmits,\n\t/**\n\t * @description 点击事件\n\t * @param done 需要手动隐藏Loading\n\t */\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function, @typescript-eslint/explicit-function-return-type\n\tclick: (event: MouseEvent, done: () => void = () => {}) => event instanceof MouseEvent && isFunction(done),\n};\n\ntype FaButtonSlots = {\n\t/** @description 默认内容插槽 */\n\tdefault: never;\n\t/** @description 自定义加载中组件 */\n\tloading: never;\n\t/** @description 自定义图标组件 */\n\ticon: never;\n};\n\nexport default defineComponent({\n\tname: \"FaButton\",\n\tprops: faButtonProps,\n\temits: faButtonEmits,\n\tslots: makeSlots<FaButtonSlots>(),\n\tsetup(props, { attrs, slots, emit, expose }) {\n\t\tconst state = reactive({\n\t\t\tloading: false,\n\t\t});\n\n\t\tconst buttonRef = ref<ButtonInstance>();\n\n\t\tconst showLoading = (): void => {\n\t\t\tstate.loading = true;\n\t\t\t// 这里默认透明\n\t\t\tuseOverlay.show(0);\n\t\t};\n\n\t\tconst hideLoading = (): void => {\n\t\t\tstate.loading = false;\n\t\t\tuseOverlay.hide();\n\t\t};\n\n\t\tconst handleClick = (event: MouseEvent): void => {\n\t\t\tif (props.disabledLoading) {\n\t\t\t\t// 回调点击事件\n\t\t\t\temit(\"click\", event);\n\t\t\t} else {\n\t\t\t\tshowLoading();\n\t\t\t\t// 回调点击事件\n\t\t\t\temit(\"click\", event, hideLoading);\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * 监听外部 loading 的值\n\t\t */\n\t\twatch(\n\t\t\t() => props.loading,\n\t\t\t(newValue) => {\n\t\t\t\tif (props.disabledLoading) return;\n\t\t\t\tif (newValue) {\n\t\t\t\t\tshowLoading();\n\t\t\t\t} else {\n\t\t\t\t\thideLoading();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\timmediate: true,\n\t\t\t}\n\t\t);\n\n\t\tconst elButtonProps = useProps(props, buttonProps, [\"loading\"]);\n\n\t\tuseRender(() => (\n\t\t\t<ElButton\n\t\t\t\t{...elButtonProps.value}\n\t\t\t\tref={buttonRef}\n\t\t\t\tclass=\"fa-button\"\n\t\t\t\tloading={state.loading}\n\t\t\t\tonClick={withModifiers((event: Event) => handleClick(event as MouseEvent), [\"prevent\"])}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\tdefault: () => slots.default && slots.default(),\n\t\t\t\t\t...(slots.loading && { loading: (): VNode[] => slots.loading() }),\n\t\t\t\t\t...(slots.icon && { icon: (): VNode[] => slots.icon() }),\n\t\t\t\t}}\n\t\t\t</ElButton>\n\t\t));\n\n\t\treturn useExpose(expose, {\n\t\t\t...computed(() => ({\n\t\t\t\t/** @description button html element */\n\t\t\t\tref: buttonRef.value?.ref,\n\t\t\t\t/** @description button size */\n\t\t\t\tsize: buttonRef.value?.size,\n\t\t\t\t/** @description button type */\n\t\t\t\ttype: buttonRef.value?.type,\n\t\t\t\t/** @description button disabled */\n\t\t\t\tdisabled: buttonRef.value?.disabled,\n\t\t\t\t/** @description whether adding space */\n\t\t\t\tshouldAddSpace: buttonRef.value?.shouldAddSpace,\n\t\t\t})).value,\n\t\t\t/** @description 加载状态 */\n\t\t\tloading: state.loading,\n\t\t});\n\t},\n});\n"],"names":["faButtonProps","buttonProps","loadingIcon","type","definePropType","String","Object","Function","default","Eleme","disabledLoading","Boolean","faButtonEmits","buttonEmits","click","event","done","MouseEvent","isFunction","defineComponent","name","props","emits","slots","makeSlots","setup","attrs","emit","expose","state","reactive","loading","buttonRef","ref","showLoading","show","hideLoading","useOverlay","hide","watch","newValue","immediate","elButtonProps","useProps","useExpose","useRender","_createVNode","ElButton","_mergeProps","value","class","onClick","withModifiers","handleClick","icon","computed","size","disabled","shouldAddSpace"],"mappings":"mgBASaA,EAAgB,IACzBC,EAAWA,YAKdC,YAAa,CACZC,KAAMC,EAAAA,eAAmC,CAACC,OAAQC,OAAQC,WAE1DC,QAASA,IAAMC,EAAAA,OAGhBC,gBAAiBC,SAGLC,EAAgB,IACzBC,EAAWA,YAMdC,MAAOA,CAACC,EAAmBC,EAAmBA,SAAaD,aAAiBE,YAAcC,EAAUA,WAACF,IAYvFG,oBAAgB,CAC9BC,KAAM,WACNC,MAAOrB,EACPsB,MAAOV,EACPW,MAAOC,EAAAA,YACPC,KAAAA,CAAMJ,GAAOK,MAAEA,EAAOH,MAAAA,EAAAA,KAAOI,EAAMC,OAAAA,IAC5BC,MAAAA,EAAQC,EAAAA,SAAS,CACtBC,SAAS,IAGJC,EAAYC,EAAAA,MAEZC,EAAcA,KACnBL,EAAME,SAAU,eAELI,KAAK,EAAC,EAGZC,EAAcA,KACnBP,EAAME,SAAU,EAChBM,EAAUA,WAACC,MAAI,EAiBhBC,EAAAA,OACC,IAAMlB,EAAMU,UACES,IACTnB,EAAMX,kBACN8B,UAIJ,GAED,CACCC,WAAW,IAIPC,MAAAA,EAAgBC,EAAAA,SAAStB,EAAOpB,EAAAA,YAAa,CAAC,YAkB7C2C,OAhBEC,EAAAA,WAAC,IAAAC,EAAAA,YAAAC,EAAAA,SAAAC,EAAAA,WAEJN,EAAcO,MAAK,CAAAhB,IAClBD,EAASkB,MAAA,YAAAnB,QAELF,EAAME,QAAOoB,QACbC,EAAaA,eAAErC,GArCLA,CAA4BA,IAC5CM,EAAMX,gBAETiB,EAAK,QAASZ,QAITY,EAAA,QAASZ,EAAOqB,GACtB,EA6B0CiB,CAAYtC,IAAsB,CAAC,cAAW,CAGtFP,QAASA,IAAMe,EAAMf,SAAWe,EAAMf,aAClCe,EAAMQ,SAAW,CAAEA,QAASA,IAAeR,EAAMQ,cACjDR,EAAM+B,MAAQ,CAAEA,KAAMA,IAAe/B,EAAM+B,YAK3CV,EAAAA,UAAUhB,EAAQ,IACrB2B,EAAQA,UAAC,mBAAO,MAAA,CAElBtB,IAAKD,OAAAA,EAAUiB,EAAAA,YAAOhB,EAAAA,EAAAA,IAEtBuB,KAAMxB,OAAAA,EAAUiB,EAAAA,YAAOO,EAAAA,EAAAA,KAEvBrD,KAAM6B,OAAAA,EAAUiB,EAAAA,YAAO9C,EAAAA,EAAAA,KAEvBsD,SAAUzB,OAAAA,EAAUiB,EAAAA,YAAOQ,EAAAA,EAAAA,SAE3BC,eAAgB1B,OAAAA,EAAUiB,EAAAA,YAAOS,EAAAA,EAAAA,eACjC,IAAGT,MAEJlB,QAASF,EAAME,SAEjB"}