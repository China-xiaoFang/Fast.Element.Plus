{"version":3,"file":"form.js","sources":["../../../../../packages/components/form/utils/form.ts"],"sourcesContent":["import { RegExps } from \"@fast-element-plus/constants\";\nimport { consoleWarn } from \"@fast-china/utils\";\nimport type { FormInstance, FormItemRule, FormValidationResult } from \"element-plus\";\nimport type { Ref } from \"vue\";\n\n/**\n * 表单工具类\n */\nexport const formUtil = {\n\t/**\n\t * ElForm 表单验证\n\t * @param elFormRef ElForm 组件ref\n\t */\n\tvalidate(elFormRef: Ref<FormInstance, FormInstance>): FormValidationResult {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\telFormRef.value.validate((isValid: boolean, invalidFields?) => {\n\t\t\t\tif (isValid) {\n\t\t\t\t\tresolve(isValid);\n\t\t\t\t} else {\n\t\t\t\t\tif (invalidFields) {\n\t\t\t\t\t\tconsoleWarn(\"formUtil\", false, invalidFields);\n\t\t\t\t\t}\n\t\t\t\t\treject(isValid);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\t/**\n\t * ElForm 表单验证，带滚动\n\t * @param elFormRef ElForm 组件ref\n\t */\n\tvalidateScrollToField(elFormRef: Ref<FormInstance>): FormValidationResult {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\telFormRef.value.validate((isValid: boolean, invalidFields?) => {\n\t\t\t\tif (isValid) {\n\t\t\t\t\tresolve(isValid);\n\t\t\t\t} else {\n\t\t\t\t\telFormRef.value.scrollToField(Object.keys(invalidFields));\n\t\t\t\t\tif (invalidFields) {\n\t\t\t\t\t\tconsoleWarn(\"formUtil\", false, invalidFields);\n\t\t\t\t\t}\n\t\t\t\t\treject(isValid);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\t/**\n\t * 手机号\n\t */\n\tmobile(rule: any, value: string, callback: any): void {\n\t\tif (!value) {\n\t\t\tcallback(new Error(\"请输入手机号码\"));\n\t\t} else if (RegExps.Mobile.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的手机号码\"));\n\t\t}\n\t},\n\t/**\n\t * 电话号码\n\t */\n\tphone(rule: any, value: string, callback: any): void {\n\t\tif (!value) {\n\t\t\tcallback();\n\t\t} else if (RegExps.Phone.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的电话号码\"));\n\t\t}\n\t},\n\t/**\n\t * 邮箱\n\t */\n\temail(rule: any, value: string, callback: any): void {\n\t\tif (!value) {\n\t\t\tcallback();\n\t\t} else if (RegExps.Email.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的邮箱地址\"));\n\t\t}\n\t},\n\t/**\n\t * 身份证\n\t */\n\tidCard(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.IdCard.test(value) || !value) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的身份证号码\"));\n\t\t}\n\t},\n\t/**\n\t * 车牌号\n\t */\n\tcarNumber(rule: any, value: string, callback: any): void {\n\t\tlet success = false;\n\t\tif (value?.length === 7) {\n\t\t\tsuccess = RegExps.CarNumber.test(value);\n\t\t} else if (value?.length === 8) {\n\t\t\tsuccess = RegExps.NewEnergyCarNumber.test(value);\n\t\t}\n\t\tif (success) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的车牌号码\"));\n\t\t}\n\t},\n\t/**\n\t * editor 必填\n\t */\n\teditorRequired(rule: any, value: string, callback: any): void {\n\t\tif (value === \"<p><br></p>\") {\n\t\t\treturn callback(new Error(\"内容不能为空\"));\n\t\t}\n\t\treturn callback();\n\t},\n\t/**\n\t * 外部链接\n\t */\n\texternal(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.External.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的外部链接\"));\n\t\t}\n\t},\n\t/**\n\t * 有效的URL\n\t */\n\turl(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.Url.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的Url\"));\n\t\t}\n\t},\n\t/**\n\t * 邮政编码\n\t */\n\tpostCode(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.PostCode.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的邮政编码\"));\n\t\t}\n\t},\n\t/**\n\t * 账号（6-20位字母或数字，必须以字母开头，不能全为数字）\n\t */\n\taccount(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.Account.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的账号（6-20位字母或数字，必须以字母开头，不能全为数字）\"));\n\t\t}\n\t},\n\t/**\n\t * 弱密码（只包含字母和数字，长度为6到18位）\n\t */\n\tpassword(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.Password.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的密码（只包含字母和数字，长度为6到18位）\"));\n\t\t}\n\t},\n\t/**\n\t * 强密码（8到20位，包含大小写字母、数字及特殊字符）\n\t */\n\tstrongPassword(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.StrongPassword.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的密码（8到20位，包含大小写字母、数字及特殊字符）\"));\n\t\t}\n\t},\n\t/**\n\t * 中文字符\n\t */\n\tchinese(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.Chinese.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的中文字符\"));\n\t\t}\n\t},\n\t/**\n\t * 英文字符\n\t */\n\tenglish(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.English.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的英文字符\"));\n\t\t}\n\t},\n\t/**\n\t * 文本框必填\n\t */\n\tinputRequired(message: string, trigger = \"blur\"): FormItemRule {\n\t\treturn {\n\t\t\trequired: true,\n\t\t\tmessage,\n\t\t\ttrigger,\n\t\t};\n\t},\n\t/**\n\t * 选择器必选\n\t */\n\tselectRequired(message: string, trigger = \"change\"): FormItemRule {\n\t\treturn {\n\t\t\trequired: true,\n\t\t\tmessage,\n\t\t\ttrigger,\n\t\t};\n\t},\n};\n"],"names":["formUtil","validate","elFormRef","Promise","resolve","reject","value","isValid","invalidFields","consoleWarn","validateScrollToField","scrollToField","Object","keys","mobile","rule","callback","RegExps","Mobile","test","Error","phone","Phone","email","Email","idCard","IdCard","carNumber","success","length","CarNumber","NewEnergyCarNumber","editorRequired","external","External","url","Url","postCode","PostCode","account","Account","password","Password","strongPassword","StrongPassword","chinese","Chinese","english","English","inputRequired","message","trigger","required","selectRequired"],"mappings":"qMAQaA,EAAW,CAKvBC,SAASC,GACD,IAAIC,QAAiB,CAACC,EAASC,KACrCH,EAAUI,MAAML,SAAS,CAACM,EAAkBC,KACvCD,EACHH,EAAQG,IAEJC,GACHC,cAAY,YAAY,EAAOD,GAEhCH,EAAOE,QASXG,sBAAsBR,GACd,IAAIC,QAAiB,CAACC,EAASC,KACrCH,EAAUI,MAAML,SAAS,CAACM,EAAkBC,KACvCD,EACHH,EAAQG,IAERL,EAAUI,MAAMK,cAAcC,OAAOC,KAAKL,IACtCA,GACHC,cAAY,YAAY,EAAOD,GAEhCH,EAAOE,QAQX,MAAAO,CAAOC,EAAWT,EAAeU,GAC3BV,EAEMW,EAAAA,QAAQC,OAAOC,KAAKb,GAC9BU,IAEAA,EAAS,IAAII,MAAM,eAJnBJ,EAAS,IAAII,MAAM,WAMrB,EAIA,KAAAC,CAAMN,EAAWT,EAAeU,GAC1BV,EAEMW,EAAAA,QAAQK,MAAMH,KAAKb,GAC7BU,IAEAA,EAAS,IAAII,MAAM,eAJnBJ,GAMF,EAIA,KAAAO,CAAMR,EAAWT,EAAeU,GAC1BV,EAEMW,EAAAA,QAAQO,MAAML,KAAKb,GAC7BU,IAEAA,EAAS,IAAII,MAAM,eAJnBJ,GAMF,EAIA,MAAAS,CAAOV,EAAWT,EAAeU,GAC5BC,EAAAA,QAAQS,OAAOP,KAAKb,KAAWA,EAClCU,IAEAA,EAAS,IAAII,MAAM,eAErB,EAIA,SAAAO,CAAUZ,EAAWT,EAAeU,GACnC,IAAIY,GAAU,EACQ,IAAlBtB,GAAOuB,OACVD,EAAUX,EAAAA,QAAQa,UAAUX,KAAKb,GACL,IAAlBA,GAAOuB,SACjBD,EAAUX,EAAAA,QAAQc,mBAAmBZ,KAAKb,IAEvCsB,EACHZ,IAEAA,EAAS,IAAII,MAAM,cAErB,EAIAY,eAAA,CAAejB,EAAWT,EAAeU,IAC1B,gBAAVV,EACIU,EAAS,IAAII,MAAM,WAEpBJ,IAKR,QAAAiB,CAASlB,EAAWT,EAAeU,GAC9BC,UAAQiB,SAASf,KAAKb,GACzBU,IAEAA,EAAS,IAAII,MAAM,cAErB,EAIA,GAAAe,CAAIpB,EAAWT,EAAeU,GACzBC,UAAQmB,IAAIjB,KAAKb,GACpBU,IAEAA,EAAS,IAAII,MAAM,aAErB,EAIA,QAAAiB,CAAStB,EAAWT,EAAeU,GAC9BC,UAAQqB,SAASnB,KAAKb,GACzBU,IAEAA,EAAS,IAAII,MAAM,cAErB,EAIA,OAAAmB,CAAQxB,EAAWT,EAAeU,GAC7BC,UAAQuB,QAAQrB,KAAKb,GACxBU,IAEAA,EAAS,IAAII,MAAM,uCAErB,EAIA,QAAAqB,CAAS1B,EAAWT,EAAeU,GAC9BC,UAAQyB,SAASvB,KAAKb,GACzBU,IAEAA,EAAS,IAAII,MAAM,+BAErB,EAIA,cAAAuB,CAAe5B,EAAWT,EAAeU,GACpCC,UAAQ2B,eAAezB,KAAKb,GAC/BU,IAEAA,EAAS,IAAII,MAAM,mCAErB,EAIA,OAAAyB,CAAQ9B,EAAWT,EAAeU,GAC7BC,UAAQ6B,QAAQ3B,KAAKb,GACxBU,IAEAA,EAAS,IAAII,MAAM,cAErB,EAIA,OAAA2B,CAAQhC,EAAWT,EAAeU,GAC7BC,UAAQ+B,QAAQ7B,KAAKb,GACxBU,IAEAA,EAAS,IAAII,MAAM,cAErB,EAIA6B,cAAA,CAAcC,EAAiBC,EAAU,UACjC,CACNC,UAAU,EACVF,UACAC,YAMFE,eAAA,CAAeH,EAAiBC,EAAU,YAClC,CACNC,UAAU,EACVF,UACAC"}