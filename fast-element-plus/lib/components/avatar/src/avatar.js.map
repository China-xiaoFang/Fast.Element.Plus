{"version":3,"file":"avatar.js","sources":["../../../../../packages/components/avatar/src/avatar.tsx"],"sourcesContent":["import type { Component } from \"vue\";\nimport { computed, defineComponent, reactive } from \"vue\";\nimport { Picture } from \"@element-plus/icons-vue\";\nimport { definePropType, makeSlots, useExpose, useProps, useRender } from \"@fast-element-plus/utils\";\nimport { ElAvatar, avatarEmits, avatarProps } from \"element-plus\";\n\nexport const faAvatarProps = {\n\t...avatarProps,\n\t/** @description representation type to icon, more info on icon component. */\n\ticon: {\n\t\ttype: definePropType<string | Component>([String, Object, Function]),\n\t\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\t\tdefault: () => Picture,\n\t},\n\t/**\n\t * @description 原图\n\t */\n\toriginal: Boolean,\n\t/** @description 标准 */\n\tnormal: Boolean,\n\t/** @description 小图 */\n\tsmall: Boolean,\n\t/** @description 缩略图 */\n\tthumb: Boolean,\n};\n\nexport const faAvatarEmits = {\n\t...avatarEmits,\n};\n\ntype FaAvatarSlots = {\n\t/** @description 默认内容插槽 */\n\tdefault: { src: string };\n};\n\nexport default defineComponent({\n\tname: \"FaAvatar\",\n\tprops: faAvatarProps,\n\temits: faAvatarEmits,\n\tslots: makeSlots<FaAvatarSlots>(),\n\tsetup(props, { attrs, slots, emit, expose }) {\n\t\tconst state = reactive({\n\t\t\tsrc: computed(() => {\n\t\t\t\tif (props.src) {\n\t\t\t\t\tif (props.original) {\n\t\t\t\t\t\treturn props.src;\n\t\t\t\t\t} else if (props.normal) {\n\t\t\t\t\t\treturn `${props.src}@!normal`;\n\t\t\t\t\t} else if (props.small) {\n\t\t\t\t\t\treturn `${props.src}@!small`;\n\t\t\t\t\t} else if (props.thumb) {\n\t\t\t\t\t\treturn `${props.src}@!thumb`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 默认使用缩略图\n\t\t\t\t\t\treturn `${props.src}@!thumb`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t});\n\n\t\tconst elAvatarProps = useProps(props, avatarProps, [\"src\"]);\n\n\t\tuseRender(() => (\n\t\t\t<ElAvatar {...elAvatarProps.value} class=\"fa-avatar\" src={state.src} onError={(evt: Event) => emit(\"error\", evt)}>\n\t\t\t\t{slots.default && slots.default({ src: state.src })}\n\t\t\t</ElAvatar>\n\t\t));\n\n\t\treturn useExpose(expose, {\n\t\t\t/** @description 图片路径 */\n\t\t\tsrc: state.src,\n\t\t});\n\t},\n});\n"],"names":["faAvatarProps","avatarProps","icon","type","definePropType","String","Object","Function","default","Picture","original","Boolean","normal","small","thumb","faAvatarEmits","avatarEmits","defineComponent","name","props","emits","slots","makeSlots","setup","attrs","emit","expose","state","reactive","src","computed","undefined","elAvatarProps","useProps","useExpose","useRender","_createVNode","ElAvatar","_mergeProps","value","class","onError","evt"],"mappings":"oZAMaA,EAAgB,IACzBC,EAAWA,YAEdC,KAAM,CACLC,KAAMC,EAAAA,eAAmC,CAACC,OAAQC,OAAQC,WAE1DC,QAASA,IAAMC,EAAAA,SAKhBC,SAAUC,QAEVC,OAAQD,QAERE,MAAOF,QAEPG,MAAOH,SAGKI,EAAgB,IACzBC,EAAAA,aAQWC,oBAAgB,CAC9BC,KAAM,WACNC,MAAOnB,EACPoB,MAAOL,EACPM,MAAOC,EAAAA,YACPC,KAAAA,CAAMJ,GAAOK,MAAEA,EAAOH,MAAAA,EAAAA,KAAOI,EAAMC,OAAAA,IAC5BC,MAAAA,EAAQC,EAAAA,SAAS,CACtBC,IAAKC,EAAQA,UAAC,KACb,GAAIX,EAAMU,IACT,OAAIV,EAAMT,SACFS,EAAMU,IACHV,EAAMP,OACT,GAAGO,EAAMU,cACNV,EAAMN,MACT,GAAGM,EAAMU,cACNV,EAAML,MACT,GAAGK,EAAMU,aAMXE,MAIHC,EAAgBC,EAAAA,SAASd,EAAOlB,EAAAA,YAAa,CAAC,QAQ7CiC,OANEC,EAAAA,WAAC,IAAAC,EAAAA,YAAAC,EAAAA,SAAAC,EAAAA,WACKN,EAAcO,MAAK,CAAAC,MAAA,YAAAX,IAAyBF,EAAME,IAAGY,QAAYC,GAAejB,EAAK,QAASiB,KAAI,CAAAlC,QAAAA,IAAA,CAC9Ga,EAAMb,SAAWa,EAAMb,QAAQ,CAAEqB,IAAKF,EAAME,WAIxCK,EAAAA,UAAUR,EAAQ,CAExBG,IAAKF,EAAME,KAEb"}