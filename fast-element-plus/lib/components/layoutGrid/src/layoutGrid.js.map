{"version":3,"file":"layoutGrid.js","sources":["../../../../../packages/components/layoutGrid/src/layoutGrid.tsx"],"sourcesContent":["import { computed, defineComponent, nextTick, onActivated, onDeactivated, onMounted, onUnmounted, provide, ref, watch } from \"vue\";\nimport { definePropType, makeSlots, useExpose, useRender } from \"@fast-china/utils\";\nimport { isArray, isNumber, isObject } from \"lodash-unified\";\nimport type { FaLayoutGridBreakPoint } from \"./layoutGrid.type\";\nimport type { VNode, VNodeArrayChildren } from \"vue\";\n\ntype FaLayoutGridSlots = {\n\t/** @description 默认内容插槽 */\n\tdefault: never;\n};\n\nexport default defineComponent({\n\tname: \"FaLayoutGrid\",\n\tprops: {\n\t\t/** @description Grid布局列配置 */\n\t\tcols: {\n\t\t\ttype: definePropType<string | number | Record<FaLayoutGridBreakPoint, number>>([String, Number, Object]),\n\t\t\tdefault: (): Record<FaLayoutGridBreakPoint, number> => ({ xs: 1, sm: 2, md: 3, lg: 4, xl: 5 }),\n\t\t},\n\t\t/** @description 折叠 */\n\t\tcollapsed: Boolean,\n\t\t/** @description 折叠行数 */\n\t\tcollapsedRows: {\n\t\t\ttype: [String, Number],\n\t\t\tdefault: 1,\n\t\t},\n\t\t/** @description 间距，偏移 */\n\t\tgap: {\n\t\t\ttype: definePropType<number | [number, number]>([Number, Array]),\n\t\t\tdefault: 0,\n\t\t},\n\t},\n\temits: {\n\t\t/** @description 断点变化事件 */\n\t\tbreakPointChange: ({ breakPoint }: { breakPoint: FaLayoutGridBreakPoint }) => true,\n\t},\n\tslots: makeSlots<FaLayoutGridSlots>(),\n\tsetup(props, { slots, emit, expose }) {\n\t\tconst divElRef = ref<HTMLElement>();\n\n\t\t// 注入 gap 间距\n\t\tprovide(\"gap\", isArray(props.gap) ? props.gap[0] : props.gap);\n\n\t\t// 注入响应式断点\n\t\tconst breakPoint = ref<FaLayoutGridBreakPoint>(\"xl\");\n\t\tprovide(\"breakPoint\", breakPoint);\n\n\t\t// 注入要开始折叠的 index\n\t\tconst hiddenIndex = ref(-1);\n\t\tprovide(\"shouldHiddenIndex\", hiddenIndex);\n\n\t\t// 注入 cols\n\t\tconst cols = computed(() => {\n\t\t\tif (isObject(props.cols)) return props.cols[breakPoint.value] ?? props.cols;\n\t\t\treturn props.cols;\n\t\t});\n\t\tprovide(\"cols\", cols);\n\n\t\tconst collapsedRows = isNumber(props.collapsedRows) ? props.collapsedRows : Number(props.collapsedRows);\n\n\t\t// 断点映射\n\t\tconst breakpoints = {\n\t\t\t// 小于480屏幕（如手机）\n\t\t\txs: { min: 0, max: 479 },\n\t\t\t// 平板竖屏\n\t\t\tsm: { min: 480, max: 768 },\n\t\t\t// 平板横屏\n\t\t\tmd: { min: 768, max: 1024 },\n\t\t\t// 小型桌面\n\t\t\tlg: { min: 1024, max: 1440 },\n\t\t\t// 大型桌面\n\t\t\txl: { min: 1440, max: Infinity },\n\t\t};\n\n\t\t// 监听屏幕变化\n\t\tconst resize = (e: ResizeObserverEntry[]): void => {\n\t\t\t// 这里肯定只有一个\n\t\t\tif (e.length !== 1) throw new Error(\"未知的多个El\");\n\t\t\tconst curEl = e[0];\n\t\t\tconst width = curEl.target.scrollWidth;\n\n\t\t\tfor (const [key, { min, max }] of Object.entries(breakpoints)) {\n\t\t\t\tif (width >= min && width <= max) {\n\t\t\t\t\tbreakPoint.value = key as FaLayoutGridBreakPoint;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tlet resizeObserver: ResizeObserver = null;\n\n\t\tonMounted(() => {\n\t\t\tnextTick(() => {\n\t\t\t\tresizeObserver = new ResizeObserver(resize);\n\t\t\t\tresizeObserver.observe(divElRef.value);\n\t\t\t});\n\n\t\t\t// 断点变化时 执行 findIndex\n\t\t\twatch(\n\t\t\t\t() => breakPoint.value,\n\t\t\t\t(newValue) => {\n\t\t\t\t\temit(\"breakPointChange\", { breakPoint: newValue });\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\timmediate: true,\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\tonActivated(() => {\n\t\t\tnextTick(() => {\n\t\t\t\tresizeObserver = new ResizeObserver(resize);\n\t\t\t\tresizeObserver.observe(divElRef.value);\n\t\t\t});\n\t\t});\n\n\t\tonUnmounted(() => {\n\t\t\tresizeObserver?.disconnect();\n\t\t});\n\n\t\tonDeactivated(() => {\n\t\t\tresizeObserver?.disconnect();\n\t\t});\n\n\t\t// 设置间距\n\t\tconst gap = computed(() => {\n\t\t\tif (isNumber(props.gap)) return `${props.gap}px`;\n\t\t\tif (isArray(props.gap)) return `${props.gap[1]}px ${props.gap[0]}px`;\n\t\t\treturn \"unset\";\n\t\t});\n\n\t\t// 设置 style\n\t\tconst style = computed(() => {\n\t\t\treturn {\n\t\t\t\tdisplay: \"grid\",\n\t\t\t\tgridGap: gap.value,\n\t\t\t\tgridTemplateColumns: `repeat(${cols.value}, minmax(0, 1fr))`,\n\t\t\t};\n\t\t});\n\n\t\tuseRender(() => {\n\t\t\tconst defaultSlot = slots?.default() ?? [];\n\n\t\t\tif (props.collapsed) {\n\t\t\t\tconst fields: VNodeArrayChildren = [];\n\t\t\t\tlet suffix: VNode = null;\n\n\t\t\t\tdefaultSlot.forEach((slot: any) => {\n\t\t\t\t\t// suffix\n\t\t\t\t\tif (typeof slot.type === \"object\" && slot.type.name === \"FaLayoutGridItem\" && slot.props?.suffix !== undefined) suffix = slot;\n\t\t\t\t\t// slot children\n\t\t\t\t\tif (typeof slot.type === \"symbol\" && Array.isArray(slot?.children)) fields.push(...slot.children);\n\t\t\t\t});\n\n\t\t\t\t// 计算 suffix 所占用的列\n\t\t\t\tlet suffixCols = 0;\n\t\t\t\tif (suffix) {\n\t\t\t\t\tsuffixCols =\n\t\t\t\t\t\t(suffix.props[breakPoint.value]?.span ?? suffix.props?.span ?? 1) +\n\t\t\t\t\t\t(suffix.props[breakPoint.value]?.offset ?? suffix.props?.offset ?? 0);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tlet find = false;\n\t\t\t\t\tfields.reduce((prev = 0, current, index) => {\n\t\t\t\t\t\tprev +=\n\t\t\t\t\t\t\t((current as VNode).props[breakPoint.value]?.span ?? (current as VNode).props?.span ?? 1) +\n\t\t\t\t\t\t\t((current as VNode).props[breakPoint.value]?.offset ?? (current as VNode).props?.offset ?? 0);\n\t\t\t\t\t\tif (Number(prev) > collapsedRows * Number(cols.value) - suffixCols) {\n\t\t\t\t\t\t\thiddenIndex.value = index;\n\t\t\t\t\t\t\tfind = true;\n\t\t\t\t\t\t\tthrow \"find it\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn prev;\n\t\t\t\t\t}, 0);\n\t\t\t\t\tif (!find) hiddenIndex.value = -1;\n\t\t\t\t} catch {}\n\t\t\t} else {\n\t\t\t\thiddenIndex.value = -1;\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<div ref={divElRef} style={style.value}>\n\t\t\t\t\t{defaultSlot}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\treturn useExpose(expose, {\n\t\t\t/** @description 响应式断点 */\n\t\t\tbreakPoint,\n\t\t});\n\t},\n});\n"],"names":["LayoutGrid","name","props","cols","type","definePropType","String","Number","Object","default","xs","sm","md","lg","xl","collapsed","Boolean","collapsedRows","gap","Array","emits","breakPointChange","breakPoint","slots","makeSlots","setup","emit","expose","divElRef","ref","provide","isArray","hiddenIndex","computed","isObject","value","isNumber","breakpoints","min","max","Infinity","resize","e","length","Error","width","target","scrollWidth","key","entries","resizeObserver","onMounted","nextTick","ResizeObserver","observe","watch","newValue","immediate","onActivated","onUnmounted","disconnect","onDeactivated","style","display","gridGap","gridTemplateColumns","useRender","defaultSlot","fields","suffix","forEach","slot","undefined","children","push","suffixCols","span","offset","find","reduce","prev","current","index","_createVNode","useExpose"],"mappings":"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"}