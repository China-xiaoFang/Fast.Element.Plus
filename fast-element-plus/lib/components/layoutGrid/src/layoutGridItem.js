"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const e=require("vue");require("../../../utils/index.js");const t=require("../../../utils/vue/props.js"),s=require("../../../utils/vue/slots.js"),u=require("../../../utils/vue/useRender.js"),n=e.defineComponent({name:"FaLayoutGridItem",props:{offset:{type:Number,default:0},span:{type:Number,default:1},suffix:{type:Boolean,default:!1},xs:{type:t.definePropType(Object)},sm:{type:t.definePropType(Object)},md:{type:t.definePropType(Object)},lg:{type:t.definePropType(Object)},xl:{type:t.definePropType(Object)}},slots:s.makeSlots(),setup(t,{attrs:s,slots:n,emit:i,expose:o}){const r=e.reactive({show:!0}),l=s,a=e.inject("breakPoint",e.ref("xl")),p=e.inject("shouldHiddenIndex",e.ref(-1));e.watch((()=>[p.value,a.value]),(e=>{~~l.index&&(r.show=!(-1!==e[0]&&parseInt(l.index)>=Number(e[0])))}),{immediate:!0});const d=e.inject("gap",0),f=e.inject("cols",e.ref(5)),c=e.computed((()=>{const e=t[a.value],s=(null==e?void 0:e.span)??t.span,u=(null==e?void 0:e.offset)??t.offset;return t.suffix?{gridColumnStart:f.value-s-u+1,gridColumnEnd:`span ${s+u}`,marginLeft:0!==u?`calc(((100% + ${d}px) / ${s+u}) * ${u})`:"unset"}:{gridColumn:`span ${s+u>f.value?f.value:s+u}/span ${s+u>f.value?f.value:s+u}`,marginLeft:0!==u?`calc(((100% + ${d}px) / ${s+u}) * ${u})`:"unset"}}));u.useRender((()=>e.withDirectives(e.createVNode("div",{style:c.value},[n.default&&n.default()]),[[e.vShow,r.show]])))}});exports.default=n;
//# sourceMappingURL=layoutGridItem.js.map
