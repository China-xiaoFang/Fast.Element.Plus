{"version":3,"file":"useUpload.js","sources":["../../../../../packages/components/upload/src/useUpload.ts"],"sourcesContent":["import { inject, ref, watch } from \"vue\";\nimport { FastApp } from \"@fast-element-plus/settings\";\nimport { consoleError, consoleWarn, uploadUtil } from \"@fast-element-plus/utils\";\nimport { useVModel } from \"@vueuse/core\";\nimport { Decimal } from \"decimal.js\";\nimport type { UploadFile, UploadFiles, UploadProps, UploadRawFile, UploadRequestOptions, UploadUserFile } from \"element-plus\";\nimport { ElMessage, ElNotification, formContextKey, formItemContextKey, genFileId } from \"element-plus\";\nimport { isArray, isNumber, isString } from \"lodash-unified\";\n\nexport const useUpload = <T extends string | string[]>(\n\tcomponentName: string,\n\tfileTypeName: string,\n\tprops: UploadProps & {\n\t\tmodelValue: T;\n\t},\n\temit: ((event: \"update:fileList\", value: UploadUserFile[]) => void) &\n\t\t((event: \"update:modelValue\", value: T) => void) &\n\t\t((event: \"change\", value: T) => void),\n\tdata?: {\n\t\tmaxSize?: string | number;\n\t\tuploadUrl?: string;\n\t} // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n) => {\n\tconst fileList = useVModel(props, \"fileList\", emit, { passive: true });\n\n\tconst loading = ref(false);\n\n\t// 获取 el-form 组件上下文\n\tconst formContext = inject(formContextKey, undefined);\n\t// 获取 el-form-item 组件上下文\n\tconst formItemContext = inject(formItemContextKey, undefined);\n\n\tconst mbNum = new Decimal(1024);\n\tconst maxSizeKB = new Decimal(isNumber(data?.maxSize) ? data?.maxSize : Number(data?.maxSize));\n\tconst maxSizeMB = maxSizeKB.div(mbNum);\n\n\tconst handleValue = (): void => {\n\t\tif (fileList.value.length > 0) {\n\t\t\tif (isString(props.modelValue)) {\n\t\t\t\temit(\"update:modelValue\", fileList.value[0].url as T);\n\t\t\t\temit(\"change\", fileList.value[0].url as T);\n\t\t\t} else {\n\t\t\t\tif (props.multiple) {\n\t\t\t\t\tconst value = fileList.value.map((m) => m.url);\n\t\t\t\t\temit(\"update:modelValue\", value as T);\n\t\t\t\t\temit(\"change\", value as T);\n\t\t\t\t} else {\n\t\t\t\t\temit(\"update:modelValue\", fileList.value[0].url as T);\n\t\t\t\t\temit(\"change\", fileList.value[0].url as T);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\temit(\"update:modelValue\", null);\n\t\t\temit(\"change\", null);\n\t\t}\n\t};\n\n\tconst handleHttpRequest = async (options: UploadRequestOptions): Promise<void> => {\n\t\tlet propsData;\n\t\tif (props.data) {\n\t\t\tpropsData = uploadUtil.getPropsData(options.file, props.data);\n\t\t}\n\t\tconst uploadUrl = data?.uploadUrl ?? FastApp.state.upload.url;\n\t\tif (!uploadUrl) {\n\t\t\tElMessage.error(`上传${fileTypeName}地址不能为空`);\n\t\t\tconsoleError(componentName, `上传${fileTypeName}地址 “uploadUrl” 不能为空`);\n\t\t\treturn;\n\t\t}\n\t\tloading.value = true;\n\t\ttry {\n\t\t\tconst fileUrl = await uploadUtil.uploadFile(uploadUrl, options.file, options.filename, propsData);\n\t\t\toptions.onSuccess(fileUrl);\n\t\t} finally {\n\t\t\tloading.value = false;\n\t\t}\n\t};\n\n\tconst handleOnSuccess = (fileUrl: string, uploadFile: UploadFile, uploadFiles: UploadFiles): void => {\n\t\tif (!fileUrl) return;\n\t\tif (!props.multiple && uploadFiles.length > 1) {\n\t\t\tuploadFiles.shift();\n\t\t}\n\t\tuploadFile.url = fileUrl;\n\t\thandleValue();\n\t\t// 调用 el-form 内部的校验方法（可自动校验）\n\t\tformItemContext?.prop && formContext?.validateField([formItemContext.prop as string]);\n\t\tElMessage.success(\"上传成功\");\n\t\tprops.onSuccess && props.onSuccess(fileUrl, uploadFile, uploadFiles);\n\t};\n\n\tconst handleOnError = (error: Error, uploadFile: UploadFile, uploadFiles: UploadFiles): void => {\n\t\tElNotification({\n\t\t\tmessage: `【${uploadFile.name}】${fileTypeName}上传失败，请您重新上传`,\n\t\t\ttype: \"error\",\n\t\t});\n\t\tprops.onError && props.onError(error, uploadFile, uploadFiles);\n\t};\n\n\tconst handleOnExceed = (files: File[], uploadFiles: UploadUserFile[]): void => {\n\t\tElMessage.warning(`最多只能上传 ${props.limit} 个${fileTypeName}，请移除后再进行上传`);\n\t\tprops.onExceed && props.onExceed(files, uploadFiles);\n\t};\n\n\tconst handleOnUpload = (file: UploadFile | UploadRawFile): boolean => {\n\t\tconst fileSizeKB = new Decimal(file.size).div(mbNum);\n\n\t\tif (fileSizeKB.greaterThan(maxSizeKB)) {\n\t\t\tconsoleWarn(componentName, `【${file.name}】${fileTypeName}上传大小不能超过 ${maxSizeMB.toString()}MB`);\n\t\t\tElMessage.warning(`【${file.name}】${fileTypeName}上传大小不能超过 ${maxSizeMB.toString()}MB`);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst fileType = \"type\" in file ? file.type : file.raw.type;\n\n\t\tif (props.accept && props.accept.split(\",\").every((e) => e !== fileType)) {\n\t\t\tconst uploadFileNames = uploadUtil.detectFileType(props.accept);\n\t\t\tconsoleError(componentName, `只允许上传【${uploadFileNames}】格式的${fileTypeName}`);\n\t\t\tElMessage.error(`只允许上传【${uploadFileNames}】格式的${fileTypeName}`);\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t/**\n\t * 监听 v-model 绑定数据\n\t */\n\twatch(\n\t\t() => props.modelValue,\n\t\t(newValue) => {\n\t\t\tif (newValue) {\n\t\t\t\tif (isArray(newValue)) {\n\t\t\t\t\tfileList.value = newValue.map((m) => {\n\t\t\t\t\t\tconst find = fileList.value.find((f) => f.url === m);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\tstatus: \"success\",\n\t\t\t\t\t\t\tuid: find?.uid ?? genFileId(),\n\t\t\t\t\t\t\turl: m,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst find = fileList.value.find((f) => f.url === newValue);\n\t\t\t\t\tfileList.value = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\tstatus: \"success\",\n\t\t\t\t\t\t\tuid: find?.uid ?? genFileId(),\n\t\t\t\t\t\t\turl: newValue,\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\timmediate: true,\n\t\t}\n\t);\n\n\treturn {\n\t\tfileList,\n\t\tloading,\n\t\tformContext,\n\t\tformItemContext,\n\t\tmaxSizeMB,\n\t\thandleValue,\n\t\thandleHttpRequest,\n\t\thandleOnSuccess,\n\t\thandleOnError,\n\t\thandleOnExceed,\n\t\thandleOnUpload,\n\t};\n};\n"],"names":["componentName","fileTypeName","props","emit","data","fileList","useVModel","passive","loading","ref","formContext","inject","formContextKey","formItemContext","formItemContextKey","mbNum","Decimal","maxSizeKB","isNumber","maxSize","Number","maxSizeMB","div","handleValue","value","length","isString","modelValue","url","multiple","map","m","vue","watch","newValue","isArray","find","f","name","status","uid","genFileId","immediate","handleHttpRequest","async","options","propsData","uploadUtil","getPropsData","file","uploadUrl","FastApp","state","upload","ElMessage","error","consoleError","fileUrl","uploadFile","filename","onSuccess","handleOnSuccess","uploadFiles","shift","prop","validateField","success","handleOnError","ElNotification","message","type","onError","handleOnExceed","files","warning","limit","onExceed","handleOnUpload","size","greaterThan","consoleWarn","toString","fileType","raw","accept","split","every","e","uploadFileNames","detectFileType"],"mappings":"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"}