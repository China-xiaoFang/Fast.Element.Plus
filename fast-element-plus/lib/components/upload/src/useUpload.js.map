{"version":3,"file":"useUpload.js","sources":["../../../../../packages/components/upload/src/useUpload.ts"],"sourcesContent":["import { inject, onMounted, ref, watch } from \"vue\";\nimport { ElMessage, ElNotification, formContextKey, formItemContextKey, genFileId } from \"element-plus\";\nimport { consoleError, consoleWarn } from \"@fast-china/utils\";\nimport { useVModel } from \"@vueuse/core\";\nimport { Decimal } from \"decimal.js\";\nimport { isArray, isNumber, isString } from \"lodash-unified\";\nimport { uploadUtil } from \"../utils/upload\";\nimport type { UploadFile, UploadFiles, UploadProps, UploadRawFile, UploadRequestOptions, UploadUserFile } from \"element-plus\";\n\nexport const useUpload = <T extends string | string[]>(\n\tcomponentName: string,\n\tfileTypeName: string,\n\tprops: UploadProps & {\n\t\tmodelValue: T;\n\t},\n\temit: ((event: \"update:fileList\", value: UploadUserFile[]) => void) &\n\t\t((event: \"update:modelValue\", value: T) => void) &\n\t\t((event: \"change\", value: T) => void),\n\tdata?: {\n\t\tmaxSize?: string | number;\n\t\tuploadApi?: (formData: FormData) => Promise<string>;\n\t\tuploadUrl?: string;\n\t}\n\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type, @typescript-eslint/explicit-module-boundary-types\n) => {\n\tconst fileList = useVModel(props, \"fileList\", emit, { passive: true });\n\n\tconst loading = ref(false);\n\n\t// 获取 el-form 组件上下文\n\tconst formContext = inject(formContextKey, undefined);\n\t// 获取 el-form-item 组件上下文\n\tconst formItemContext = inject(formItemContextKey, undefined);\n\n\tconst mbNum = new Decimal(1024);\n\tconst maxSizeKB = new Decimal(isNumber(data?.maxSize) ? data?.maxSize : Number(data?.maxSize));\n\tconst maxSizeMB = maxSizeKB.div(mbNum);\n\n\tonMounted(() => {\n\t\tif (!data.uploadApi && !data.uploadUrl) {\n\t\t\tconsoleWarn(componentName, \"['uploadApi', 'uploadUrl'] 属性必须二选一。\");\n\t\t}\n\t});\n\n\tconst handleValue = (): void => {\n\t\tif (fileList.value.length > 0) {\n\t\t\tif (isString(props.modelValue)) {\n\t\t\t\temit(\"update:modelValue\", fileList.value[0].url as T);\n\t\t\t\temit(\"change\", fileList.value[0].url as T);\n\t\t\t} else {\n\t\t\t\tif (props.multiple) {\n\t\t\t\t\tconst value = fileList.value.map((m) => m.url);\n\t\t\t\t\temit(\"update:modelValue\", value as T);\n\t\t\t\t\temit(\"change\", value as T);\n\t\t\t\t} else {\n\t\t\t\t\temit(\"update:modelValue\", fileList.value[0].url as T);\n\t\t\t\t\temit(\"change\", fileList.value[0].url as T);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\temit(\"update:modelValue\", null);\n\t\t\temit(\"change\", null);\n\t\t}\n\t};\n\n\tconst handleHttpRequest = async (options: UploadRequestOptions): Promise<void> => {\n\t\tlet propsData;\n\t\tif (props.data) {\n\t\t\tpropsData = uploadUtil.getPropsData(options.file, props.data);\n\t\t}\n\t\tif (!data?.uploadUrl && !data?.uploadUrl) {\n\t\t\tElMessage.error(`上传${fileTypeName}Api或地址不能为空`);\n\t\t\tconsoleError(componentName, `上传${fileTypeName}接口 “uploadApi” 或地址 “uploadUrl” 不能为空`);\n\t\t\treturn;\n\t\t}\n\t\tloading.value = true;\n\t\ttry {\n\t\t\tlet fileUrl: string;\n\t\t\tif (data.uploadApi) {\n\t\t\t\tfileUrl = await uploadUtil.uploadFileByApi(data.uploadApi, options.file, options.filename, propsData);\n\t\t\t} else {\n\t\t\t\tfileUrl = await uploadUtil.uploadFile(data.uploadUrl, options.file, options.filename, propsData);\n\t\t\t}\n\t\t\toptions.onSuccess(fileUrl);\n\t\t} finally {\n\t\t\tloading.value = false;\n\t\t}\n\t};\n\n\tconst handleOnSuccess = (fileUrl: string, uploadFile: UploadFile, uploadFiles: UploadFiles): void => {\n\t\tif (!fileUrl) return;\n\t\tif (!props.multiple && uploadFiles.length > 1) {\n\t\t\tuploadFiles.shift();\n\t\t}\n\t\tuploadFile.url = fileUrl;\n\t\thandleValue();\n\t\t// 调用 el-form 内部的校验方法（可自动校验）\n\t\tformItemContext?.prop && formContext?.validateField([formItemContext.prop as string]);\n\t\tElMessage.success(\"上传成功\");\n\t\tprops.onSuccess && props.onSuccess(fileUrl, uploadFile, uploadFiles);\n\t};\n\n\tconst handleOnError = (error: Error, uploadFile: UploadFile, uploadFiles: UploadFiles): void => {\n\t\tElNotification({\n\t\t\tmessage: `【${uploadFile.name}】${fileTypeName}上传失败，请您重新上传`,\n\t\t\ttype: \"error\",\n\t\t});\n\t\tprops.onError && props.onError(error, uploadFile, uploadFiles);\n\t};\n\n\tconst handleOnExceed = (files: File[], uploadFiles: UploadUserFile[]): void => {\n\t\tElMessage.warning(`最多只能上传 ${props.limit} 个${fileTypeName}，请移除后再进行上传`);\n\t\tprops.onExceed && props.onExceed(files, uploadFiles);\n\t};\n\n\tconst handleOnUpload = (file: UploadFile | UploadRawFile): boolean => {\n\t\tconst fileSizeKB = new Decimal(file.size).div(mbNum);\n\n\t\tif (fileSizeKB.greaterThan(maxSizeKB)) {\n\t\t\tconsoleWarn(componentName, `【${file.name}】${fileTypeName}上传大小不能超过 ${maxSizeMB.toString()}MB`);\n\t\t\tElMessage.warning(`【${file.name}】${fileTypeName}上传大小不能超过 ${maxSizeMB.toString()}MB`);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst fileType = \"type\" in file ? file.type : file.raw.type;\n\n\t\tif (props.accept && props.accept.split(\",\").every((e) => e !== fileType)) {\n\t\t\tconst uploadFileNames = uploadUtil.detectFileType(props.accept);\n\t\t\tconsoleError(componentName, `只允许上传【${uploadFileNames}】格式的${fileTypeName}`);\n\t\t\tElMessage.error(`只允许上传【${uploadFileNames}】格式的${fileTypeName}`);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * 监听 v-model 绑定数据\n\t */\n\twatch(\n\t\t() => props.modelValue,\n\t\t(newValue) => {\n\t\t\tif (newValue) {\n\t\t\t\tif (isArray(newValue)) {\n\t\t\t\t\tfileList.value = newValue.map((m) => {\n\t\t\t\t\t\tconst find = fileList.value.find((f) => f.url === m);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\tstatus: \"success\",\n\t\t\t\t\t\t\tuid: find?.uid ?? genFileId(),\n\t\t\t\t\t\t\turl: m,\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst find = fileList.value.find((f) => f.url === newValue);\n\t\t\t\t\tfileList.value = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: \"\",\n\t\t\t\t\t\t\tstatus: \"success\",\n\t\t\t\t\t\t\tuid: find?.uid ?? genFileId(),\n\t\t\t\t\t\t\turl: newValue,\n\t\t\t\t\t\t},\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\timmediate: true,\n\t\t}\n\t);\n\n\treturn {\n\t\tfileList,\n\t\tloading,\n\t\tformContext,\n\t\tformItemContext,\n\t\tmaxSizeMB,\n\t\thandleValue,\n\t\thandleHttpRequest,\n\t\thandleOnSuccess,\n\t\thandleOnError,\n\t\thandleOnExceed,\n\t\thandleOnUpload,\n\t};\n};\n"],"names":["componentName","fileTypeName","props","emit","data","fileList","useVModel","passive","loading","ref","formContext","inject","formContextKey","formItemContext","formItemContextKey","mbNum","Decimal","maxSizeKB","isNumber","maxSize","Number","maxSizeMB","div","onMounted","uploadApi","uploadUrl","consoleWarn","handleValue","value","length","isString","modelValue","url","multiple","map","m","watch","newValue","isArray","find","f","name","status","uid","genFileId","immediate","handleHttpRequest","async","options","propsData","uploadUtil","getPropsData","file","ElMessage","error","consoleError","fileUrl","uploadFileByApi","filename","uploadFile","onSuccess","handleOnSuccess","uploadFiles","shift","prop","validateField","success","handleOnError","ElNotification","message","type","onError","handleOnExceed","files","warning","limit","onExceed","handleOnUpload","size","greaterThan","toString","fileType","raw","accept","split","every","e","uploadFileNames","detectFileType"],"mappings":"gSASyB,CACxBA,EACAC,EACAC,EAGAC,EAGAC,KAOA,MAAMC,EAAWC,EAAAA,UAAUJ,EAAO,WAAYC,EAAM,CAAEI,SAAS,IAEzDC,EAAUC,EAAAA,KAAI,GAGdC,EAAcC,EAAAA,OAAOC,EAAAA,oBAAgB,GAErCC,EAAkBF,EAAAA,OAAOG,EAAAA,wBAAoB,GAE7CC,EAAQ,IAAIC,EAAAA,QAAQ,MACpBC,EAAY,IAAID,UAAQE,EAAAA,SAASd,GAAMe,SAAWf,GAAMe,QAAUC,OAAOhB,GAAMe,UAC/EE,EAAYJ,EAAUK,IAAIP,GAEhCQ,EAAAA,UAAU,KACJnB,EAAKoB,WAAcpB,EAAKqB,WAC5BC,EAAAA,YAAY1B,EAAe,yCAI7B,MAAM2B,EAAc,KACnB,GAAItB,EAASuB,MAAMC,OAAS,EAC3B,GAAIC,EAAAA,SAAS5B,EAAM6B,YAClB5B,EAAK,oBAAqBE,EAASuB,MAAM,GAAGI,KAC5C7B,EAAK,SAAUE,EAASuB,MAAM,GAAGI,UAEjC,GAAI9B,EAAM+B,SAAU,CACnB,MAAML,EAAQvB,EAASuB,MAAMM,IAAKC,GAAMA,EAAEH,KAC1C7B,EAAK,oBAAqByB,GAC1BzB,EAAK,SAAUyB,EAChB,MACCzB,EAAK,oBAAqBE,EAASuB,MAAM,GAAGI,KAC5C7B,EAAK,SAAUE,EAASuB,MAAM,GAAGI,UAInC7B,EAAK,oBAAqB,MAC1BA,EAAK,SAAU,OA8GjB,OAhCAiC,EAAAA,MACC,IAAMlC,EAAM6B,WACXM,IACA,GAAIA,EACH,GAAIC,EAAAA,QAAQD,GACXhC,EAASuB,MAAQS,EAASH,IAAKC,IAC9B,MAAMI,EAAOlC,EAASuB,MAAMW,KAAMC,GAAMA,EAAER,MAAQG,GAClD,MAAO,CACNM,KAAM,GACNC,OAAQ,UACRC,IAAKJ,GAAMI,KAAOC,cAClBZ,IAAKG,SAGD,CACN,MAAMI,EAAOlC,EAASuB,MAAMW,KAAMC,GAAMA,EAAER,MAAQK,GAClDhC,EAASuB,MAAQ,CAChB,CACCa,KAAM,GACNC,OAAQ,UACRC,IAAKJ,GAAMI,KAAOC,cAClBZ,IAAKK,GAGR,GAGF,CACCQ,WAAW,IAIN,CACNxC,WACAG,UACAE,cACAG,kBACAQ,YACAM,cACAmB,kBAjHyBC,MAAOC,IAChC,IAAIC,EAIJ,GAHI/C,EAAME,OACT6C,EAAYC,EAAAA,WAAWC,aAAaH,EAAQI,KAAMlD,EAAME,QAEpDA,GAAMqB,YAAcrB,GAAMqB,UAG9B,OAFA4B,EAAAA,UAAUC,MAAM,KAAKrD,oBACrBsD,EAAAA,aAAavD,EAAe,KAAKC,wCAGlCO,EAAQoB,OAAQ,EAChB,IACC,IAAI4B,EAEHA,EADGpD,EAAKoB,gBACQ0B,EAAAA,WAAWO,gBAAgBrD,EAAKoB,UAAWwB,EAAQI,KAAMJ,EAAQU,SAAUT,SAE3EC,EAAAA,WAAWS,WAAWvD,EAAKqB,UAAWuB,EAAQI,KAAMJ,EAAQU,SAAUT,GAEvFD,EAAQY,UAAUJ,EACnB,CAAA,QACChD,EAAQoB,OAAQ,CACjB,GA6FAiC,gBA1FuB,CAACL,EAAiBG,EAAwBG,KAC5DN,KACAtD,EAAM+B,UAAY6B,EAAYjC,OAAS,GAC3CiC,EAAYC,QAEbJ,EAAW3B,IAAMwB,EACjB7B,IAEAd,GAAiBmD,MAAQtD,GAAauD,cAAc,CAACpD,EAAgBmD,OACrEX,EAAAA,UAAUa,QAAQ,QAClBhE,EAAM0D,WAAa1D,EAAM0D,UAAUJ,EAASG,EAAYG,KAiFxDK,cA9EqB,CAACb,EAAcK,EAAwBG,KAC5DM,iBAAe,CACdC,QAAS,IAAIV,EAAWlB,QAAQxC,eAChCqE,KAAM,UAEPpE,EAAMqE,SAAWrE,EAAMqE,QAAQjB,EAAOK,EAAYG,IA0ElDU,eAvEsB,CAACC,EAAeX,KACtCT,YAAUqB,QAAQ,UAAUxE,EAAMyE,UAAU1E,eAC5CC,EAAM0E,UAAY1E,EAAM0E,SAASH,EAAOX,IAsExCe,eAnEuBzB,IAGvB,GAFmB,IAAIpC,UAAQoC,EAAK0B,MAAMxD,IAAIP,GAE/BgE,YAAY9D,GAG1B,OAFAS,EAAAA,YAAY1B,EAAe,IAAIoD,EAAKX,QAAQxC,aAAwBoB,EAAU2D,gBAC9E3B,EAAAA,UAAUqB,QAAQ,IAAItB,EAAKX,QAAQxC,aAAwBoB,EAAU2D,iBAC9D,EAGR,MAAMC,EAAW,SAAU7B,EAAOA,EAAKkB,KAAOlB,EAAK8B,IAAIZ,KAEvD,GAAIpE,EAAMiF,QAAUjF,EAAMiF,OAAOC,MAAM,KAAKC,MAAOC,GAAMA,IAAML,GAAW,CACzE,MAAMM,EAAkBrC,EAAAA,WAAWsC,eAAetF,EAAMiF,QAGxD,OAFA5B,EAAAA,aAAavD,EAAe,SAASuF,QAAsBtF,KAC3DoD,EAAAA,UAAUC,MAAM,SAASiC,QAAsBtF,MACxC,CACR,CAEA,OAAO"}