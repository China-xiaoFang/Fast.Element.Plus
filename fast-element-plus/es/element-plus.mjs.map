{"version":3,"file":"element-plus.mjs","sources":["../../packages/element-plus.ts"],"sourcesContent":["/** Element Plus 组件全局配置 */\n\nimport ElementPlus, { ElDialog, ElForm, ElInput, ElInputNumber, ElMessageBox, ElSelect, ElTable, ElTree, ElTreeSelect } from \"element-plus\";\nimport * as ElementPlusIconsVue from \"@element-plus/icons-vue\";\nimport { useOverlay } from \"@fast-element-plus/hooks\";\nimport { consoleError, execFunction } from \"@fast-china/utils\";\nimport { isNil, isString } from \"lodash-unified\";\nimport type { Action, ElMessageBoxOptions, MessageBoxData, MessageBoxState, TableProps } from \"element-plus\";\nimport type { App, AppContext, PropType } from \"vue\";\n\nElDialog.props = {\n\t...ElDialog.props,\n\t/**\n\t * 默认拖拽\n\t * @description enable dragging feature for Dialog\n\t */\n\tdraggable: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n};\n\nElForm.props = {\n\t...ElForm.props,\n\t/** @description Width of label, e.g. `'50px'`. All its direct child form items will inherit this value. `auto` is supported. */\n\tlabelWidth: {\n\t\ttype: [String, Number],\n\t\tdefault: \"auto\",\n\t},\n\t/** @description Suffix of the label. */\n\tlabelSuffix: {\n\t\ttype: String,\n\t\tdefault: \"：\",\n\t},\n\t/** @description When validation fails, scroll to the first error form entry. */\n\tscrollToError: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n};\n\nElInput.props = {\n\t...ElInput.props,\n\t/**\n\t * 默认显示统计字数\n\t * @description word count\n\t */\n\tshowWordLimit: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n};\n\nElInputNumber.props = {\n\t...ElInputNumber.props,\n\t/**\n\t * 默认不使用控制按钮\n\t * @description whether to enable the control buttons\n\t */\n\tcontrols: {\n\t\ttype: Boolean,\n\t\tdefault: false,\n\t},\n};\n\nElSelect.props = {\n\t...ElSelect.props,\n\t/** @description displayed text while loading data from server, default is 'Loading' */\n\tloadingText: {\n\t\ttype: String,\n\t\tdefault: \"加载中...\",\n\t},\n\t/** @description displayed text when no data matches the filtering query, you can also use slot `empty`, default is 'No matching data' */\n\tnoMatchText: {\n\t\ttype: String,\n\t\tdefault: \"暂无匹配的数据\",\n\t},\n\t/** @description displayed text when there is no options, you can also use slot `empty`, default is 'No data' */\n\tnoDataText: {\n\t\ttype: String,\n\t\tdefault: \"暂无数据\",\n\t},\n\t/**\n\t * 默认按文字形式展示\n\t * @description whether to collapse tags to a text when multiple selecting\n\t */\n\tcollapseTags: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认显示所有选中的标签\n\t * @description whether show all selected tags when mouse hover text of collapse-tags. To use this, `collapse-tags` must be true\n\t */\n\tcollapseTagsTooltip: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n};\n\nElTable.props = {\n\t...ElTable.props,\n\t/**\n\t * 默认显示边框\n\t * @description whether Table has vertical border\n\t */\n\tborder: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认高亮当前行\n\t * @description whether current row is highlighted\n\t */\n\thighlightCurrentRow: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认行Key为 \"id\"\n\t * @description key of row data, used for optimizing rendering. Required if `reserve-selection` is on or display tree data. When its type is String, multi-level access is supported, e.g. `user.info.id`, but `user.info[0].id` is not supported, in which case `Function` should be used\n\t */\n\trowKey: {\n\t\ttype: [String, Function] as PropType<TableProps<any>[\"rowKey\"]>,\n\t\tdefault: \"id\",\n\t},\n};\n\nElTree.props = {\n\t...ElTree.props,\n\t/**\n\t * 默认展开所有节点\n\t * @description 是否默认展开所有节点\n\t */\n\tdefaultExpandAll: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认点击时选中节点\n\t * @description 是否在点击节点的时候选中节点\n\t */\n\tcheckOnClickNode: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认高亮选中节点\n\t * @description 是否高亮当前选中节点\n\t */\n\thighlightCurrent: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n};\n\nElTreeSelect.props = {\n\t...ElTreeSelect.props,\n\t/** @description displayed text while loading data from server, default is 'Loading' */\n\tloadingText: {\n\t\ttype: String,\n\t\tdefault: \"加载中...\",\n\t},\n\t/** @description displayed text when no data matches the filtering query, you can also use slot `empty`, default is 'No matching data' */\n\tnoMatchText: {\n\t\ttype: String,\n\t\tdefault: \"暂无匹配的数据\",\n\t},\n\t/** @description displayed text when there is no options, you can also use slot `empty`, default is 'No data' */\n\tnoDataText: {\n\t\ttype: String,\n\t\tdefault: \"暂无数据\",\n\t},\n\t/**\n\t * 默认按文字形式展示\n\t * @description whether to collapse tags to a text when multiple selecting\n\t */\n\tcollapseTags: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认显示所有选中的标签\n\t * @description whether show all selected tags when mouse hover text of collapse-tags. To use this, `collapse-tags` must be true\n\t */\n\tcollapseTagsTooltip: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认展开所有节点\n\t * @description 是否默认展开所有节点\n\t */\n\tdefaultExpandAll: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认点击时选中节点\n\t * @description 是否在点击节点的时候选中节点\n\t */\n\tcheckOnClickNode: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认高亮选中节点\n\t * @description 是否高亮当前选中节点\n\t */\n\thighlightCurrent: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * 默认点击节点不展开或收缩节点\n\t * @description 是否在点击节点的时候展开或者收缩节点， 默认值为 true，如果为 false，则只有点箭头图标的时候才会展开或者收缩节点。\n\t */\n\texpandOnClickNode: Boolean,\n};\n\n// ElMessageBox 默认配置\nconst elMessageBox = (\n\ttype: \"alert\" | \"confirm\" | \"prompt\",\n\tmessage: ElMessageBoxOptions[\"message\"],\n\toptions?: ElMessageBoxOptions,\n\tappContext?: AppContext | null\n): Promise<MessageBoxData> => {\n\toptions = options ?? {};\n\tif (!options?.title) {\n\t\t// 默认提示\n\t\toptions.title = \"温馨提示\";\n\t}\n\tif (isNil(options?.draggable)) {\n\t\t// 默认拖拽\n\t\toptions.draggable = true;\n\t}\n\tif (!options?.cancelButtonText) {\n\t\t// 默认 取消按钮的文本内容\n\t\toptions.cancelButtonText = \"取消\";\n\t}\n\tif (!options?.confirmButtonText) {\n\t\t// 默认 确定按钮的文本内容\n\t\toptions.confirmButtonText = \"确定\";\n\t}\n\tif (isNil(options?.closeOnClickModal)) {\n\t\t// 默认 是否可通过点击遮罩层关闭 MessageBox\n\t\toptions.closeOnClickModal = false;\n\t}\n\tif (isNil(options?.closeOnPressEscape)) {\n\t\t// 默认 是否可通过按下 ESC 键关闭 MessageBox\n\t\toptions.closeOnPressEscape = false;\n\t}\n\n\t// 关闭之前的判断逻辑\n\tif (isNil(options?.beforeClose)) {\n\t\tconst localBeforeClose = options.beforeClose;\n\t\tconst localConfirmButtonText = options?.confirmButtonText;\n\t\tconst localShowCancelButton = options?.showCancelButton;\n\t\toptions.beforeClose = (action: Action, instance: MessageBoxState, done: () => void): void => {\n\t\t\tif (action === \"confirm\") {\n\t\t\t\tuseOverlay.show(0);\n\t\t\t\tinstance.confirmButtonLoading = true;\n\t\t\t\tinstance.showCancelButton = false;\n\t\t\t\tinstance.confirmButtonText = \"加载中...\";\n\n\t\t\t\tconst cancelLoading = (): void => {\n\t\t\t\t\tinstance.confirmButtonLoading = false;\n\t\t\t\t\tinstance.showCancelButton = localShowCancelButton;\n\t\t\t\t\tinstance.confirmButtonText = localConfirmButtonText;\n\t\t\t\t\tuseOverlay.hide();\n\t\t\t\t};\n\n\t\t\t\tconst newDone = (): void => {\n\t\t\t\t\tcancelLoading();\n\t\t\t\t\tdone();\n\t\t\t\t};\n\n\t\t\t\texecFunction(localBeforeClose, action, instance, newDone)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tnewDone();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsoleError(\"MessageBox\", error);\n\t\t\t\t\t\tcancelLoading();\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdone();\n\t\t\t}\n\t\t};\n\t}\n\n\t// 根据类型有一些判断\n\tswitch (type) {\n\t\tcase \"alert\":\n\t\t\tbreak;\n\t\tcase \"confirm\":\n\t\t\tif (isNil(options?.showCancelButton)) {\n\t\t\t\toptions.showCancelButton = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"prompt\":\n\t\t\tif (options?.showCancelButton == undefined) {\n\t\t\t\toptions.showCancelButton = true;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn ElMessageBox(\n\t\tObject.assign(\n\t\t\t{\n\t\t\t\tmessage,\n\t\t\t},\n\t\t\toptions,\n\t\t\t{\n\t\t\t\tboxType: type,\n\t\t\t}\n\t\t)\n\t);\n};\n\ntype MESSAGE_BOX_TYPE = \"alert\" | \"confirm\" | \"prompt\";\nconst MESSAGE_BOX_DEFAULT_OPTS: Record<MESSAGE_BOX_TYPE, Partial<ElMessageBoxOptions>> = {\n\talert: { closeOnPressEscape: false, closeOnClickModal: false },\n\tconfirm: { showCancelButton: true },\n\tprompt: { showCancelButton: true, showInput: true },\n};\n\nElMessageBox.alert = (\n\tmessage: ElMessageBoxOptions[\"message\"],\n\ttitleOrOptions?: string | ElMessageBoxOptions,\n\toptions?: ElMessageBoxOptions,\n\tappContext?: AppContext | null\n): Promise<MessageBoxData> =>\n\tisString(titleOrOptions)\n\t\t? elMessageBox(\"alert\", message, Object.assign({ title: titleOrOptions, ...MESSAGE_BOX_DEFAULT_OPTS[\"alert\"] }, options), appContext)\n\t\t: elMessageBox(\"alert\", message, Object.assign(titleOrOptions, MESSAGE_BOX_DEFAULT_OPTS[\"alert\"], options), options as AppContext);\n\nElMessageBox.prompt = (\n\tmessage: ElMessageBoxOptions[\"message\"],\n\ttitleOrOptions?: string | ElMessageBoxOptions,\n\toptions?: ElMessageBoxOptions,\n\tappContext?: AppContext | null\n): Promise<MessageBoxData> =>\n\tisString(titleOrOptions)\n\t\t? elMessageBox(\"prompt\", message, Object.assign({ title: titleOrOptions, ...MESSAGE_BOX_DEFAULT_OPTS[\"prompt\"] }, options), appContext)\n\t\t: elMessageBox(\"prompt\", message, Object.assign(titleOrOptions, MESSAGE_BOX_DEFAULT_OPTS[\"prompt\"], options), options as AppContext);\n\nElMessageBox.confirm = (\n\tmessage: ElMessageBoxOptions[\"message\"],\n\ttitleOrOptions?: string | ElMessageBoxOptions,\n\toptions?: AppContext | ElMessageBoxOptions,\n\tappContext?: AppContext | null\n): Promise<MessageBoxData> =>\n\tisString(titleOrOptions)\n\t\t? elMessageBox(\"confirm\", message, Object.assign({ title: titleOrOptions, ...MESSAGE_BOX_DEFAULT_OPTS[\"confirm\"] }, options), appContext)\n\t\t: elMessageBox(\"confirm\", message, Object.assign(titleOrOptions, MESSAGE_BOX_DEFAULT_OPTS[\"confirm\"], options), options as AppContext);\n\nexport const installElementPlus = (app: App): void => {\n\t/** 注册所有 Element Plus Icon */\n\tfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n\t\t// 这里是给 FaIcon 使用的\n\t\tapp.component(`el-icon-${key}`, component);\n\t}\n\n\t/** Element Plus 组件完整引入 */\n\tapp.use(ElementPlus);\n};\n"],"names":[],"mappings":"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"}