{"version":3,"file":"upload.mjs","sources":["../../../packages/utils/upload.ts"],"sourcesContent":["import { FaMimeType } from \"@fast-element-plus/constants\";\nimport type { ApiResponse } from \"@fast-element-plus/utils\";\nimport { axiosUtil, consoleError } from \"@fast-element-plus/utils\";\nimport type { UploadRawFile } from \"element-plus\";\nimport { ElMessage } from \"element-plus\";\nimport { isFunction } from \"lodash-unified\";\n\nconst FaMimeTypeNames: Record<string, keyof typeof FaMimeType> = {};\n\nfor (const [kName, vAccept] of Object.entries(FaMimeType)) {\n\tvAccept.split(\",\").forEach((tItem) => {\n\t\tFaMimeTypeNames[tItem.trim()] = kName as keyof typeof FaMimeType;\n\t});\n}\n\n/**\n * 上传工具类\n */\nexport const uploadUtil = {\n\t/**\n\t * 识别文件类型\n\t */\n\tdetectFileType(accept: string): string {\n\t\tconst detectTypes = new Set<string>();\n\t\taccept.split(\",\").forEach((mimeType) => {\n\t\t\tdetectTypes.add(FaMimeTypeNames[mimeType] ?? mimeType);\n\t\t});\n\t\treturn Array.from(detectTypes).join(\",\");\n\t},\n\t/**\n\t * 获取props data属性值\n\t */\n\tgetPropsData(rawFile: UploadRawFile, data: anyObj | anyObj[] | ((rawFile: UploadRawFile) => anyObj[])): anyObj {\n\t\tlet propsData: anyObj | anyObj[];\n\t\tif (isFunction(data)) {\n\t\t\tpropsData = data(rawFile);\n\t\t} else {\n\t\t\tpropsData = data;\n\t\t}\n\n\t\tconst result: anyObj = {};\n\t\tif (Array.isArray(data)) {\n\t\t\tdata.forEach((item) => {\n\t\t\t\tObject.assign(result, item);\n\t\t\t});\n\t\t} else {\n\t\t\tObject.assign(result, propsData);\n\t\t}\n\n\t\treturn result;\n\t},\n\t/**\n\t * 文件上传\n\t * @param url 地址\n\t * @param file 文件\n\t * @param fileName 文件名称\n\t * @param fileType 文件类型\n\t * @param params 参数\n\t */\n\tasync uploadFile(url: string, file: File, fileName: string, params?: Record<string, any>): Promise<string | void> {\n\t\tif (!url) {\n\t\t\tconsoleError(\"uploadUtil\", \"文件上传地址为空！\");\n\t\t\tElMessage.error(\"文件上传地址为空！\");\n\t\t\treturn Promise.reject();\n\t\t}\n\t\tconst formData = new FormData();\n\t\tformData.append(\"file\", file);\n\t\tformData.append(\"fileName\", fileName);\n\t\tif (params) {\n\t\t\tObject.keys(params).forEach((key) => {\n\t\t\t\tformData.append(key, params[key]);\n\t\t\t});\n\t\t}\n\t\ttry {\n\t\t\tconst apiRes = await axiosUtil.request<FormData, ApiResponse<string>>({\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"multipart/form-data\",\n\t\t\t\t},\n\t\t\t\turl,\n\t\t\t\tmethod: \"post\",\n\t\t\t\tdata: formData,\n\t\t\t\tcancelDuplicateRequest: false,\n\t\t\t});\n\t\t\treturn Promise.resolve<string>(apiRes.data);\n\t\t} catch (error) {\n\t\t\tconsoleError(\"uploadUtil\", \"文件上传失败！\", error);\n\t\t\tElMessage.error(\"文件上传失败！\");\n\t\t\treturn Promise.reject();\n\t\t}\n\t},\n};\n"],"names":[],"mappings":";;;;;;;AAOA,MAAM,kBAA2D,CAAA;AAEjE,WAAW,CAAC,OAAO,OAAO,KAAK,OAAO,QAAQ,UAAU,GAAG;AAC1D,UAAQ,MAAM,GAAG,EAAE,QAAQ,CAAC,UAAU;AACrB,oBAAA,MAAM,KAAM,CAAA,IAAI;AAAA,EAAA,CAChC;AACF;AAKO,MAAM,aAAa;AAAA;AAAA;AAAA;AAAA,EAIzB,eAAe,QAAwB;AAChC,UAAA,kCAAkB;AACxB,WAAO,MAAM,GAAG,EAAE,QAAQ,CAAC,aAAa;AACvC,kBAAY,IAAI,gBAAgB,QAAQ,KAAK,QAAQ;AAAA,IAAA,CACrD;AACD,WAAO,MAAM,KAAK,WAAW,EAAE,KAAK,GAAG;AAAA,EACxC;AAAA;AAAA;AAAA;AAAA,EAIA,aAAa,SAAwB,MAA0E;AAC1G,QAAA;AACA,QAAA,WAAW,IAAI,GAAG;AACrB,kBAAY,KAAK,OAAO;AAAA,IAAA,OAClB;AACM,kBAAA;AAAA,IACb;AAEA,UAAM,SAAiB,CAAA;AACnB,QAAA,MAAM,QAAQ,IAAI,GAAG;AACnB,WAAA,QAAQ,CAAC,SAAS;AACf,eAAA,OAAO,QAAQ,IAAI;AAAA,MAAA,CAC1B;AAAA,IAAA,OACK;AACC,aAAA,OAAO,QAAQ,SAAS;AAAA,IAChC;AAEO,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAM,WAAW,KAAa,MAAY,UAAkB,QAAsD;AACjH,QAAI,CAAC,KAAK;AACT,mBAAa,cAAc,WAAW;AACtC,gBAAU,MAAM,WAAW;AAC3B,aAAO,QAAQ;IAChB;AACM,UAAA,WAAW,IAAI;AACZ,aAAA,OAAO,QAAQ,IAAI;AACnB,aAAA,OAAO,YAAY,QAAQ;AACpC,QAAI,QAAQ;AACX,aAAO,KAAK,MAAM,EAAE,QAAQ,CAAC,QAAQ;AACpC,iBAAS,OAAO,KAAK,OAAO,GAAG,CAAC;AAAA,MAAA,CAChC;AAAA,IACF;AACI,QAAA;AACG,YAAA,SAAS,MAAM,UAAU,QAAuC;AAAA,QACrE,SAAS;AAAA,UACR,gBAAgB;AAAA,QACjB;AAAA,QACA;AAAA,QACA,QAAQ;AAAA,QACR,MAAM;AAAA,QACN,wBAAwB;AAAA,MAAA,CACxB;AACM,aAAA,QAAQ,QAAgB,OAAO,IAAI;AAAA,aAClC,OAAO;AACF,mBAAA,cAAc,WAAW,KAAK;AAC3C,gBAAU,MAAM,SAAS;AACzB,aAAO,QAAQ;IAChB;AAAA,EACD;AACD;"}