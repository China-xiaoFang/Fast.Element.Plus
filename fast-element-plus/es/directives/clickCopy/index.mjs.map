{"version":3,"file":"index.mjs","sources":["../../../../packages/directives/clickCopy/index.ts"],"sourcesContent":["/**\n * v-copy\n * 复制某个值至剪贴板\n * 接收参数：string类型/Ref<string>类型/Reactive<string>类型\n */\nimport type { Directive, DirectiveBinding } from \"vue\";\nimport { consoleError, stringUtil, withInstallDirective } from \"@fast-element-plus/utils\";\nimport { ElMessage } from \"element-plus\";\n\ninterface ElType extends HTMLElement {\n\tcopyData: string | number;\n\t__handleClick__: () => void;\n}\n\nconst CopyDirective: Directive = {\n\tmounted(el: ElType, binding: DirectiveBinding) {\n\t\tel.copyData = binding.value;\n\n\t\tel.__handleClick__ = async (): Promise<void> => {\n\t\t\tif (!el.copyData) return;\n\t\t\ttry {\n\t\t\t\tawait stringUtil.copy(String(el.copyData));\n\t\t\t\tElMessage({\n\t\t\t\t\ttype: \"success\",\n\t\t\t\t\tmessage: \"复制成功\",\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tElMessage({\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\tmessage: \"复制失败\",\n\t\t\t\t});\n\t\t\t\tconsoleError(\"CopyDirective\", \"复制失败\", error);\n\t\t\t}\n\t\t};\n\t\tel.addEventListener(\"click\", el.__handleClick__);\n\t},\n\tupdated(el: ElType, binding: DirectiveBinding) {\n\t\tel.copyData = binding.value;\n\t},\n\tbeforeUnmount(el: ElType) {\n\t\tel.removeEventListener(\"click\", el.__handleClick__);\n\t},\n};\n\nexport const vCopy = withInstallDirective(CopyDirective, \"copy\");\nexport default vCopy;\n"],"names":[],"mappings":";;;;;AAcA,MAAM,gBAA2B;AAAA,EAChC,QAAQ,IAAY,SAA2B;AAC9C,OAAG,WAAW,QAAQ;AAEtB,OAAG,kBAAkB,YAA2B;AAC3C,UAAA,CAAC,GAAG,SAAU;AACd,UAAA;AACH,cAAM,WAAW,KAAK,OAAO,GAAG,QAAQ,CAAC;AAC/B,kBAAA;AAAA,UACT,MAAM;AAAA,UACN,SAAS;AAAA,QAAA,CACT;AAAA,eACO,OAAO;AACL,kBAAA;AAAA,UACT,MAAM;AAAA,UACN,SAAS;AAAA,QAAA,CACT;AACY,qBAAA,iBAAiB,QAAQ,KAAK;AAAA,MAC5C;AAAA,IAAA;AAEE,OAAA,iBAAiB,SAAS,GAAG,eAAe;AAAA,EAChD;AAAA,EACA,QAAQ,IAAY,SAA2B;AAC9C,OAAG,WAAW,QAAQ;AAAA,EACvB;AAAA,EACA,cAAc,IAAY;AACtB,OAAA,oBAAoB,SAAS,GAAG,eAAe;AAAA,EACnD;AACD;AAEa,MAAA,QAAQ,qBAAqB,eAAe,MAAM;"}