{"version":3,"file":"index.mjs","sources":["../../../packages/settings/index.ts"],"sourcesContent":["import { reactive } from \"vue\";\nimport { Local, Session, consoleError, makeIdentity } from \"@fast-element-plus/utils\";\nimport type { AxiosError, AxiosResponse, InternalAxiosRequestConfig } from \"axios\";\nimport { merge } from \"lodash-unified\";\n\n/**\n * Vite 环境\n */\nexport type ViteEnv = \"production\" | \"development\" | \"test\" | \"staging\";\n\n/**\n * 日期范围\n */\nexport type DataRange = \"Past1D\" | \"Past3D\" | \"Past1W\" | \"Past1M\" | \"Past3M\" | \"Past6M\" | \"Past1Y\";\n\n/**\n * Fast App 配置选项\n */\nexport type FastAppOptions = {\n\t/**\n\t * 环境\n\t * @default \"development\"\n\t */\n\tenv?: ViteEnv;\n\t/**\n\t * 存储加密\n\t * @description 请在初始化的时候确认，后续不可再修改，否则所有数据都将失效\n\t * @default true\n\t */\n\tstorageCrypto?: boolean;\n\t/**\n\t * Axios 配置\n\t */\n\taxios?: {\n\t\t/**\n\t\t * 请求域名或者Base路径\n\t\t */\n\t\tbaseUrl?: string;\n\t\t/**\n\t\t * 超时时间，单位毫秒\n\t\t * @default 60000\n\t\t */\n\t\ttimeout?: number;\n\t\t/**\n\t\t * 请求加密解密\n\t\t * @default true\n\t\t */\n\t\trequestCipher?: boolean;\n\t\t/**\n\t\t * 拦截器\n\t\t */\n\t\tinterceptors?: {\n\t\t\t/**\n\t\t\t * 请求拦截器\n\t\t\t */\n\t\t\trequest?: <Input = any>(config: InternalAxiosRequestConfig<Input>) => void;\n\t\t\t/**\n\t\t\t * 响应拦截器\n\t\t\t */\n\t\t\tresponse?: <Output = any, Input = any>(response: AxiosResponse<Output, Input>) => any | void;\n\t\t\t/**\n\t\t\t * 响应错误处理\n\t\t\t */\n\t\t\tresponseError?: (error: AxiosError | any) => any | void;\n\t\t};\n\t};\n\t/**\n\t * 表格配置\n\t */\n\ttable?: {\n\t\t/**\n\t\t * 显示搜索Form\n\t\t * @default true\n\t\t */\n\t\tshowSearch?: boolean;\n\t\t/**\n\t\t * 隐藏图片\n\t\t * @default true\n\t\t */\n\t\thideImage?: boolean;\n\t\t/**\n\t\t * 时间搜索范围\n\t\t */\n\t\tdataSearchRange?: DataRange;\n\t};\n};\n\n/**\n * 后续删除\n */\ntype IMapToDo = { value: any };\n\nexport class FastApp {\n\tpublic static state = reactive<FastAppOptions>({\n\t\tstorageCrypto: true,\n\t\taxios: {\n\t\t\tbaseUrl: undefined,\n\t\t\ttimeout: 60000,\n\t\t\trequestCipher: true,\n\t\t},\n\t\ttable: {\n\t\t\tshowSearch: true,\n\t\t\thideImage: true,\n\t\t\tdataSearchRange: \"Past3D\",\n\t\t},\n\t});\n\n\tprivate static stateMap = reactive({\n\t\tdictionary: new Map<string, IMapToDo[]>(),\n\t\tcolumns: new Map<string, IMapToDo[]>(),\n\t});\n\n\t/**\n\t * 设置 App 配置\n\t */\n\tpublic static setAppOptions = (appOptions: FastAppOptions): void => {\n\t\tmerge(FastApp.state, appOptions);\n\t};\n\n\t/**\n\t * 设置环境\n\t */\n\tpublic static setEnv = (env: ViteEnv): void => {\n\t\tFastApp.state.env = env;\n\t};\n\n\t/**\n\t * 设置 Axios 选项\n\t */\n\tpublic static setAxiosOptions = (axiosOptions: FastAppOptions[\"axios\"]): void => {\n\t\tFastApp.state.axios = Object.assign(FastApp.state.axios, axiosOptions);\n\t};\n\n\t/**\n\t * 设置 Table 选项\n\t */\n\tpublic static setTableOptions = (tableOptions: FastAppOptions[\"table\"]): void => {\n\t\tFastApp.state.table = Object.assign(FastApp.state.table, tableOptions);\n\t};\n\n\t/**\n\t * 设置字典\n\t */\n\tpublic static setDictionary = (dictionary: Map<string, IMapToDo[]>): void => {\n\t\tFastApp.stateMap.dictionary = dictionary;\n\t};\n\n\t/**\n\t * 获取字典\n\t */\n\tpublic static getDictionary = (key: string): IMapToDo[] => {\n\t\tif (!FastApp.stateMap.dictionary.has(key)) {\n\t\t\tconsoleError(\"app\", `字典 [${key}] 不存在`);\n\t\t\treturn [];\n\t\t}\n\t\treturn FastApp.stateMap.dictionary.get(key);\n\t};\n\n\t/**\n\t * 获取表格列\n\t */\n\tpublic static getTableColumns = (tableKey: string): IMapToDo[] | false => {\n\t\tif (!FastApp.stateMap.columns.has(tableKey)) {\n\t\t\tconsoleError(\"app\", `表格列 [${tableKey}] 不存在`);\n\t\t\treturn [];\n\t\t}\n\t\treturn FastApp.stateMap.columns.get(tableKey);\n\t};\n\n\t/**\n\t * 设置或更新表格列\n\t */\n\tpublic static setTableColumns = (tableKey: string, columns: IMapToDo[]): void => {\n\t\tif (FastApp.stateMap.columns.has(tableKey)) {\n\t\t\tFastApp.stateMap.columns.delete(tableKey);\n\t\t}\n\t\tFastApp.stateMap.columns.set(tableKey, columns);\n\t};\n\n\t/**\n\t * 清除 App 缓存\n\t */\n\tpublic static clearAppCache = (): void => {\n\t\t// 获取设备Id，这里按理来说不应该不存在的\n\t\tconst deviceId = makeIdentity();\n\t\t// 清空 Local 缓存\n\t\tLocal.clear();\n\t\t// 清空 Session 缓存\n\t\tSession.clear();\n\t\t// 重新设置设备Id\n\t\tmakeIdentity(deviceId);\n\t};\n}\n"],"names":[],"mappings":";;;;;;;;;AA4FO,MAAM,WAAN,MAAM,SAAQ;AAoGrB;AAnGC,cADY,UACE,SAAQ,SAAyB;AAAA,EAC9C,eAAe;AAAA,EACf,OAAO;AAAA,IACN,SAAS;AAAA,IACT,SAAS;AAAA,IACT,eAAe;AAAA,EAChB;AAAA,EACA,OAAO;AAAA,IACN,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,iBAAiB;AAAA,EAClB;AAAA,CACA;AAED,cAfY,UAeG,YAAW,SAAS;AAAA,EAClC,gCAAgB,IAAwB;AAAA,EACxC,6BAAa,IAAwB;AAAA,CACrC;AAAA;AAAA;AAAA;AAKD,cAvBY,UAuBE,iBAAgB,CAAC,eAAqC;AAC7D,QAAA,SAAQ,OAAO,UAAU;AAAA;AAAA;AAAA;AAAA;AAMhC,cA9BY,UA8BE,UAAS,CAAC,QAAuB;AAC9C,WAAQ,MAAM,MAAM;AAAA;AAAA;AAAA;AAAA;AAMrB,cArCY,UAqCE,mBAAkB,CAAC,iBAAgD;AAChF,WAAQ,MAAM,QAAQ,OAAO,OAAO,SAAQ,MAAM,OAAO,YAAY;AAAA;AAAA;AAAA;AAAA;AAMtE,cA5CY,UA4CE,mBAAkB,CAAC,iBAAgD;AAChF,WAAQ,MAAM,QAAQ,OAAO,OAAO,SAAQ,MAAM,OAAO,YAAY;AAAA;AAAA;AAAA;AAAA;AAMtE,cAnDY,UAmDE,iBAAgB,CAAC,eAA8C;AAC5E,WAAQ,SAAS,aAAa;AAAA;AAAA;AAAA;AAAA;AAM/B,cA1DY,UA0DE,iBAAgB,CAAC,QAA4B;AAC1D,MAAI,CAAC,SAAQ,SAAS,WAAW,IAAI,GAAG,GAAG;AAC7B,iBAAA,OAAO,OAAO,GAAG,OAAO;AACrC,WAAO;EACR;AACA,SAAO,SAAQ,SAAS,WAAW,IAAI,GAAG;AAAA;AAAA;AAAA;AAAA;AAM3C,cArEY,UAqEE,mBAAkB,CAAC,aAAyC;AACzE,MAAI,CAAC,SAAQ,SAAS,QAAQ,IAAI,QAAQ,GAAG;AAC/B,iBAAA,OAAO,QAAQ,QAAQ,OAAO;AAC3C,WAAO;EACR;AACA,SAAO,SAAQ,SAAS,QAAQ,IAAI,QAAQ;AAAA;AAAA;AAAA;AAAA;AAM7C,cAhFY,UAgFE,mBAAkB,CAAC,UAAkB,YAA8B;AAChF,MAAI,SAAQ,SAAS,QAAQ,IAAI,QAAQ,GAAG;AACnC,aAAA,SAAS,QAAQ,OAAO,QAAQ;AAAA,EACzC;AACA,WAAQ,SAAS,QAAQ,IAAI,UAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAM/C,cA1FY,UA0FE,iBAAgB,MAAY;AAEzC,QAAM,WAAW;AAEjB,QAAM,MAAM;AAEZ,UAAQ,MAAM;AAEd,eAAa,QAAQ;AAAA;AAlGhB,IAAM,UAAN;"}