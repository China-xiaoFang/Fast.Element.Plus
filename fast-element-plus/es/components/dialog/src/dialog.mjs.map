{"version":3,"file":"dialog.mjs","sources":["../../../../../packages/components/dialog/src/dialog.tsx"],"sourcesContent":["import { Fragment, computed, defineComponent, nextTick, reactive, ref, watch } from \"vue\";\nimport { ElButton, ElDialog, ElIcon, ElMessage, ElMessageBox, ElScrollbar, dialogEmits, dialogProps, useGlobalSize } from \"element-plus\";\nimport { Close, Eleme, FullScreen, Refresh } from \"@element-plus/icons-vue\";\nimport { FullScreenExit } from \"@fast-element-plus/icons-vue\";\nimport { consoleError, definePropType, execFunction, makeSlots, useExpose, useProps, useRender } from \"@fast-china/utils\";\nimport { isBoolean } from \"lodash-unified\";\nimport type { DialogInstance } from \"element-plus\";\nimport type { VNode } from \"vue\";\n\nexport const faDialogProps = {\n\t...dialogProps,\n\t/** @description whether to align the dialog both horizontally and vertically*/\n\talignCenter: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description whether to append Dialog itself to body. A nested Dialog should have this attribute set to `true` */\n\tappendToBody: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description enable dragging feature for Dialog */\n\tdraggable: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description destroy elements in Dialog when closed */\n\tdestroyOnClose: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description draggable Dialog can overflow the viewport */\n\toverflow: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description value for `margin-top` of Dialog CSS, default is 15vh */\n\ttop: {\n\t\ttype: String,\n\t\tdefault: \"5vh\",\n\t},\n\t/** @description width of Dialog, default is 50% */\n\twidth: {\n\t\ttype: [String, Number],\n\t\tdefault: \"90%\",\n\t},\n\t/** @description 显示刷新按钮 */\n\tshowRefresh: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description 显示全屏图标 */\n\tshowFullscreen: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description 显示关闭按钮 */\n\tshowCloseButton: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description 显示确认按钮 */\n\tshowConfirmButton: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description 禁用确认按钮 */\n\tdisabledConfirmButton: Boolean,\n\t/** @description 关闭按钮文字，默认取消 */\n\tcloseButtonText: {\n\t\ttype: String,\n\t\tdefault: \"取消\",\n\t},\n\t/** @description 确认按钮文字，默认确认 */\n\tconfirmButtonText: {\n\t\ttype: String,\n\t\tdefault: \"确认\",\n\t},\n\t/** @description 隐藏底部操作 */\n\thideFooter: Boolean,\n\t/** @description 撑满高度 */\n\tfillHeight: Boolean,\n\t/** @description 显示关闭回调 */\n\tshowBeforeClose: Boolean,\n\t/** @description 打开之后 */\n\tafterOpen: {\n\t\ttype: definePropType<() => void>(Function),\n\t},\n};\n\nexport const faDialogEmits = {\n\t...dialogEmits,\n\t/** @description v-model 回调 */\n\t\"update:modelValue\": (value: boolean): boolean => isBoolean(value),\n\t/** @description 确认按钮点击事件 */\n\tconfirmClick: (): boolean => true,\n};\n\ntype FaDialogSlots = {\n\t/** @description 默认内容插槽 */\n\tdefault: { loading: boolean };\n\t/** @description 头部插槽 */\n\theader: { loading: boolean; close: () => void };\n\t/** @description 底部插槽 */\n\tfooter: { loading: boolean; close: () => void };\n};\n\nexport default defineComponent({\n\tname: \"FaDialog\",\n\tprops: faDialogProps,\n\temits: faDialogEmits,\n\tslots: makeSlots<FaDialogSlots>(),\n\tsetup(props, { attrs, slots, emit, expose }) {\n\t\tconst _globalSize = useGlobalSize();\n\n\t\tconst state = reactive({\n\t\t\tloading: false,\n\t\t\tvisible: false,\n\t\t\tfullscreen: false,\n\t\t\trefreshing: false,\n\t\t});\n\n\t\tconst dialogRef = ref<DialogInstance>();\n\n\t\tlet cacheOpenFunction = undefined;\n\n\t\tconst handleOpen = (openFunction?: () => void | Promise<void>): void => {\n\t\t\tstate.visible = true;\n\t\t\tcacheOpenFunction = openFunction;\n\t\t\tnextTick(() => {\n\t\t\t\tstate.loading = true;\n\t\t\t\texecFunction(props.afterOpen ?? openFunction)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\temit(\"open\");\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsoleError(\"FaDialog\", error);\n\t\t\t\t\t\t// 自动关闭\n\t\t\t\t\t\tstate.visible = false;\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tstate.loading = false;\n\t\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\tconst handleClose = (closeFunction?: () => void | Promise<void>): void => {\n\t\t\tstate.loading = true;\n\t\t\texecFunction(closeFunction)\n\t\t\t\t.then(() => {\n\t\t\t\t\temit(\"close\");\n\t\t\t\t\tstate.visible = false;\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsoleError(\"FaDialog\", error);\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tstate.loading = false;\n\t\t\t\t});\n\t\t};\n\n\t\tconst handleLoading = (loadingFunction: () => void | Promise<void>): void => {\n\t\t\tstate.loading = true;\n\t\t\texecFunction(loadingFunction)\n\t\t\t\t.then()\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsoleError(\"FaDialog\", error);\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tstate.loading = false;\n\t\t\t\t});\n\t\t};\n\n\t\tconst handleRefresh = (): void => {\n\t\t\tif (state.loading) return;\n\t\t\tstate.refreshing = true;\n\t\t\tstate.loading = true;\n\t\t\tsetTimeout(() => {\n\t\t\t\tstate.refreshing = false;\n\t\t\t\thandleOpen(cacheOpenFunction);\n\t\t\t\tElMessage.success(\"刷新成功\");\n\t\t\t}, 500);\n\t\t};\n\n\t\tconst handleBeforeClose = (done: () => void): void => {\n\t\t\tif (state.loading) return;\n\t\t\t// 解决 image 预览摁下 ese 会关闭弹窗的问题\n\t\t\tif (document.querySelector(\".el-image-viewer__wrapper\")) return;\n\n\t\t\tconst newDone = (): void => {\n\t\t\t\texecFunction(props.beforeClose)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\temit(\"close\");\n\t\t\t\t\t\tdone();\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\tconsoleError(\"FaDialog\", error);\n\t\t\t\t\t});\n\t\t\t};\n\n\t\t\tif (props.showBeforeClose) {\n\t\t\t\tElMessageBox.confirm(\"确定关闭？\", { type: \"warning\" }).then(() => {\n\t\t\t\t\tnewDone();\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tnewDone();\n\t\t\t}\n\t\t};\n\n\t\tconst handleFullscreen = (): void => {\n\t\t\tif (state.loading) return;\n\t\t\tstate.fullscreen = !state.fullscreen;\n\t\t};\n\n\t\tconst handleConfirmClick = (): void => {\n\t\t\tif (state.loading) return;\n\t\t\temit(\"confirmClick\");\n\t\t};\n\n\t\tconst handleCloseClick = (): void => {\n\t\t\tif (state.loading) return;\n\t\t\thandleClose();\n\t\t};\n\n\t\twatch(\n\t\t\t() => state.visible,\n\t\t\t(newValue) => {\n\t\t\t\temit(\"update:modelValue\", newValue);\n\t\t\t}\n\t\t);\n\n\t\tconst elDialogProps = useProps(props, dialogProps, [\"modelValue\", \"fullscreen\", \"showClose\", \"beforeClose\"]);\n\n\t\tuseRender(() => (\n\t\t\t<ElDialog\n\t\t\t\t{...elDialogProps.value}\n\t\t\t\tref={dialogRef}\n\t\t\t\tclass={[\n\t\t\t\t\t\"fa-dialog\",\n\t\t\t\t\t`fa-dialofa-${_globalSize.value}`,\n\t\t\t\t\t{ \"fa-dialofa__fill-height\": props.fillHeight, \"fa-dialofa__fullscreen\": state.fullscreen },\n\t\t\t\t]}\n\t\t\t\tvModel={state.visible}\n\t\t\t\tfullscreen={state.fullscreen}\n\t\t\t\tshowClose={false}\n\t\t\t\tbeforeClose={handleBeforeClose}\n\t\t\t\tonOpened={() => emit(\"opened\")}\n\t\t\t\tonClosed={() => emit(\"closed\")}\n\t\t\t\tonOpenAutoFocus={() => emit(\"openAutoFocus\")}\n\t\t\t\tonCloseAutoFocus={() => emit(\"closeAutoFocus\")}\n\t\t\t>\n\t\t\t\t{{\n\t\t\t\t\theader: () => (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<div class=\"fa-dialofa__header-title\">\n\t\t\t\t\t\t\t\t{props.title}\n\t\t\t\t\t\t\t\t{slots.header && slots.header({ loading: state.loading, close: handleCloseClick })}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{props.showRefresh && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\ttitle=\"刷新\"\n\t\t\t\t\t\t\t\t\tclass={[\n\t\t\t\t\t\t\t\t\t\t\"fa-dialofa__header-icon\",\n\t\t\t\t\t\t\t\t\t\tstate.loading ? \"fa__click__disabled fa__click__disabled__cursor \" : \"fa__hover__twinkle\",\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tonClick={handleRefresh}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ElIcon>\n\t\t\t\t\t\t\t\t\t\t<Refresh />\n\t\t\t\t\t\t\t\t\t</ElIcon>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{props.showFullscreen && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\ttitle={state.fullscreen ? \"关闭全屏显示\" : \"全屏显示\"}\n\t\t\t\t\t\t\t\t\tclass={[\n\t\t\t\t\t\t\t\t\t\t\"fa-dialofa__header-icon\",\n\t\t\t\t\t\t\t\t\t\tstate.loading ? \"fa__click__disabled fa__click__disabled__cursor \" : \"fa__hover__twinkle\",\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tonClick={handleFullscreen}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ElIcon>{state.fullscreen ? <FullScreenExit /> : <FullScreen />}</ElIcon>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{props.showClose && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\ttitle=\"关闭\"\n\t\t\t\t\t\t\t\t\tclass={[\n\t\t\t\t\t\t\t\t\t\t\"fa-dialofa__header-icon\",\n\t\t\t\t\t\t\t\t\t\tstate.loading ? \"fa__click__disabled fa__click__disabled__cursor \" : \"fa__hover__twinkle\",\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tonClick={handleCloseClick}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ElIcon>\n\t\t\t\t\t\t\t\t\t\t<Close />\n\t\t\t\t\t\t\t\t\t</ElIcon>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t),\n\t\t\t\t\tdefault: () => (\n\t\t\t\t\t\t<ElScrollbar vLoading={state.loading} element-loading-text=\"加载中...\">\n\t\t\t\t\t\t\t{!state.refreshing && slots.default && slots.default(state)}\n\t\t\t\t\t\t</ElScrollbar>\n\t\t\t\t\t),\n\t\t\t\t\t...(!props.hideFooter && {\n\t\t\t\t\t\tfooter: (): VNode[] => (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t{slots.footer && slots.footer({ loading: state.loading, close: handleCloseClick })}\n\t\t\t\t\t\t\t\t{props.showCloseButton && (\n\t\t\t\t\t\t\t\t\t<ElButton disabled={state.loading} onClick={handleCloseClick}>\n\t\t\t\t\t\t\t\t\t\t{props.closeButtonText}\n\t\t\t\t\t\t\t\t\t</ElButton>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{props.showConfirmButton && (\n\t\t\t\t\t\t\t\t\t<ElButton\n\t\t\t\t\t\t\t\t\t\tloading={state.loading}\n\t\t\t\t\t\t\t\t\t\tloadingIcon={Eleme}\n\t\t\t\t\t\t\t\t\t\tdisabled={props.disabledConfirmButton}\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\t\t\tonClick={handleConfirmClick}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{state.loading ? \"加载中...\" : props.confirmButtonText}\n\t\t\t\t\t\t\t\t\t</ElButton>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t),\n\t\t\t\t\t}),\n\t\t\t\t}}\n\t\t\t</ElDialog>\n\t\t));\n\n\t\treturn useExpose(expose, {\n\t\t\t/** @description 弹窗内容引用 */\n\t\t\tdialogContentRef: computed(() => dialogRef.value?.dialogContentRef),\n\t\t\t/** @description 重置位置 */\n\t\t\tresetPosition: computed(() => dialogRef.value?.resetPosition),\n\t\t\t/** @description 加载状态 */\n\t\t\tloading: computed(() => state.loading),\n\t\t\t/** @description 是否显示 */\n\t\t\tvisible: computed(() => state.visible),\n\t\t\t/** @description 打开弹窗 */\n\t\t\topen: handleOpen,\n\t\t\t/** @description 关闭弹窗 */\n\t\t\tclose: handleClose,\n\t\t\t/** @description 刷新弹窗 */\n\t\t\trefresh: handleRefresh,\n\t\t\t/** @description 弹窗加载 */\n\t\t\tdoLoading: handleLoading,\n\t\t});\n\t},\n});\n"],"names":["faDialogProps","dialogProps","alignCenter","type","Boolean","default","appendToBody","draggable","destroyOnClose","overflow","top","String","width","Number","showRefresh","showFullscreen","showCloseButton","showConfirmButton","disabledConfirmButton","closeButtonText","confirmButtonText","hideFooter","fillHeight","showBeforeClose","afterOpen","definePropType","Function","faDialogEmits","dialogEmits","value","isBoolean","confirmClick","name","props","emits","slots","makeSlots","setup","attrs","emit","expose","_globalSize","useGlobalSize","state","reactive","loading","visible","fullscreen","refreshing","dialogRef","ref","cacheOpenFunction","undefined","handleOpen","openFunction","nextTick","execFunction","then","catch","error","consoleError","finally","handleClose","closeFunction","handleLoading","loadingFunction","handleRefresh","setTimeout","ElMessage","success","handleBeforeClose","done","document","querySelector","newDone","beforeClose","ElMessageBox","confirm","handleFullscreen","handleConfirmClick","handleCloseClick","watch","newValue","elDialogProps","useProps","useRender","_createVNode","ElDialog","_mergeProps","$event","onOpened","onClosed","onOpenAutoFocus","onCloseAutoFocus","header","_Fragment","title","close","ElIcon","Refresh","FullScreenExit","FullScreen","showClose","Close","_withDirectives","ElScrollbar","_resolveDirective","footer","ElButton","Eleme","useExpose","dialogContentRef","computed","resetPosition","open","refresh","doLoading"],"mappings":"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"}