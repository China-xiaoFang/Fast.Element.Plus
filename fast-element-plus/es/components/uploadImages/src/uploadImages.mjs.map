{"version":3,"file":"uploadImages.mjs","sources":["../../../../../packages/components/uploadImages/src/uploadImages.tsx"],"sourcesContent":["import { Fragment, computed, defineComponent, reactive, ref } from \"vue\";\nimport { Delete, Edit, Plus, ZoomIn } from \"@element-plus/icons-vue\";\nimport { useUpload } from \"@fast-element-plus/components/upload/src/useUpload\";\nimport { FaMimeType } from \"@fast-element-plus/constants\";\nimport { FastApp } from \"@fast-element-plus/settings\";\nimport { definePropType, makeSlots, stringUtil, useExpose, useProps, useRender } from \"@fast-element-plus/utils\";\nimport { ElIcon, ElImageViewer, ElUpload, uploadProps } from \"element-plus\";\nimport type { UploadFile, UploadInstance, UploadProps, UploadUserFile, uploadListTypes } from \"element-plus\";\nimport { isArray, isString } from \"lodash-unified\";\n\nexport const faUploadImagesProps = {\n\t...uploadProps,\n\t/** @description accepted [file types](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept), will not work when `thumbnail-mode === true` */\n\taccept: {\n\t\ttype: String,\n\t\tdefault: (): string => FaMimeType.Image,\n\t},\n\t/** @description type of file list */\n\tlistType: {\n\t\ttype: definePropType<(typeof uploadListTypes)[number]>(String),\n\t\tdefault: \"picture-card\",\n\t},\n\t/** @description whether uploading multiple files is permitted */\n\tmultiple: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description maximum number of uploads allowed */\n\tlimit: {\n\t\ttype: Number,\n\t\tdefault: 9,\n\t},\n\t/** @description v-model绑定值 */\n\tmodelValue: definePropType<string | string[]>([String, Array]),\n\t/** @description 大小限制，单位kb */\n\tmaxSize: {\n\t\ttype: definePropType<string | number>([String, Number]),\n\t\tdefault: 2048,\n\t},\n\t/** @description 图片上传地址 */\n\tuploadUrl: {\n\t\ttype: String,\n\t\tdefault: (): string => FastApp.state.upload.url,\n\t},\n\t/** @description 文件类型 */\n\tfileType: Number,\n};\n\nexport const faUploadImagesEmits = {\n\t/** @description v-model 回调 */\n\t\"update:modelValue\": (value: string | string[]): boolean => isString(value) || isArray(value),\n\t/** @description v-model:fileList 回调 */\n\t\"update:fileList\": (value: UploadUserFile[]): boolean => isArray(value),\n\t/** @description 改变 */\n\tchange: (value: string | string[]): boolean => isString(value) || isArray(value),\n};\n\ntype FaUploadImagesSlots = {\n\t/** @description 默认内容插槽 */\n\tdefault: never;\n};\n\nexport default defineComponent({\n\tname: \"FaUploadImages\",\n\tprops: faUploadImagesProps,\n\temits: faUploadImagesEmits,\n\tslots: makeSlots<FaUploadImagesSlots>(),\n\tsetup(props, { attrs, slots, emit, expose }) {\n\t\tconst {\n\t\t\tfileList,\n\t\t\tloading,\n\t\t\tformContext,\n\t\t\tmaxSizeMB,\n\t\t\thandleValue,\n\t\t\thandleHttpRequest,\n\t\t\thandleOnSuccess,\n\t\t\thandleOnError,\n\t\t\thandleOnExceed,\n\t\t\thandleOnUpload,\n\t\t} = useUpload(\"FaUploadImages\", \"图片\", props, emit, {\n\t\t\tmaxSize: props.maxSize,\n\t\t\tuploadUrl: props.uploadUrl,\n\t\t});\n\n\t\tconst disabled = computed(() => {\n\t\t\treturn props.disabled || formContext?.disabled;\n\t\t});\n\n\t\tconst state = reactive({\n\t\t\tuploadKey: `fa-upload-images__${stringUtil.generateRandomString(8)}`,\n\t\t\tpreview: false,\n\t\t\tpreviewIndex: -1,\n\t\t\tpreviewList: [],\n\t\t});\n\n\t\tconst uploadRef = ref<UploadInstance>();\n\n\t\tconst handleEdit = (): void => {\n\t\t\tconst uploadInputEl = document.querySelector(`.${state.uploadKey} .el-upload__input`);\n\t\t\tuploadInputEl && uploadInputEl.dispatchEvent(new MouseEvent(\"click\"));\n\t\t};\n\n\t\tconst handlePreview = (uploadFile: UploadFile): void => {\n\t\t\tstate.previewIndex = fileList.value.findIndex((f) => f.url === uploadFile.url);\n\t\t\tstate.previewList = fileList.value.map((m) => m.url);\n\t\t\tstate.preview = true;\n\t\t};\n\n\t\tconst handleRemove = (index: number): void => {\n\t\t\tfileList.value.splice(index, 1);\n\t\t\thandleValue();\n\t\t};\n\n\t\tconst handleBeforeUpload: UploadProps[\"beforeUpload\"] = (rawFile) => {\n\t\t\tif (!handleOnUpload(rawFile)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (props.beforeUpload) {\n\t\t\t\treturn props.beforeUpload(rawFile);\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\tconst elUploadProps = useProps(props, uploadProps, [\n\t\t\t\"fileList\",\n\t\t\t\"disabled\",\n\t\t\t\"httpRequest\",\n\t\t\t\"beforeUpload\",\n\t\t\t\"onExceed\",\n\t\t\t\"onSuccess\",\n\t\t\t\"onError\",\n\t\t]);\n\n\t\tuseRender(() => (\n\t\t\t<Fragment>\n\t\t\t\t<ElUpload\n\t\t\t\t\t{...elUploadProps.value}\n\t\t\t\t\tref={uploadRef}\n\t\t\t\t\tclass={[\"fa-upload-images\", state.uploadKey, { \"fa-upload-images__hidden-upload\": fileList.value.length >= props.limit }]}\n\t\t\t\t\tvLoading={loading.value}\n\t\t\t\t\tvModel:fileList={fileList.value}\n\t\t\t\t\tdisabled={disabled.value}\n\t\t\t\t\thttpRequest={handleHttpRequest}\n\t\t\t\t\tbeforeUpload={handleBeforeUpload}\n\t\t\t\t\tonExceed={handleOnExceed}\n\t\t\t\t\tonSuccess={handleOnSuccess}\n\t\t\t\t\tonError={handleOnError}\n\t\t\t\t>\n\t\t\t\t\t{{\n\t\t\t\t\t\tdefault: () =>\n\t\t\t\t\t\t\tfileList.value.length < props.limit && slots.default ? (\n\t\t\t\t\t\t\t\tslots.default()\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<ElIcon>\n\t\t\t\t\t\t\t\t\t<Plus />\n\t\t\t\t\t\t\t\t</ElIcon>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\ttip: () => <div class=\"el-upload__tip\">files with a size less than {maxSizeMB.toString()}MB</div>,\n\t\t\t\t\t\tfile: ({ file, index }: { file: UploadFile; index: number }) => (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<img class=\"el-upload-list__item-thumbnail\" src={file.url} />\n\t\t\t\t\t\t\t\t<span class=\"el-upload-list__item-actions\">\n\t\t\t\t\t\t\t\t\t<span class=\"el-upload-list__item-preview\" onClick={() => handlePreview(file)} title=\"查看\">\n\t\t\t\t\t\t\t\t\t\t<ElIcon>\n\t\t\t\t\t\t\t\t\t\t\t<ZoomIn />\n\t\t\t\t\t\t\t\t\t\t</ElIcon>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t{!disabled.value && (\n\t\t\t\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"el-upload-list__item-icon\" onClick={handleEdit} title=\"编辑\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ElIcon>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Edit />\n\t\t\t\t\t\t\t\t\t\t\t\t</ElIcon>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t<span class=\"el-upload-list__item-icon\" onClick={() => handleRemove(index)} title=\"删除\">\n\t\t\t\t\t\t\t\t\t\t\t\t<ElIcon>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t\t\t\t\t\t</ElIcon>\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t</ElUpload>\n\t\t\t\t{state.preview ? (\n\t\t\t\t\t<ElImageViewer\n\t\t\t\t\t\tcloseOnPressEscape\n\t\t\t\t\t\thideOnClickModal\n\t\t\t\t\t\tteleported\n\t\t\t\t\t\tonClose={() => (state.preview = false)}\n\t\t\t\t\t\turlList={state.previewList}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</Fragment>\n\t\t));\n\n\t\treturn useExpose(expose, {\n\t\t\t...computed(() => ({\n\t\t\t\t/** @description cancel upload request */\n\t\t\t\tabort: uploadRef.value?.abort,\n\t\t\t\t/** @description upload the file list manually */\n\t\t\t\tsubmit: uploadRef.value?.submit,\n\t\t\t\t/** @description clear the file list  */\n\t\t\t\tclearFiles: uploadRef.value?.clearFiles,\n\t\t\t\t/** @description select the file manually */\n\t\t\t\thandleStart: uploadRef.value?.handleStart,\n\t\t\t\t/** @description remove the file manually */\n\t\t\t\thandleRemove: uploadRef.value?.handleRemove,\n\t\t\t})).value,\n\t\t\t/** @description 加载状态 */\n\t\t\tloading,\n\t\t\t/** @description 文件集合 */\n\t\t\tfileList,\n\t\t\t/** @description 预览 */\n\t\t\tpreview: state.preview,\n\t\t\t/** @description 预览集合 */\n\t\t\tpreviewList: state.previewList,\n\t\t});\n\t},\n});\n"],"names":["faUploadImagesProps","uploadProps","accept","type","String","default","FaMimeType","Image","listType","definePropType","multiple","Boolean","limit","Number","modelValue","Array","maxSize","uploadUrl","FastApp","state","upload","url","fileType","faUploadImagesEmits","value","isString","isArray","change","defineComponent","name","props","emits","slots","makeSlots","setup","attrs","emit","expose","fileList","loading","formContext","maxSizeMB","handleValue","handleHttpRequest","handleOnSuccess","handleOnError","handleOnExceed","handleOnUpload","useUpload","disabled","computed","reactive","uploadKey","stringUtil","generateRandomString","preview","previewIndex","previewList","uploadRef","ref","handleEdit","uploadInputEl","document","querySelector","dispatchEvent","MouseEvent","handlePreview","uploadFile","findIndex","f","map","m","handleRemove","index","splice","handleBeforeUpload","rawFile","beforeUpload","elUploadProps","useProps","useRender","_createVNode","_Fragment","_withDirectives","ElUpload","_mergeProps","length","$event","ElIcon","Plus","tip","_createTextVNode","toString","file","onClick","ZoomIn","Edit","Delete","_resolveDirective","ElImageViewer","onClose","useExpose","abort","submit","clearFiles","handleStart"],"mappings":"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"}