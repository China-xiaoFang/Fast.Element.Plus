{"version":3,"file":"useTable.mjs","sources":["../../../../../packages/components/table/src/useTable.ts"],"sourcesContent":["import { computed, nextTick, provide, reactive, ref, watch } from \"vue\";\nimport { dayjs, useGlobalSize } from \"element-plus\";\nimport { clickUtil, consoleError, execFunction, type makeSlots } from \"@fast-china/utils\";\nimport { isArray, isFunction } from \"lodash-unified\";\nimport { tableUtil } from \"../utils/table\";\nimport { getTableDefaultSlots } from \"./table.type\";\nimport type { PagedInput, PagedResult } from \"./page.type\";\nimport type { FaTableSlots, faTableEmits, faTableProps } from \"./table\";\nimport type { FaTableState } from \"./table.state\";\nimport type { FaTableColumnCtx, FaTableEnumColumnCtx } from \"./table.type\";\nimport type { TableInstance } from \"element-plus\";\nimport type { ExtractPropTypes, InjectionKey, SetupContext } from \"vue\";\n\nexport const tableStateKey: InjectionKey<FaTableState> = Symbol(\"tableState\");\nexport const enumMapKey: InjectionKey<Map<string, FaTableEnumColumnCtx[]>> = Symbol(\"enumMap\");\n\ntype TableSetupContext = SetupContext<typeof faTableEmits, ReturnType<typeof makeSlots<FaTableSlots>>>;\n\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type, @typescript-eslint/explicit-module-boundary-types\nexport const useTable = (props: ExtractPropTypes<typeof faTableProps>, slots: TableSetupContext[\"slots\"], emit: TableSetupContext[\"emit\"]) => {\n\tconst _globalSize = useGlobalSize();\n\n\tconst elementRef = ref<HTMLElement>();\n\tconst tableRef = ref<TableInstance>();\n\n\t/**\n\t * 定义 enumMap 存储 enum 值（避免异步请求无法格式化单元格内容 || 无法填充搜索下拉选择）\n\t */\n\tconst enumMap = reactive(new Map<string, FaTableEnumColumnCtx[]>());\n\tprovide(enumMapKey, enumMap);\n\n\tconst state: FaTableState = reactive({\n\t\tloading: false,\n\t\tloadingText: \"加载中...\",\n\t\torgColumns: [],\n\t\ttableColumns: computed(() => state.orgColumns.filter((f) => f.prop && !f.pureSearch)),\n\t\tsearchColumns: computed(() =>\n\t\t\tstate.orgColumns\n\t\t\t\t.filter((f) => f.pureSearch || f.search)\n\t\t\t\t.sort((a, b) => {\n\t\t\t\t\treturn a.search?.order - b.search?.order;\n\t\t\t\t})\n\t\t),\n\t\tspanColumns: computed(() => [\n\t\t\t...state.orgColumns\n\t\t\t\t.filter((f) => f.spanProp)\n\t\t\t\t.map((col) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tprop: col?.prop,\n\t\t\t\t\t\tspanProp: col?.spanProp,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t...(props.props.span\n\t\t\t\t? [\n\t\t\t\t\t\t{ prop: \"__table-index\", spanProp: props.props.span },\n\t\t\t\t\t\t{ prop: \"__table-selection\", spanProp: props.props.span },\n\t\t\t\t\t\t{ prop: \"__table-operation\", spanProp: props.props.span },\n\t\t\t\t\t]\n\t\t\t\t: []),\n\t\t]),\n\t\ttableData: [],\n\t\ttableSpanData: computed(() => {\n\t\t\tif (state.spanColumns?.length > 0 && state.tableData?.length > 0) {\n\t\t\t\tconst result = [];\n\t\t\t\tstate.spanColumns.forEach((item) => {\n\t\t\t\t\tresult[item.prop] = new Array(state.tableData.length).fill(1, 0, 1).fill(0, 1);\n\t\t\t\t\tresult[`${item.prop}-index`] = 0;\n\t\t\t\t});\n\t\t\t\tfor (let i = 1; i < state.tableData.length; i++) {\n\t\t\t\t\tstate.spanColumns.forEach((item) => {\n\t\t\t\t\t\tif (state.tableData[i][item.spanProp] === state.tableData[i - 1][item.spanProp]) {\n\t\t\t\t\t\t\tresult[item.prop][result[`${item.prop}-index`]]++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult[`${item.prop}-index`] = i;\n\t\t\t\t\t\t\tresult[item.prop][i] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn [];\n\t\t}),\n\t\ttablePagination: {\n\t\t\tpageIndex: 1,\n\t\t\tpageSize: 20,\n\t\t\ttotalRows: 0,\n\t\t},\n\t\tinitParam: {},\n\t\tsearchParam: {},\n\t\tsearchValueUpdate: \"\",\n\t\tshowSearch: props.showSearch,\n\t\thideImage: computed(() => props.hideImage),\n\t\tselected: false,\n\t\tselectedList: [],\n\t\tselectedListIds: computed(() => state.selectedList.map((item) => (isFunction(props.rowKey) ? props.rowKey(item) : item[props.rowKey]))),\n\t\tindeterminateSelectedListIds: [],\n\t\tresponseConfig: undefined,\n\t\toperationColumnWidth: computed(() => {\n\t\t\tconst findAutoCol = state.autoColumnWidth.find((f) => f.prop === \"__table-operation\");\n\t\t\tif (findAutoCol) {\n\t\t\t\treturn `${findAutoCol.width}px`;\n\t\t\t}\n\t\t\tswitch (_globalSize.value) {\n\t\t\t\tcase \"large\":\n\t\t\t\tcase \"default\":\n\t\t\t\t\treturn \"54px\";\n\t\t\t\tcase \"small\":\n\t\t\t\t\treturn \"42px\";\n\t\t\t\tdefault:\n\t\t\t\t\treturn \"auto\";\n\t\t\t}\n\t\t}),\n\t\timagePreview: false,\n\t\tpreviewList: [],\n\t\ttableWidth: undefined,\n\t\ttableHeight: undefined,\n\t\tautoColumnWidth: [],\n\t});\n\n\tprovide(tableStateKey, state);\n\n\tconst handleTableColumnAutoWidth = (): void => {\n\t\tstate.loading = true;\n\t\tstate.loadingText = \"加载中...\";\n\t\tstate.autoColumnWidth = [];\n\t\tconst autoWidthColumns = state.tableColumns.filter((f) => f.autoWidth);\n\t\tif (slots?.operation) {\n\t\t\t// 操作列自动宽度\n\t\t\tautoWidthColumns.push({\n\t\t\t\tprop: \"__table-operation\",\n\t\t\t});\n\t\t}\n\t\tif (autoWidthColumns?.length > 0) {\n\t\t\t// padding24/16 + border1\n\t\t\tconst otherWidth = _globalSize.value === \"default\" ? 25 : 17;\n\t\t\tnextTick(() => {\n\t\t\t\tconst tableDom = document.querySelector(`.fa-table__${props.tableKey}`);\n\t\t\t\tif (tableDom) {\n\t\t\t\t\tautoWidthColumns.forEach((item) => {\n\t\t\t\t\t\tconst headerColumnDom = tableDom.querySelector(`.__fa-table__auto-width-column__cell-header__${item?.prop}`);\n\t\t\t\t\t\tconst cellColumnDoms = tableDom.querySelectorAll(`.__fa-table__auto-width-column__cell__${item?.prop}`);\n\t\t\t\t\t\tlet maxWidth = 0;\n\t\t\t\t\t\tif (headerColumnDom) {\n\t\t\t\t\t\t\tmaxWidth = Math.ceil(headerColumnDom.scrollWidth) + otherWidth;\n\t\t\t\t\t\t\tif (item?.sortable) {\n\t\t\t\t\t\t\t\tmaxWidth += 24;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcellColumnDoms.forEach((cellDom) => {\n\t\t\t\t\t\t\tconst curWidth = Math.ceil(cellDom.scrollWidth) + otherWidth;\n\t\t\t\t\t\t\tif (curWidth > maxWidth) {\n\t\t\t\t\t\t\t\tmaxWidth = curWidth;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst findInfo = state.autoColumnWidth.find((f) => f.prop === item?.prop);\n\t\t\t\t\t\tif (findInfo) {\n\t\t\t\t\t\t\tfindInfo.width = Math.max(findInfo.width, maxWidth);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.autoColumnWidth.push({\n\t\t\t\t\t\t\t\tprop: item?.prop,\n\t\t\t\t\t\t\t\twidth: maxWidth,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tstate.loading = false;\n\t};\n\n\tconst handleTableData = (data: any[]): any[] => {\n\t\tif (props.treeData) {\n\t\t\tconst result: any[] = [];\n\t\t\tdata.forEach((row) => {\n\t\t\t\tconst rowList = row[props.props.children];\n\t\t\t\tif (isArray(rowList)) {\n\t\t\t\t\t// 如果 rowList 是数组，遍历并合并每个子项\n\t\t\t\t\trowList.forEach((cRow) => result.push({ ...row, ...cRow }));\n\t\t\t\t} else {\n\t\t\t\t\tresult.push({ ...row, ...(rowList || {}) });\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t} else {\n\t\t\treturn data;\n\t\t}\n\t};\n\n\tconst getRequestParam = (): PagedInput => {\n\t\tconst params = { ...state.searchParam, ...(props.pagination ? state.tablePagination : {}) };\n\t\t// 删除总条数\n\t\tdelete params.totalRows;\n\t\treturn params;\n\t};\n\n\tconst loadData = async (): Promise<void> => {\n\t\tstate.loading = true;\n\t\tstate.loadingText = \"加载中...\";\n\t\tif (props.requestApi) {\n\t\t\tconst params = getRequestParam();\n\t\t\temit(\"refresh\", params);\n\t\t\tlet pageData = [];\n\t\t\ttry {\n\t\t\t\tconst resData = await props.requestApi(params);\n\t\t\t\t// 数据回调\n\t\t\t\tprops.dataCallback && props.dataCallback(resData);\n\t\t\t\t// 解析 API 接口返回的分页数据（如果有分页更新分页信息）\n\t\t\t\tif (props.pagination) {\n\t\t\t\t\tconst pageRes = resData as PagedResult;\n\t\t\t\t\tpageData = pageRes.rows;\n\t\t\t\t\t// 更新分页信息\n\t\t\t\t\tObject.assign(state.tablePagination, {\n\t\t\t\t\t\tpageIndex: pageRes.pageIndex,\n\t\t\t\t\t\tpageSize: pageRes.pageSize,\n\t\t\t\t\t\ttotalRows: pageRes.totalRows,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tpageData = resData as any[];\n\t\t\t\t\t// 更新分页信息\n\t\t\t\t\tObject.assign(state.tablePagination, {\n\t\t\t\t\t\tpageIndex: 1,\n\t\t\t\t\t\tpageSize: 0,\n\t\t\t\t\t\ttotalRows: pageData.length,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tstate.tableData = handleTableData(pageData);\n\t\t\t} catch (error) {\n\t\t\t\tconsoleError(\"FaTable\", error);\n\t\t\t\tstate.tableData = [];\n\t\t\t} finally {\n\t\t\t\tstate.loading = false;\n\t\t\t}\n\t\t} else {\n\t\t\temit(\"refresh\", { searchValue: state.searchParam.searchValue });\n\t\t\tlet _value = handleTableData(props.data);\n\t\t\t_value = _value.filter((f) => {\n\t\t\t\tif (!state.searchParam.searchValue) return true;\n\t\t\t\treturn state.tableColumns.some((col) => {\n\t\t\t\t\treturn f[col.prop]?.toString()?.toLowerCase().includes(state.searchParam.searchValue?.toLowerCase());\n\t\t\t\t});\n\t\t\t});\n\t\t\tif (state.searchParam.sortList?.length > 0) {\n\t\t\t\t_value = _value.sort(tableUtil.arrayDynamicSort(state.searchParam.sortList));\n\t\t\t}\n\t\t\tif (props.pagination) {\n\t\t\t\t// 更新分页信息\n\t\t\t\tObject.assign(state.tablePagination, {\n\t\t\t\t\ttotalRows: _value.length,\n\t\t\t\t});\n\t\t\t\tconst pageStart = (state.tablePagination.pageIndex - 1) * state.tablePagination.pageSize;\n\t\t\t\tconst pageEnd = pageStart + state.tablePagination.pageSize;\n\t\t\t\tstate.tableData = _value.slice(pageStart, pageEnd);\n\t\t\t} else {\n\t\t\t\tstate.tableData = _value;\n\t\t\t\t// 更新分页信息\n\t\t\t\tObject.assign(state.tablePagination, {\n\t\t\t\t\tpageIndex: 1,\n\t\t\t\t\tpageSize: 0,\n\t\t\t\t\ttotalRows: _value.length,\n\t\t\t\t});\n\t\t\t}\n\t\t\tstate.loading = false;\n\t\t}\n\t\thandleTableColumnAutoWidth();\n\t};\n\n\tconst loadTableColumns = (): void => {\n\t\tlet columns: FaTableColumnCtx[] = props.columns;\n\t\t// 默认值处理\n\t\tcolumns.forEach((col) => {\n\t\t\t// 处理搜索项的 key 和 label\n\t\t\tif (col.pureSearch || col.search) {\n\t\t\t\tcol.search.key ??= col.prop;\n\t\t\t\tcol.search.label ??= col.label;\n\t\t\t\t// 处理默认值\n\t\t\t\tif (col.search.defaultValue) {\n\t\t\t\t\tstate.searchParam[col.search.key] = col.search.defaultValue;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// 排序\n\t\tcolumns = columns.sort((a, b) => {\n\t\t\treturn a?.order - b?.order;\n\t\t});\n\n\t\t// TODO:这里的扁平化暂时没用到\n\t\tstate.orgColumns = tableUtil.flatColumns(columns, enumMap);\n\t};\n\n\tconst handleSizeChange = (pageSize: number): void => {\n\t\tstate.tablePagination.pageIndex = 1;\n\t\tstate.tablePagination.pageSize = pageSize;\n\t\temit(\"sizeChange\", pageSize);\n\t\temit(\"paginationChange\", 1, pageSize);\n\t\tloadData();\n\t};\n\tconst handlePaginationChange = (val: number): void => {\n\t\tstate.tablePagination.pageIndex = val;\n\t\temit(\"sizeChange\", state.tablePagination.pageSize);\n\t\temit(\"paginationChange\", val, state.tablePagination.pageSize);\n\t\tloadData();\n\t};\n\n\tconst updatedTotalParam = (): void => {\n\t\t// 处理查询参数，可以给查询参数加自定义前缀操作\n\t\tconst newSearchParam = {};\n\t\t// 防止手动清空输入框携带参数（这里可以自定义查询参数前缀）\n\t\tfor (const key in state.searchParam) {\n\t\t\t// * 某些情况下参数为 false/0 也应该携带参数\n\t\t\tif (state.searchParam[key] || state.searchParam[key] === false || state.searchParam[key] === 0) {\n\t\t\t\tnewSearchParam[key] = state.searchParam[key];\n\t\t\t}\n\t\t\t// 处理某些情况下如果为空字符串，其实是不需要传到后端的\n\t\t\telse if (!state.searchParam[key]) {\n\t\t\t\tdelete state.searchParam[key];\n\t\t\t}\n\t\t}\n\t\tObject.assign(state.searchParam, newSearchParam);\n\t};\n\n\tconst defaultSearchTime = (): void => {\n\t\tif (props.hideSearchTime) {\n\t\t\tstate.searchParam.searchTimeList = undefined;\n\t\t} else {\n\t\t\tconst end = new Date();\n\t\t\tconst start = new Date();\n\t\t\tswitch (props.dataSearchRange) {\n\t\t\t\tcase \"Past1D\":\n\t\t\t\t\tstart.setDate(start.getDate() - 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past3D\":\n\t\t\t\t\tstart.setDate(start.getDate() - 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past1W\":\n\t\t\t\t\tstart.setDate(start.getDate() - 7);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past1M\":\n\t\t\t\t\tstart.setMonth(start.getMonth() - 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past3M\":\n\t\t\t\t\tstart.setMonth(start.getMonth() - 3);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past6M\":\n\t\t\t\t\tstart.setMonth(start.getMonth() - 6);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past1Y\":\n\t\t\t\t\tstart.setFullYear(start.getFullYear() - 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Past3Y\":\n\t\t\t\t\tstart.setFullYear(start.getFullYear() - 3);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tstate.searchParam.searchTimeList = [dayjs(start).format(\"YYYY-MM-DD 00:00:00\"), dayjs(end).format(\"YYYY-MM-DD 23:59:59\")];\n\t\t}\n\t};\n\n\tconst tableSearch = async (): Promise<void> => {\n\t\t// 重置到第一页\n\t\tstate.tablePagination.pageIndex = 1;\n\t\tupdatedTotalParam();\n\t\tawait loadData();\n\t};\n\n\tconst tableReset = async (): Promise<void> => {\n\t\t// 重置到第一页\n\t\tstate.tablePagination.pageIndex = 1;\n\t\t// 清除搜索条件\n\t\tstate.searchParam = {};\n\t\tdefaultSearchTime();\n\t\t// 重置搜索表单的时候，如果有默认搜索参数，则重置默认的搜索参数\n\t\tObject.keys(state.initParam ?? {}).forEach((key) => {\n\t\t\tstate.searchParam[key] = state.initParam[key];\n\t\t});\n\t\temit(\"reset\", state.searchParam);\n\t\tawait loadData();\n\t};\n\n\tconst doRender = async (): Promise<void> => {\n\t\tstate.orgColumns = [];\n\t\tstate.autoColumnWidth = [];\n\t\tstate.tableData = [];\n\t\tawait clickUtil.debounceAsync(async () => {\n\t\t\tloadTableColumns();\n\t\t\tawait tableSearch();\n\t\t}, 300);\n\t};\n\n\tconst doLoading = (loadingFunction: () => void | Promise<void>, loadingText = \"加载中...\"): void => {\n\t\tstate.loading = true;\n\t\tstate.loadingText = loadingText;\n\t\texecFunction(loadingFunction)\n\t\t\t.then()\n\t\t\t.catch((error) => {\n\t\t\t\tconsoleError(\"FaTable\", error);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tstate.loading = false;\n\t\t\t});\n\t};\n\n\tconst handleCustomCellClick = (emitName: string, { row, column, $index }: { row: any; column: FaTableColumnCtx; $index: number }): void => {\n\t\temit(\"customCellClick\", emitName, { row, column, $index, ...getTableDefaultSlots(state) });\n\t};\n\n\twatch(\n\t\t() => props.tableKey,\n\t\tasync () => {\n\t\t\tawait doRender();\n\t\t}\n\t);\n\n\twatch(\n\t\t() => props.showSearch,\n\t\t(newValue) => {\n\t\t\tstate.showSearch = newValue;\n\t\t}\n\t);\n\n\treturn {\n\t\t_globalSize,\n\t\tstate,\n\t\telementRef,\n\t\ttableRef,\n\t\thandleTableColumnAutoWidth,\n\t\tgetRequestParam,\n\t\tloadTableColumns,\n\t\thandleSizeChange,\n\t\thandlePaginationChange,\n\t\tdefaultSearchTime,\n\t\ttableSearch,\n\t\ttableReset,\n\t\tdoRender,\n\t\tdoLoading,\n\t\thandleCustomCellClick,\n\t};\n};\n"],"names":["_a"],"mappings":"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"}