{"version":3,"file":"tableColumn.mjs","sources":["../../../../../packages/components/table/src/tableColumn.tsx"],"sourcesContent":["import { Fragment, computed, defineComponent, h, inject, resolveComponent, watch } from \"vue\";\nimport { ElIcon, ElImage, ElMessage, ElTableColumn, ElTag, ElText, dayjs, useGlobalSize } from \"element-plus\";\nimport { CopyDocument } from \"@element-plus/icons-vue\";\nimport FaImage from \"@fast-element-plus/components/image\";\nimport { consoleError, dateUtil, definePropType, makeSlots, stringUtil, useProps, useRender } from \"@fast-china/utils\";\nimport { isNumber, isObject, isString } from \"lodash-unified\";\nimport artwork from \"../images/artwork.png\";\nimport notImage from \"../images/notImage.png\";\nimport { tableUtil } from \"../utils/table\";\nimport { getTableDefaultSlots } from \"./table.type\";\nimport { enumMapKey, tableStateKey } from \"./useTable\";\nimport type { FaTableColumnCtx, FaTableColumnDateFormat, FaTableColumnType, FaTableDefaultSlotsResult, FaTableEnumColumnType } from \"./table.type\";\nimport type { TableColumnCtx } from \"element-plus\";\nimport type { ComputedRef, PropType, VNode } from \"vue\";\n\ntype DefaultRow = any;\n\nexport const tableColumnProps = {\n\t/**\n\t * @description type of the column. If set to `selection`, the column will display checkbox. If set to `index`, the column will display index of the row (staring from 1). If set to `expand`, the column will display expand icon\n\t */\n\ttype: {\n\t\ttype: String,\n\t\tdefault: \"default\",\n\t},\n\t/**\n\t * @description column label\n\t */\n\tlabel: String,\n\t/**\n\t * @description class name of cells in the column\n\t */\n\tclassName: String,\n\t/**\n\t * @description class name of the label of this column\n\t */\n\tlabelClassName: String,\n\t/**\n\t * @description\n\t */\n\tproperty: String,\n\t/**\n\t * @description field name. You can also use its alias: `property`\n\t */\n\tprop: String,\n\t/**\n\t * @description column width\n\t */\n\twidth: {\n\t\ttype: [String, Number],\n\t\tdefault: \"\",\n\t},\n\t/**\n\t * @description column minimum width. Columns with `width` has a fixed width, while columns with `min-width` has a width that is distributed in proportion\n\t */\n\tminWidth: {\n\t\ttype: [String, Number],\n\t\tdefault: \"\",\n\t},\n\t/**\n\t * @description render function for table header of this column\n\t */\n\trenderHeader: Function as PropType<TableColumnCtx<DefaultRow>[\"renderHeader\"]>,\n\t/**\n\t * @description whether column can be sorted. Remote sorting can be done by setting this attribute to 'custom' and listening to the `sort-change` event of Table\n\t */\n\tsortable: {\n\t\ttype: [Boolean, String],\n\t\tdefault: false,\n\t},\n\t/**\n\t * @description sorting method, works when `sortable` is `true`. Should return a number, just like Array.sort\n\t */\n\tsortMethod: Function as PropType<TableColumnCtx<DefaultRow>[\"sortMethod\"]>,\n\t/**\n\t * @description specify which property to sort by, works when `sortable` is `true` and `sort-method` is `undefined`. If set to an Array, the column will sequentially sort by the next property if the previous one is equal\n\t */\n\tsortBy: [String, Function, Array] as PropType<TableColumnCtx<DefaultRow>[\"sortBy\"]>,\n\t/**\n\t * @description whether column width can be resized, works when `border` of `el-table` is `true`\n\t */\n\tresizable: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * @description column's key. If you need to use the filter-change event, you need this attribute to identify which column is being filtered\n\t */\n\tcolumnKey: String,\n\t/**\n\t * @description alignment, the value should be 'left' \\/ 'center' \\/ 'right'\n\t */\n\talign: String,\n\t/**\n\t * @description alignment of the table header. If omitted, the value of the above `align` attribute will be applied, the value should be 'left' \\/ 'center' \\/ 'right'\n\t */\n\theaderAlign: String,\n\t/**\n\t * @description whether to hide extra content and show them in a tooltip when hovering on the cell\n\t */\n\tshowOverflowTooltip: {\n\t\ttype: [Boolean, Object] as PropType<TableColumnCtx<DefaultRow>[\"showOverflowTooltip\"]>,\n\t\tdefault: undefined,\n\t},\n\t/**\n\t * @description whether column is fixed at left / right. Will be fixed at left if `true`\n\t */\n\tfixed: [Boolean, String],\n\t/**\n\t * @description function that formats cell content\n\t */\n\tformatter: Function as PropType<TableColumnCtx<DefaultRow>[\"formatter\"]>,\n\t/**\n\t * @description function that determines if a certain row can be selected, works when `type` is 'selection'\n\t */\n\tselectable: Function as PropType<TableColumnCtx<DefaultRow>[\"selectable\"]>,\n\t/**\n\t * @description whether to reserve selection after data refreshing, works when `type` is 'selection'. Note that `row-key` is required for this to work\n\t */\n\treserveSelection: Boolean,\n\t/**\n\t * @description data filtering method. If `filter-multiple` is on, this method will be called multiple times for each row, and a row will display if one of the calls returns `true`\n\t */\n\tfilterMethod: Function as PropType<TableColumnCtx<DefaultRow>[\"filterMethod\"]>,\n\t/**\n\t * @description filter value for selected data, might be useful when table header is rendered with `render-header`\n\t */\n\tfilteredValue: Array as PropType<TableColumnCtx<DefaultRow>[\"filteredValue\"]>,\n\t/**\n\t * @description an array of data filtering options. For each element in this array, `text` and `value` are required\n\t */\n\tfilters: Array as PropType<TableColumnCtx<DefaultRow>[\"filters\"]>,\n\t/**\n\t * @description placement for the filter dropdown\n\t */\n\tfilterPlacement: String,\n\t/**\n\t * @description whether data filtering supports multiple options\n\t */\n\tfilterMultiple: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/**\n\t * @description className for the filter dropdown\n\t */\n\tfilterClassName: String,\n\t/**\n\t * @description customize indices for each row, works on columns with `type=index`\n\t */\n\tindex: [Number, Function] as PropType<TableColumnCtx<DefaultRow>[\"index\"]>,\n\t/**\n\t * @description the order of the sorting strategies used when sorting the data, works when `sortable` is `true`. Accepts an array, as the user clicks on the header, the column is sorted in order of the elements in the array\n\t */\n\tsortOrders: {\n\t\ttype: Array as PropType<TableColumnCtx<DefaultRow>[\"sortOrders\"]>,\n\t\tdefault: (): TableColumnCtx<DefaultRow>[\"sortOrders\"] => {\n\t\t\treturn [\"ascending\", \"descending\", null];\n\t\t},\n\t\tvalidator: (val: TableColumnCtx<unknown>[\"sortOrders\"]): boolean => {\n\t\t\treturn val.every((order: string) => [\"ascending\", \"descending\", null].includes(order));\n\t\t},\n\t},\n};\n\ntype FaTableColumnSlotsResult = {\n\t/** @description slots为表格内容的时候才会返回 */\n\trow?: any;\n\t/** @description slot为表头内容的时候返回 'TableColumnCtx<any>' 否则返回 'FaTableColumnCtx' */\n\tcolumn?: TableColumnCtx<any> | FaTableColumnCtx;\n\t$index?: number;\n};\n\ntype FaTableColumnDefaultSlots = {\n\t[key: string]: FaTableDefaultSlotsResult & FaTableColumnSlotsResult;\n};\n\ntype FaTableColumnSlots = {\n\t/** @description 默认内容插槽 */\n\tdefault: FaTableDefaultSlotsResult & { row: any; column: FaTableColumnCtx; $index: number };\n\t/** @description 自定义表头的内容 */\n\theader: FaTableDefaultSlotsResult & { column: FaTableColumnCtx; $index: number };\n\t/** @description 自定义 filter 图标 */\n\tfilterIcon: FaTableDefaultSlotsResult & { filterOpened: boolean };\n} & FaTableColumnDefaultSlots;\n\nexport default defineComponent({\n\tname: \"FaTableColumn\",\n\tprops: {\n\t\t...tableColumnProps,\n\t\t/**\n\t\t * @description type of the column. If set to `selection`, the column will display checkbox. If set to `index`, the column will display index of the row (staring from 1). If set to `expand`, the column will display expand icon\n\t\t */\n\t\ttype: {\n\t\t\ttype: definePropType<FaTableColumnType>(String),\n\t\t\tdefault: \"default\",\n\t\t},\n\t\t/**\n\t\t * @description column width\n\t\t */\n\t\twidth: {\n\t\t\ttype: [String, Number],\n\t\t\tdefault: \"auto\",\n\t\t},\n\t\t/** @description alignment, the value should be 'left' \\/ 'center' \\/ 'right' */\n\t\talign: {\n\t\t\ttype: String,\n\t\t\tdefault: \"left\",\n\t\t},\n\t\t/** @description alignment of the table header. If omitted, the value of the above `align` attribute will be applied, the value should be 'left' \\/ 'center' \\/ 'right' */\n\t\theaderAlign: {\n\t\t\ttype: String,\n\t\t\tdefault: \"left\",\n\t\t},\n\t\t/** @description 是否显示在表格当中 */\n\t\tshow: Boolean,\n\t\t/** @description 小页面的宽度，如果为空，则继承默认宽度 */\n\t\tsmallWidth: {\n\t\t\ttype: [String, Number],\n\t\t},\n\t\t/** @description 自适应宽度 */\n\t\tautoWidth: Boolean,\n\t\t/** @description 插槽名称 */\n\t\tslot: String,\n\t\t/** @description 表格头部插槽名称 */\n\t\theaderSlot: String,\n\t\t/** @description 自定义表头内容渲染（tsx语法） */\n\t\theaderRender: {\n\t\t\ttype: definePropType<({ column, $index }: { column: TableColumnCtx<any>; $index: number } & FaTableDefaultSlotsResult) => VNode[]>(\n\t\t\t\tFunction\n\t\t\t),\n\t\t},\n\t\t/** @description 自定义单元格内容渲染（tsx语法） */\n\t\trender: {\n\t\t\ttype: definePropType<\n\t\t\t\t({ row, column, $index }: { row: any; column: FaTableColumnCtx; $index: number } & FaTableDefaultSlotsResult) => VNode[]\n\t\t\t>(Function),\n\t\t},\n\t\t/** @description 多级表头 */\n\t\t_children: {\n\t\t\ttype: definePropType<FaTableColumnCtx[]>(Array),\n\t\t},\n\t\t/** @description 复制 */\n\t\tcopy: Boolean,\n\t\t/** @description 是否为 Link Button */\n\t\tlink: Boolean,\n\t\t/** @description 合并行字段 */\n\t\tspanProp: String,\n\t\t/** @description Link 按钮的点击事件，优先级最高 */\n\t\tclick: {\n\t\t\ttype: definePropType<({ row, $index }: { row: any; $index?: number }) => void>(Function),\n\t\t},\n\t\t/** @description 点击Emits事件回调 */\n\t\tclickEmit: String,\n\t\t/** @description 显示时间格式化字符串 */\n\t\tdateFix: Boolean,\n\t\t/** @description 显示在页面中的日期格式 */\n\t\tdateFormat: {\n\t\t\ttype: definePropType<FaTableColumnDateFormat>(String),\n\t\t},\n\t\t/** @description 是否是标签展示 */\n\t\ttag: Boolean,\n\t\t/** @description 枚举类型（渲染值的字典） */\n\t\tenum: {\n\t\t\ttype: definePropType<FaTableEnumColumnType>([Array, Function]),\n\t\t},\n\t\t/** @description 数据删除字段，如果为 true 会显示遮罩层 */\n\t\tdataDeleteField: String,\n\t\t/** @description 制单信息计算 */\n\t\tsubmitInfoField: {\n\t\t\ttype: definePropType<{ submitClerkName?: string; submitTime?: string }>(Object),\n\t\t\tdefault: () => ({\n\t\t\t\tsubmitClerkName: \"submitClerkName\",\n\t\t\t\tsubmitTime: \"submitTime\",\n\t\t\t}),\n\t\t},\n\t},\n\temits: {\n\t\t/** @description 图片预览 */\n\t\timagePreview: (url: string): boolean => isString(url),\n\t\t/** @description 自定义单元格点击事件 */\n\t\tcustomCellClick: (emitName: string, { row, column, $index }: { row: any; column: FaTableColumnCtx; $index: number }): boolean =>\n\t\t\tisString(emitName) && isObject(row) && isObject(column) && isNumber($index),\n\t},\n\tslots: makeSlots<FaTableColumnSlots>(),\n\tsetup(props, { slots, emit }) {\n\t\tconst _globalSize = useGlobalSize();\n\t\tconst tableState = inject(tableStateKey);\n\t\tconst enumMap = inject(enumMapKey);\n\n\t\tconst columnCtx = computed(() => props as unknown as FaTableColumnCtx);\n\n\t\tconst renderCellData = ({ row }: { row: any }): any => {\n\t\t\tlet enumKey = props.prop;\n\t\t\tif (isString(props.enum)) {\n\t\t\t\tenumKey = props.enum;\n\t\t\t}\n\t\t\tconst enumData = enumMap.get(enumKey);\n\t\t\tif (enumData) {\n\t\t\t\treturn tableUtil.filterEnum(tableUtil.handleRowAccordingToProp(row, props.prop), enumData);\n\t\t\t} else {\n\t\t\t\treturn tableUtil.formatValue(tableUtil.handleRowAccordingToProp(row, props.prop));\n\t\t\t}\n\t\t};\n\n\t\tconst getTagType = ({ row }: { row: any }): any => {\n\t\t\tlet enumKey = props.prop;\n\t\t\tif (isString(props.enum)) {\n\t\t\t\tenumKey = props.enum;\n\t\t\t}\n\t\t\tconst enumData = enumMap.get(enumKey);\n\t\t\treturn tableUtil.filterEnum(tableUtil.handleRowAccordingToProp(row, props.prop), enumData, null, \"tag\") as any;\n\t\t};\n\n\t\tconst getWidth = (defAttr: string): string | number => {\n\t\t\tif (props.autoWidth) {\n\t\t\t\treturn computed(() => {\n\t\t\t\t\tconst findInfo = tableState.autoColumnWidth.find((f) => f.prop === props.prop);\n\t\t\t\t\tif (findInfo) {\n\t\t\t\t\t\treturn `${findInfo.width}px`;\n\t\t\t\t\t}\n\t\t\t\t\treturn \"auto\";\n\t\t\t\t}).value;\n\t\t\t}\n\t\t\tif (_globalSize.value === \"small\") {\n\t\t\t\treturn props.smallWidth ?? props.width ?? props.minWidth ?? defAttr ?? \"auto\";\n\t\t\t}\n\t\t\treturn props.width ?? props.minWidth ?? defAttr ?? \"auto\";\n\t\t};\n\n\t\tconst autoWidthHeaderRender = (el: VNode[]): VNode[] => {\n\t\t\tif (props.autoWidth) {\n\t\t\t\treturn (\n\t\t\t\t\t<div class={[\"fa-table__auto-width-column__cell-header\", `__fa-table__auto-width-column__cell-header__${props.prop}`]}>{el}</div>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn el;\n\t\t\t}\n\t\t};\n\n\t\tconst headerRender = ({ column, $index }: { column: TableColumnCtx<any>; $index: number }): VNode[] => {\n\t\t\tif (props.headerRender) {\n\t\t\t\treturn autoWidthHeaderRender(props.headerRender({ column, $index, ...getTableDefaultSlots(tableState) }));\n\t\t\t} else if (props.headerSlot) {\n\t\t\t\treturn autoWidthHeaderRender(\n\t\t\t\t\tslots[props.headerSlot] && slots[props.headerSlot]({ column, $index, ...getTableDefaultSlots(tableState) })\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn autoWidthHeaderRender(<span>{props.label}</span>);\n\t\t\t}\n\t\t};\n\n\t\tconst autoWidthRender = (el: VNode[]): VNode[] => {\n\t\t\tif (props.autoWidth) {\n\t\t\t\treturn <div class={[\"fa-table__auto-width-column__cell\", `__fa-table__auto-width-column__cell__${props.prop}`]}>{el}</div>;\n\t\t\t} else {\n\t\t\t\treturn el;\n\t\t\t}\n\t\t};\n\n\t\tconst handleCopyClick = async (value): Promise<void> => {\n\t\t\ttry {\n\t\t\t\tawait stringUtil.copy(String(value));\n\t\t\t\tElMessage({\n\t\t\t\t\ttype: \"success\",\n\t\t\t\t\tmessage: \"复制成功\",\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tconsoleError(\"FaTableColumn\", error);\n\t\t\t\tElMessage({\n\t\t\t\t\ttype: \"error\",\n\t\t\t\t\tmessage: \"复制失败\",\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\tconst copyRender = (value, copy?: boolean): VNode[] => {\n\t\t\treturn (\n\t\t\t\t(props.copy || copy) &&\n\t\t\t\tvalue && (\n\t\t\t\t\t<ElIcon class=\"fa__copy-icon\" title=\"复制\" onClick={() => handleCopyClick(value)}>\n\t\t\t\t\t\t<CopyDocument />\n\t\t\t\t\t</ElIcon>\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\n\t\tconst formatterRender = (row: any, column: TableColumnCtx<any>, cellValue: any, index: number): any => {\n\t\t\tif (column.formatter) {\n\t\t\t\treturn column.formatter(row, column, cellValue, index);\n\t\t\t} else {\n\t\t\t\treturn cellValue;\n\t\t\t}\n\t\t};\n\n\t\tconst defaultRender = ({ row, column, $index }: { row: any; column: TableColumnCtx<any>; $index: number }): VNode[] => {\n\t\t\tif (props.type === \"submitInfo\") {\n\t\t\t\tconst submitClerkName = row[props.submitInfoField?.submitClerkName ?? \"submitClerkName\"];\n\t\t\t\tconst submitTime = row[props.submitInfoField?.submitTime ?? \"submitTime\"];\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div style=\"white-space: nowrap; overflow: hidden; text-overflow: ellipsis;\" title={submitTime}>\n\t\t\t\t\t\t\t{submitClerkName && <span style=\"margin-right: 5px;\">{submitClerkName}</span>}\n\t\t\t\t\t\t\t<span>{submitTime}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{submitTime && (\n\t\t\t\t\t\t\t<ElTag type=\"info\" round effect=\"light\" size=\"small\">\n\t\t\t\t\t\t\t\t{dateUtil.dateTimeFix(String(submitTime))}\n\t\t\t\t\t\t\t</ElTag>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t} else if (props.tag) {\n\t\t\t\tconst renderValue = formatterRender(row, column, renderCellData({ row }), $index);\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{copyRender(renderValue)}\n\t\t\t\t\t\t{renderValue ? <ElTag type={getTagType({ row })}>{renderValue}</ElTag> : null}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t} else if (props.type === \"date\" || props.type === \"time\" || props.type === \"dateTime\") {\n\t\t\t\tlet dateFormat;\n\t\t\t\tswitch (props.type) {\n\t\t\t\t\tcase \"date\":\n\t\t\t\t\t\tdateFormat = \"YYYY-MM-DD\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"time\":\n\t\t\t\t\t\tdateFormat = \"HH:mm:ss\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"dateTime\":\n\t\t\t\t\t\tdateFormat = \"YYYY-MM-DD HH:mm:ss\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst renderValue = row[props.prop]\n\t\t\t\t\t? formatterRender(row, column, dayjs(row[props.prop]).format(props.dateFormat ?? dateFormat), $index)\n\t\t\t\t\t: null;\n\t\t\t\treturn (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{copyRender(renderValue)}\n\t\t\t\t\t\t{renderValue}\n\t\t\t\t\t\t{props.dateFix && renderValue && (\n\t\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t<ElTag type=\"info\" round effect=\"light\" size=\"small\">\n\t\t\t\t\t\t\t\t\t{dateUtil.dateTimeFix(String(renderValue))}\n\t\t\t\t\t\t\t\t</ElTag>\n\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t} else if (\n\t\t\t\tprops.type === \"d2\" ||\n\t\t\t\tprops.type === \"d4\" ||\n\t\t\t\tprops.type === \"d6\" ||\n\t\t\t\tprops.type === \"gd2\" ||\n\t\t\t\tprops.type === \"gd4\" ||\n\t\t\t\tprops.type === \"gd6\"\n\t\t\t) {\n\t\t\t\tconst renderValue = row[props.prop];\n\t\t\t\tif (renderValue) {\n\t\t\t\t\tif (isNumber(renderValue)) {\n\t\t\t\t\t\tlet useGrouping = false;\n\t\t\t\t\t\tlet maximumFractionDigits: number;\n\t\t\t\t\t\tswitch (props.type) {\n\t\t\t\t\t\t\tcase \"d2\":\n\t\t\t\t\t\t\t\tmaximumFractionDigits = 2;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"d4\":\n\t\t\t\t\t\t\t\tmaximumFractionDigits = 4;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"d6\":\n\t\t\t\t\t\t\t\tmaximumFractionDigits = 6;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"gd2\":\n\t\t\t\t\t\t\t\tmaximumFractionDigits = 2;\n\t\t\t\t\t\t\t\tuseGrouping = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"gd4\":\n\t\t\t\t\t\t\t\tmaximumFractionDigits = 4;\n\t\t\t\t\t\t\t\tuseGrouping = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase \"gd6\":\n\t\t\t\t\t\t\t\tmaximumFractionDigits = 6;\n\t\t\t\t\t\t\t\tuseGrouping = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn renderValue.toLocaleString(\"zh-CN\", {\n\t\t\t\t\t\t\tminimumFractionDigits: 2,\n\t\t\t\t\t\t\tmaximumFractionDigits,\n\t\t\t\t\t\t\tuseGrouping,\n\t\t\t\t\t\t}) as any;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn renderValue;\n\t\t\t} else if (props.link) {\n\t\t\t\tconst renderValue = formatterRender(row, column, row[props.prop], $index);\n\t\t\t\treturn autoWidthRender(\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{copyRender(renderValue)}\n\t\t\t\t\t\t{renderValue && (\n\t\t\t\t\t\t\t<ElText\n\t\t\t\t\t\t\t\tclass={\"el-link is-hover-underline fa-table__link-column__text\"}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t// 数据删除拦截点击\n\t\t\t\t\t\t\t\t\tif (props.dataDeleteField && row[props.dataDeleteField] === true) return;\n\t\t\t\t\t\t\t\t\tif (props.click) {\n\t\t\t\t\t\t\t\t\t\tprops.click({ row, $index });\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\temit(\"customCellClick\", props.clickEmit, {\n\t\t\t\t\t\t\t\t\t\t\trow,\n\t\t\t\t\t\t\t\t\t\t\tcolumn: columnCtx.value,\n\t\t\t\t\t\t\t\t\t\t\t$index,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{renderValue}\n\t\t\t\t\t\t\t</ElText>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t} else if (props.render) {\n\t\t\t\treturn autoWidthRender(props.render({ row, column: columnCtx.value, $index, ...getTableDefaultSlots(tableState) }));\n\t\t\t} else if (props.slot) {\n\t\t\t\treturn autoWidthRender(\n\t\t\t\t\tslots[props.slot] && slots[props.slot]({ row, column: columnCtx.value, $index, ...getTableDefaultSlots(tableState) })\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconst renderValue = formatterRender(row, column, row[props.prop], $index);\n\t\t\t\treturn autoWidthRender(\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t{copyRender(renderValue)}\n\t\t\t\t\t\t{renderValue}\n\t\t\t\t\t</Fragment>\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\n\t\tlet elTableColumnProps: ComputedRef<TableColumnCtx<any>> = useProps(props, tableColumnProps, [\n\t\t\t\"type\",\n\t\t\t\"width\",\n\t\t\t\"minWidth\",\n\t\t\t\"sortable\",\n\t\t\t\"sortOrders\",\n\t\t\t\"resizable\",\n\t\t\t\"showOverflowTooltip\",\n\t\t]) as unknown as ComputedRef<TableColumnCtx<any>>;\n\n\t\twatch(\n\t\t\t() => props,\n\t\t\t() => {\n\t\t\t\telTableColumnProps = useProps(props, tableColumnProps, [\n\t\t\t\t\t\"type\",\n\t\t\t\t\t\"minWidth\",\n\t\t\t\t\t\"sortable\",\n\t\t\t\t\t\"sortOrders\",\n\t\t\t\t\t\"resizable\",\n\t\t\t\t\t\"showOverflowTooltip\",\n\t\t\t\t]) as unknown as ComputedRef<TableColumnCtx<any>>;\n\t\t\t}\n\t\t);\n\n\t\tuseRender(() => (\n\t\t\t<Fragment>\n\t\t\t\t{\n\t\t\t\t\t// 如果有配置多级表头的数据，则递归该组件\n\t\t\t\t\tprops._children?.length ? (\n\t\t\t\t\t\t<ElTableColumn\n\t\t\t\t\t\t\t{...elTableColumnProps.value}\n\t\t\t\t\t\t\tminWidth={getWidth(\"auto\")}\n\t\t\t\t\t\t\tsortable={props.sortable ? \"custom\" : false}\n\t\t\t\t\t\t\tsortOrders={props.sortOrders ?? [\"descending\", \"ascending\", null]}\n\t\t\t\t\t\t\tresizable={props.resizable && !props.autoWidth}\n\t\t\t\t\t\t\tshowOverflowTooltip={(props.showOverflowTooltip ?? true) && !props.autoWidth && !props.type}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\theader: ({ column, $index }: { column: TableColumnCtx<any>; $index: number }) => headerRender({ column, $index }),\n\t\t\t\t\t\t\t\tdefault: () =>\n\t\t\t\t\t\t\t\t\tprops._children.map((col: FaTableColumnCtx) =>\n\t\t\t\t\t\t\t\t\t\th(\n\t\t\t\t\t\t\t\t\t\t\tresolveComponent(\"FaTableColumn\"),\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t...col,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tslots\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</ElTableColumn>\n\t\t\t\t\t) : props.type === \"image\" ? (\n\t\t\t\t\t\t<ElTableColumn\n\t\t\t\t\t\t\t{...elTableColumnProps.value}\n\t\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\t\tclassName=\"fa-table__image-column\"\n\t\t\t\t\t\t\tminWidth=\"50px\"\n\t\t\t\t\t\t\tsortable={false}\n\t\t\t\t\t\t\tresizable={false}\n\t\t\t\t\t\t\tshowOverflowTooltip={false}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\theader: ({ column, $index }: { column: TableColumnCtx<any>; $index: number }) => headerRender({ column, $index }),\n\t\t\t\t\t\t\t\tdefault: ({ row }: { row: any; column: TableColumnCtx<any>; $index: number }) =>\n\t\t\t\t\t\t\t\t\trow[props.prop] ? (\n\t\t\t\t\t\t\t\t\t\ttableState.hideImage ? (\n\t\t\t\t\t\t\t\t\t\t\t<ElImage\n\t\t\t\t\t\t\t\t\t\t\t\tclass=\"fa-image\"\n\t\t\t\t\t\t\t\t\t\t\t\tlazy\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={artwork}\n\t\t\t\t\t\t\t\t\t\t\t\tfit=\"cover\"\n\t\t\t\t\t\t\t\t\t\t\t\tpreviewSrcList={[row[props.prop]]}\n\t\t\t\t\t\t\t\t\t\t\t\tcloseOnPressEscape\n\t\t\t\t\t\t\t\t\t\t\t\thideOnClickModal\n\t\t\t\t\t\t\t\t\t\t\t\tpreviewTeleported\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<FaImage lazy src={row[props.prop]} fit=\"cover\" thumb />\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<ElImage class=\"fa-image\" lazy src={notImage} fit=\"cover\" />\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</ElTableColumn>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t// 其他正常的列\n\t\t\t\t\t\t<ElTableColumn\n\t\t\t\t\t\t\t{...elTableColumnProps.value}\n\t\t\t\t\t\t\tminWidth={getWidth(\"auto\")}\n\t\t\t\t\t\t\tsortable={props.sortable ? \"custom\" : false}\n\t\t\t\t\t\t\tsortOrders={props.sortOrders ?? [\"descending\", \"ascending\", null]}\n\t\t\t\t\t\t\tresizable={props.resizable && !props.autoWidth}\n\t\t\t\t\t\t\tshowOverflowTooltip={(props.showOverflowTooltip ?? true) && !props.autoWidth && !props.type}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\theader: ({ column, $index }: { column: TableColumnCtx<any>; $index: number }) => headerRender({ column, $index }),\n\t\t\t\t\t\t\t\tdefault: ({ row, column, $index }: { row: any; column: TableColumnCtx<any>; $index: number }) =>\n\t\t\t\t\t\t\t\t\tdefaultRender({ row, column, $index }),\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</ElTableColumn>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Fragment>\n\t\t));\n\t},\n});\n"],"names":["_isSlot","s","Object","prototype","toString","call","_isVNode","tableColumnProps","type","String","default","label","className","labelClassName","property","prop","width","Number","minWidth","renderHeader","Function","sortable","Boolean","sortMethod","sortBy","Array","resizable","columnKey","align","headerAlign","showOverflowTooltip","undefined","fixed","formatter","selectable","reserveSelection","filterMethod","filteredValue","filters","filterPlacement","filterMultiple","filterClassName","index","sortOrders","validator","val","every","order","includes","name","props","definePropType","show","smallWidth","autoWidth","slot","headerSlot","headerRender","render","_children","copy","link","spanProp","click","clickEmit","dateFix","dateFormat","tag","enum","dataDeleteField","submitInfoField","submitClerkName","submitTime","emits","imagePreview","url","isString","customCellClick","emitName","row","column","$index","isObject","isNumber","slots","makeSlots","setup","emit","_globalSize","useGlobalSize","tableState","inject","tableStateKey","enumMap","enumMapKey","columnCtx","computed","renderCellData","enumKey","enumData","get","tableUtil","filterEnum","handleRowAccordingToProp","formatValue","getTagType","getWidth","defAttr","findInfo","autoColumnWidth","find","f","value","autoWidthHeaderRender","el","_createVNode","getTableDefaultSlots","autoWidthRender","handleCopyClick","stringUtil","ElMessage","message","error","consoleError","copyRender","ElIcon","onClick","CopyDocument","formatterRender","cellValue","defaultRender","_slot","_Fragment","ElTag","dateUtil","dateTimeFix","renderValue","_slot2","dayjs","format","useGrouping","maximumFractionDigits","toLocaleString","minimumFractionDigits","ElText","elTableColumnProps","useProps","watch","useRender","length","ElTableColumn","_mergeProps","header","map","col","h","resolveComponent","hideImage","ElImage","artwork","FaImage","notImage"],"mappings":"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"}