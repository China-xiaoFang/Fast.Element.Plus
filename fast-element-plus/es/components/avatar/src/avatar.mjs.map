{"version":3,"file":"avatar.mjs","sources":["../../../../../packages/components/avatar/src/avatar.tsx"],"sourcesContent":["import type { Component } from \"vue\";\nimport { computed, defineComponent, reactive } from \"vue\";\nimport { Picture } from \"@element-plus/icons-vue\";\nimport { definePropType, makeSlots, useExpose, useProps, useRender } from \"@fast-china/utils\";\nimport { ElAvatar, avatarEmits, avatarProps } from \"element-plus\";\n\nexport const faAvatarProps = {\n\t...avatarProps,\n\t/** @description representation type to icon, more info on icon component. */\n\ticon: {\n\t\ttype: definePropType<string | Component>([String, Object, Function]),\n\t\t// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\t\tdefault: () => Picture,\n\t},\n\t/**\n\t * @description 原图\n\t */\n\toriginal: Boolean,\n\t/** @description 标准 */\n\tnormal: Boolean,\n\t/** @description 小图 */\n\tsmall: Boolean,\n\t/** @description 缩略图 */\n\tthumb: Boolean,\n};\n\nexport const faAvatarEmits = {\n\t...avatarEmits,\n};\n\ntype FaAvatarSlots = {\n\t/** @description 默认内容插槽 */\n\tdefault: { src: string };\n};\n\nexport default defineComponent({\n\tname: \"FaAvatar\",\n\tprops: faAvatarProps,\n\temits: faAvatarEmits,\n\tslots: makeSlots<FaAvatarSlots>(),\n\tsetup(props, { attrs, slots, emit, expose }) {\n\t\tconst state = reactive({\n\t\t\tsrc: computed(() => {\n\t\t\t\tif (props.src) {\n\t\t\t\t\tif (props.original) {\n\t\t\t\t\t\treturn props.src;\n\t\t\t\t\t} else if (props.normal) {\n\t\t\t\t\t\treturn `${props.src}@!normal`;\n\t\t\t\t\t} else if (props.small) {\n\t\t\t\t\t\treturn `${props.src}@!small`;\n\t\t\t\t\t} else if (props.thumb) {\n\t\t\t\t\t\treturn `${props.src}@!thumb`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// 默认使用缩略图\n\t\t\t\t\t\treturn `${props.src}@!thumb`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}),\n\t\t});\n\n\t\tconst elAvatarProps = useProps(props, avatarProps, [\"src\"]);\n\n\t\tuseRender(() => (\n\t\t\t<ElAvatar {...elAvatarProps.value} class=\"fa-avatar\" src={state.src} onError={(evt: Event) => emit(\"error\", evt)}>\n\t\t\t\t{slots.default && slots.default({ src: state.src })}\n\t\t\t</ElAvatar>\n\t\t));\n\n\t\treturn useExpose(expose, {\n\t\t\t/** @description 图片路径 */\n\t\t\tsrc: state.src,\n\t\t});\n\t},\n});\n"],"names":["faAvatarProps","avatarProps","icon","type","definePropType","String","Object","Function","default","Picture","original","Boolean","normal","small","thumb","faAvatarEmits","avatarEmits","name","props","emits","slots","makeSlots","setup","attrs","emit","expose","state","reactive","src","computed","undefined","elAvatarProps","useProps","useRender","_createVNode","ElAvatar","_mergeProps","value","evt","useExpose"],"mappings":";;;;AAMO,MAAMA,gBAAgB;AAAA,EAC5B,GAAGC;AAAAA;AAAAA,EAEHC,MAAM;AAAA,IACLC,MAAMC,eAAmC,CAACC,QAAQC,QAAQC,QAAQ,CAAC;AAAA;AAAA,IAEnEC,SAASA,MAAMC;AAAAA;;;;EAKhBC,UAAUC;AAAAA;AAAAA,EAEVC,QAAQD;AAAAA;AAAAA,EAERE,OAAOF;AAAAA;AAAAA,EAEPG,OAAOH;AACR;AAEO,MAAMI,gBAAgB;AAAA,EAC5B,GAAGC;AACJ;AAOA,MAAA,yCAA+B;AAAA,EAC9BC,MAAM;AAAA,EACNC,OAAOlB;AAAAA,EACPmB,OAAOJ;AAAAA,EACPK,OAAOC,UAAS;AAAA,EAChBC,MAAMJ,OAAO;AAAA,IAAEK;AAAAA,IAAOH;AAAAA,IAAOI;AAAAA,IAAMC;AAAAA,EAAO,GAAG;AAC5C,UAAMC,QAAQC,SAAS;AAAA,MACtBC,KAAKC,SAAS,MAAM;AACnB,YAAIX,MAAMU,KAAK;AACd,cAAIV,MAAMR,UAAU;AACnB,mBAAOQ,MAAMU;AAAAA,UACd,WAAWV,MAAMN,QAAQ;AACxB,mBAAO,GAAGM,MAAMU,GAAG;AAAA,UACpB,WAAWV,MAAML,OAAO;AACvB,mBAAO,GAAGK,MAAMU,GAAG;AAAA,UACpB,WAAWV,MAAMJ,OAAO;AACvB,mBAAO,GAAGI,MAAMU,GAAG;AAAA,UACpB,OAAO;AAEN,mBAAO,GAAGV,MAAMU,GAAG;AAAA,UACpB;AAAA,QACD;AACA,eAAOE;AAAAA,MACR,CAAC;AAAA,IACF,CAAC;AAED,UAAMC,gBAAgBC,SAASd,OAAOjB,aAAa,CAAC,KAAK,CAAC;AAE1DgC,cAAU,MAAAC,YAAAC,UAAAC,WACKL,cAAcM,OAAK;AAAA,MAAA,SAAA;AAAA,MAAA,OAAyBX,MAAME;AAAAA,MAAG,WAAYU,SAAed,KAAK,SAASc,GAAG;AAAA,IAAC,CAAA,GAAA;AAAA,MAAA9B,SAAAA,MAAA,CAC9GY,MAAMZ,WAAWY,MAAMZ,QAAQ;AAAA,QAAEoB,KAAKF,MAAME;AAAAA,MAAI,CAAC,CAAC;AAAA,IAAA,CAAA,CAEpD;AAED,WAAOW,UAAUd,QAAQ;AAAA;AAAA,MAExBG,KAAKF,MAAME;AAAAA,IACZ,CAAC;AAAA,EACF;AACD,CAAC;"}