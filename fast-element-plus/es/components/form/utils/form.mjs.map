{"version":3,"file":"form.mjs","sources":["../../../../../packages/components/form/utils/form.ts"],"sourcesContent":["import { RegExps } from \"@fast-element-plus/constants\";\nimport { consoleWarn } from \"@fast-china/utils\";\nimport type { FormInstance, FormItemRule, FormValidationResult } from \"element-plus\";\nimport type { Ref } from \"vue\";\n\n/**\n * 表单工具类\n */\nexport const formUtil = {\n\t/**\n\t * ElForm 表单验证\n\t * @param elFormRef ElForm 组件ref\n\t */\n\tvalidate(elFormRef: Ref<FormInstance, FormInstance>): FormValidationResult {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\telFormRef.value.validate((isValid: boolean, invalidFields?) => {\n\t\t\t\tif (isValid) {\n\t\t\t\t\tresolve(isValid);\n\t\t\t\t} else {\n\t\t\t\t\tif (invalidFields) {\n\t\t\t\t\t\tconsoleWarn(\"formUtil\", false, invalidFields);\n\t\t\t\t\t}\n\t\t\t\t\treject(isValid);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\t/**\n\t * ElForm 表单验证，带滚动\n\t * @param elFormRef ElForm 组件ref\n\t */\n\tvalidateScrollToField(elFormRef: Ref<FormInstance>): FormValidationResult {\n\t\treturn new Promise<boolean>((resolve, reject) => {\n\t\t\telFormRef.value.validate((isValid: boolean, invalidFields?) => {\n\t\t\t\tif (isValid) {\n\t\t\t\t\tresolve(isValid);\n\t\t\t\t} else {\n\t\t\t\t\telFormRef.value.scrollToField(Object.keys(invalidFields));\n\t\t\t\t\tif (invalidFields) {\n\t\t\t\t\t\tconsoleWarn(\"formUtil\", false, invalidFields);\n\t\t\t\t\t}\n\t\t\t\t\treject(isValid);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\t/**\n\t * 手机号\n\t */\n\tmobile(rule: any, value: string, callback: any): void {\n\t\tif (!value) {\n\t\t\tcallback(new Error(\"请输入手机号码\"));\n\t\t} else if (RegExps.Mobile.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的手机号码\"));\n\t\t}\n\t},\n\t/**\n\t * 电话号码\n\t */\n\tphone(rule: any, value: string, callback: any): void {\n\t\tif (!value) {\n\t\t\tcallback();\n\t\t} else if (RegExps.Phone.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的电话号码\"));\n\t\t}\n\t},\n\t/**\n\t * 邮箱\n\t */\n\temail(rule: any, value: string, callback: any): void {\n\t\tif (!value) {\n\t\t\tcallback();\n\t\t} else if (RegExps.Email.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的邮箱地址\"));\n\t\t}\n\t},\n\t/**\n\t * 身份证\n\t */\n\tidCard(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.IdCard.test(value) || !value) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的身份证号码\"));\n\t\t}\n\t},\n\t/**\n\t * 车牌号\n\t */\n\tcarNumber(rule: any, value: string, callback: any): void {\n\t\tlet success = false;\n\t\tif (value?.length === 7) {\n\t\t\tsuccess = RegExps.CarNumber.test(value);\n\t\t} else if (value?.length === 8) {\n\t\t\tsuccess = RegExps.NewEnergyCarNumber.test(value);\n\t\t}\n\t\tif (success) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的车牌号码\"));\n\t\t}\n\t},\n\t/**\n\t * editor 必填\n\t */\n\teditorRequired(rule: any, value: string, callback: any): void {\n\t\tif (value === \"<p><br></p>\") {\n\t\t\treturn callback(new Error(\"内容不能为空\"));\n\t\t}\n\t\treturn callback();\n\t},\n\t/**\n\t * 外部链接\n\t */\n\texternal(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.External.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入正确的外部链接\"));\n\t\t}\n\t},\n\t/**\n\t * 有效的URL\n\t */\n\turl(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.Url.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的Url\"));\n\t\t}\n\t},\n\t/**\n\t * 邮政编码\n\t */\n\tpostCode(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.PostCode.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的邮政编码\"));\n\t\t}\n\t},\n\t/**\n\t * 账号（6-20位字母或数字，必须以字母开头，不能全为数字）\n\t */\n\taccount(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.Account.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的账号（6-20位字母或数字，必须以字母开头，不能全为数字）\"));\n\t\t}\n\t},\n\t/**\n\t * 弱密码（只包含字母和数字，长度为6到18位）\n\t */\n\tpassword(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.Password.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的密码（只包含字母和数字，长度为6到18位）\"));\n\t\t}\n\t},\n\t/**\n\t * 强密码（8到20位，包含大小写字母、数字及特殊字符）\n\t */\n\tstrongPassword(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.StrongPassword.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的密码（8到20位，包含大小写字母、数字及特殊字符）\"));\n\t\t}\n\t},\n\t/**\n\t * 中文字符\n\t */\n\tchinese(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.Chinese.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的中文字符\"));\n\t\t}\n\t},\n\t/**\n\t * 英文字符\n\t */\n\tenglish(rule: any, value: string, callback: any): void {\n\t\tif (RegExps.English.test(value)) {\n\t\t\tcallback();\n\t\t} else {\n\t\t\tcallback(new Error(\"请输入有效的英文字符\"));\n\t\t}\n\t},\n\t/**\n\t * 文本框必填\n\t */\n\tinputRequired(message: string, trigger = \"blur\"): FormItemRule {\n\t\treturn {\n\t\t\trequired: true,\n\t\t\tmessage,\n\t\t\ttrigger,\n\t\t};\n\t},\n\t/**\n\t * 选择器必选\n\t */\n\tselectRequired(message: string, trigger = \"change\"): FormItemRule {\n\t\treturn {\n\t\t\trequired: true,\n\t\t\tmessage,\n\t\t\ttrigger,\n\t\t};\n\t},\n};\n"],"names":[],"mappings":"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"}