{"version":3,"file":"formItem.mjs","sources":["../../../../../packages/components/form/src/formItem.tsx"],"sourcesContent":["import type { Ref, VNode } from \"vue\";\nimport { Fragment, computed, defineComponent, inject, ref } from \"vue\";\nimport { FaFormItemTip } from \"@fast-element-plus/components/formItemTip\";\nimport { FaLayoutGridItem } from \"@fast-element-plus/components/layoutGrid\";\nimport { makeSlots, useExpose, useProps, useRender } from \"@fast-element-plus/utils\";\nimport type { FormItemInstance } from \"element-plus\";\nimport { ElFormItem, formItemProps } from \"element-plus\";\nimport { isNumber } from \"lodash-unified\";\n\nexport const faFormItemProps = {\n\t...formItemProps,\n\t/** @description Label tips 提示 */\n\ttips: String,\n\t/** @description Grid 布局 */\n\tgrid: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n\t},\n\t/** @description 偏移量 */\n\toffset: {\n\t\ttype: [String, Number],\n\t\tdefault: 0,\n\t},\n\t/** @description 栅格跨度 */\n\tspan: {\n\t\ttype: [String, Number],\n\t},\n\t/** @description 独占一行。如果设置 span 则无效 */\n\trow: Boolean,\n};\n\ntype FaFormItemSlots = {\n\t/** @description 默认内容插槽 */\n\tdefault: never;\n\t/** @description 标签位置显示的内容 */\n\tlabel: { label: string };\n\t/** @description 验证错误信息的显示内容 */\n\terror: { error: string };\n};\n\nexport default defineComponent({\n\tname: \"FaFormItem\",\n\tprops: faFormItemProps,\n\tslots: makeSlots<FaFormItemSlots>(),\n\tsetup(props, { attrs, slots, expose }) {\n\t\tconst formItemRef = ref<FormItemInstance>();\n\n\t\tconst cols = inject<Ref<number>>(\"cols\", ref(4));\n\n\t\t// 获取响应式设置\n\t\tconst getResponsive = (): {\n\t\t\tspan?: number;\n\t\t\toffset?: number;\n\t\t} => {\n\t\t\tif (!props.grid) return {};\n\t\t\tif (props.span) {\n\t\t\t\treturn {\n\t\t\t\t\tspan: isNumber(props.span) ? props.span : Number(props.span),\n\t\t\t\t\toffset: isNumber(props.offset) ? props.offset : Number(props.offset),\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconst result = {\n\t\t\t\t\tspan: 1,\n\t\t\t\t\toffset: isNumber(props.offset) ? props.offset : Number(props.offset),\n\t\t\t\t};\n\t\t\t\tif (props.row) {\n\t\t\t\t\tresult.span = cols.value;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t};\n\n\t\tconst elFormItemProps = useProps(props, formItemProps);\n\n\t\tconst ParcelComponent = props.grid ? FaLayoutGridItem : Fragment;\n\n\t\tuseRender(() => (\n\t\t\t<ParcelComponent {...getResponsive()}>\n\t\t\t\t<ElFormItem ref={formItemRef} {...elFormItemProps.value}>\n\t\t\t\t\t{{\n\t\t\t\t\t\tdefault: () => slots.default(),\n\t\t\t\t\t\t...((slots.label || props.tips) && {\n\t\t\t\t\t\t\tlabel: ({ label }: { label: string }): VNode[] =>\n\t\t\t\t\t\t\t\tprops.tips ? (\n\t\t\t\t\t\t\t\t\t<FaFormItemTip>\n\t\t\t\t\t\t\t\t\t\t{{\n\t\t\t\t\t\t\t\t\t\t\tlabel: () => slots.label({ label }),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t</FaFormItemTip>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\tslots.label({ label })\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t}),\n\t\t\t\t\t\t...(slots.error && { error: ({ error }: { error: string }): VNode[] => slots.error({ error }) }),\n\t\t\t\t\t}}\n\t\t\t\t</ElFormItem>\n\t\t\t</ParcelComponent>\n\t\t));\n\n\t\treturn useExpose(expose, {\n\t\t\t...computed(() => ({\n\t\t\t\t/** @description Size of the form item from the reference */\n\t\t\t\tsize: formItemRef.value?.size,\n\t\t\t\t/** @description Validation message from the form item */\n\t\t\t\tvalidateMessage: formItemRef.value?.validateMessage,\n\t\t\t\t/** @description Current validation state of the form item */\n\t\t\t\tvalidateState: formItemRef.value?.validateState,\n\t\t\t\t/** @description Function to validate the form item */\n\t\t\t\tvalidate: formItemRef.value?.validate,\n\t\t\t\t/** @description Function to clear validation status of the form item */\n\t\t\t\tclearValidate: formItemRef.value?.clearValidate,\n\t\t\t\t/** @description Reset the form item and clear validation results */\n\t\t\t\tresetField: formItemRef.value?.resetField,\n\t\t\t})).value,\n\t\t});\n\t},\n});\n"],"names":["faFormItemProps","formItemProps","tips","String","grid","type","Boolean","default","offset","Number","span","row","defineComponent","name","props","slots","makeSlots","setup","attrs","expose","formItemRef","ref","cols","inject","getResponsive","isNumber","result","value","elFormItemProps","useProps","ParcelComponent","FaLayoutGridItem","Fragment","useRender","_createVNode","ElFormItem","_mergeProps","label","FaFormItemTip","error","useExpose","computed","size","validateMessage","validateState","validate","clearValidate","resetField"],"mappings":";;;;;;;;;;AASO,MAAMA,kBAAkB;AAAA,EAC9B,GAAGC;AAAAA;AAAAA,EAEHC,MAAMC;AAAAA;AAAAA,EAENC,MAAM;AAAA,IACLC,MAAMC;AAAAA,IACNC,SAAS;AAAA,EACT;AAAA;AAAA,EAEDC,QAAQ;AAAA,IACPH,MAAM,CAACF,QAAQM,MAAM;AAAA,IACrBF,SAAS;AAAA,EACT;AAAA;AAAA,EAEDG,MAAM;AAAA,IACLL,MAAM,CAACF,QAAQM,MAAM;AAAA,EACrB;AAAA;AAAA,EAEDE,KAAKL;AACN;AAWA,MAAeM,2CAAgB;AAAA,EAC9BC,MAAM;AAAA,EACNC,OAAOd;AAAAA,EACPe,OAAOC,UAA4B;AAAA,EACnCC,MAAMH,OAAO;AAAA,IAAEI;AAAAA,IAAOH;AAAAA,IAAOI;AAAAA,EAAO,GAAG;AACtC,UAAMC,cAAcC;AAEpB,UAAMC,OAAOC,OAAoB,QAAQF,IAAI,CAAC,CAAC;AAG/C,UAAMG,gBAAgBA,MAGjB;AACJ,UAAI,CAACV,MAAMV,KAAM,QAAO;AACxB,UAAIU,MAAMJ,MAAM;AACf,eAAO;AAAA,UACNA,MAAMe,SAASX,MAAMJ,IAAI,IAAII,MAAMJ,OAAOD,OAAOK,MAAMJ,IAAI;AAAA,UAC3DF,QAAQiB,SAASX,MAAMN,MAAM,IAAIM,MAAMN,SAASC,OAAOK,MAAMN,MAAM;AAAA;MAErE,OAAO;AACN,cAAMkB,SAAS;AAAA,UACdhB,MAAM;AAAA,UACNF,QAAQiB,SAASX,MAAMN,MAAM,IAAIM,MAAMN,SAASC,OAAOK,MAAMN,MAAM;AAAA;AAEpE,YAAIM,MAAMH,KAAK;AACde,iBAAOhB,OAAOY,KAAKK;AAAAA,QACpB;AACA,eAAOD;AAAAA,MACR;AAAA;AAGD,UAAME,kBAAkBC,SAASf,OAAOb,aAAa;AAErD,UAAM6B,kBAAkBhB,MAAMV,OAAO2B,mBAAmBC;AAExDC,cAAU,MAAAC,YAAAJ,iBACYN,cAAa,GAAE;AAAA,MAAAjB,SAAAA,MAAA,CAAA2B,YAAAC,YAAAC,WAAA;AAAA,QAAA,OAClBhB;AAAAA,SAAiBQ,gBAAgBD,KAAK,GAAA;AAAA,QAErDpB,SAASA,MAAMQ,MAAMR,QAAS;AAAA,QAC9B,IAAKQ,MAAMsB,SAASvB,MAAMZ,SAAS;AAAA,UAClCmC,OAAOA,CAAC;AAAA,YAAEA;AAAAA,UAA0B,MACnCvB,MAAMZ,OAAIgC,YAAAI,eAAA,MAAA;AAAA,YAGPD,OAAOA,MAAMtB,MAAMsB,MAAM;AAAA,cAAEA;AAAAA,aAAO;AAAA,WAIpCtB,IAAAA,MAAMsB,MAAM;AAAA,YAAEA;AAAAA,WAAO;AAAA,QAExB;AAAA,QACA,GAAItB,MAAMwB,SAAS;AAAA,UAAEA,OAAOA,CAAC;AAAA,YAAEA;AAAAA,UAAyB,MAAexB,MAAMwB,MAAM;AAAA,YAAEA;AAAAA,WAAO;AAAA;MAAI,CAAA,CAAA;AAAA,IAAA,CAAA,CAInG;AAED,WAAOC,UAAUrB,QAAQ;AAAA,MACxB,GAAGsB,SAAS,MAAO;;AAAA;AAAA;AAAA,UAElBC,OAAMtB,iBAAYO,UAAZP,mBAAmBsB;AAAAA;AAAAA,UAEzBC,kBAAiBvB,iBAAYO,UAAZP,mBAAmBuB;AAAAA;AAAAA,UAEpCC,gBAAexB,iBAAYO,UAAZP,mBAAmBwB;AAAAA;AAAAA,UAElCC,WAAUzB,iBAAYO,UAAZP,mBAAmByB;AAAAA;AAAAA,UAE7BC,gBAAe1B,iBAAYO,UAAZP,mBAAmB0B;AAAAA;AAAAA,UAElCC,aAAY3B,iBAAYO,UAAZP,mBAAmB2B;AAAAA,QAC/B;AAAA,OAAC,EAAEpB;AAAAA,IACL,CAAC;AAAA,EACF;AACD,CAAC;"}